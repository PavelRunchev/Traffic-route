System.register(["./index-legacy.js","./imageBitmapUtils-legacy.js"],(function(e,t){"use strict";var a,r,i,s,o,n,l,u,p,d,g,y,c,h,b,v,w,m,M,f;return{setters:[e=>{a=e.bs,r=e.bt,i=e.dd,s=e.bE,o=e.bc,n=e.aQ,l=e.a9,u=e.X,p=e.s,d=e.x,g=e.y,y=e.z,c=e.f1,h=e.bw,b=e.c5,v=e.de,w=e.dg,m=e.ar,M=e.dX},e=>{f=e.o}],execute:function(){var t;const T=new c("0/0/0",0,0,0,void 0);let S=t=class extends(a(r(i(h)))){constructor(){super(...arguments),this.tileInfo=s.create({spatialReference:o.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new n(-20037508.342787,-20037508.34278,20037508.34278,20037508.342787,o.WebMercator),this.spatialReference=o.WebMercator}getTileBounds(e,t,a,r){const i=r||l();return T.level=e,T.row=t,T.col=a,T.extent=i,this.tileInfo.updateTileInfo(T),T.extent=void 0,i}fetchTile(e,t,a,r={}){const{signal:i}=r,s=this.getTileUrl(e,t,a),o={responseType:"image",signal:i,query:{...this.refreshParameters}};return u(s??"",o).then((e=>e.data))}async fetchImageBitmapTile(e,a,r,i={}){const{signal:s}=i;if(this.fetchTile!==t.prototype.fetchTile){const t=await this.fetchTile(e,a,r,i);return f(t,e,a,r,s)}const o=this.getTileUrl(e,a,r)??"",n={responseType:"blob",signal:s,query:{...this.refreshParameters}},{data:l}=await u(o,n);return f(l,e,a,r,s)}getTileUrl(){throw new p("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};d([g({type:s})],S.prototype,"tileInfo",void 0),d([g({type:["show","hide"]})],S.prototype,"listMode",void 0),d([g({readOnly:!0,value:"base-tile"})],S.prototype,"type",void 0),d([g({nonNullable:!0})],S.prototype,"fullExtent",void 0),d([g()],S.prototype,"spatialReference",void 0),S=t=d([y("esri.layers.BaseTileLayer")],S);const x=S,j=new b({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"});let B=class extends(a(v(w(x)))){constructor(e){super(e),this.type="bing-maps",this.tileInfo=new s({size:[256,256],dpi:96,origin:new m({x:-20037508.342787,y:20037508.342787,spatialReference:o.WebMercator}),spatialReference:o.WebMercator,lods:[new M({level:1,resolution:78271.5169639999,scale:295828763.795777}),new M({level:2,resolution:39135.7584820001,scale:147914381.897889}),new M({level:3,resolution:19567.8792409999,scale:73957190.948944}),new M({level:4,resolution:9783.93962049996,scale:36978595.474472}),new M({level:5,resolution:4891.96981024998,scale:18489297.737236}),new M({level:6,resolution:2445.98490512499,scale:9244648.868618}),new M({level:7,resolution:1222.99245256249,scale:4622324.434309}),new M({level:8,resolution:611.49622628138,scale:2311162.217155}),new M({level:9,resolution:305.748113140558,scale:1155581.108577}),new M({level:10,resolution:152.874056570411,scale:577790.554289}),new M({level:11,resolution:76.4370282850732,scale:288895.277144}),new M({level:12,resolution:38.2185141425366,scale:144447.638572}),new M({level:13,resolution:19.1092570712683,scale:72223.819286}),new M({level:14,resolution:9.55462853563415,scale:36111.909643}),new M({level:15,resolution:4.77731426794937,scale:18055.954822}),new M({level:16,resolution:2.38865713397468,scale:9027.977411}),new M({level:17,resolution:1.19432856685505,scale:4513.988705}),new M({level:18,resolution:.597164283559817,scale:2256.994353}),new M({level:19,resolution:.298582141647617,scale:1128.497176}),new M({level:20,resolution:.1492910708238085,scale:564.248588})]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(e){this._set("bingMetadata",e)}get copyright(){return null!=this.bingMetadata?this.bingMetadata.copyright:null}get operationalLayerType(){return j.toJSON(this.style)}get bingLogo(){return null!=this.bingMetadata?this.bingMetadata.brandLogoUri:null}load(e){return this.key?this.addResolvingPromise(this._getMetadata()):this.portalUrl?this.addResolvingPromise(this._getPortalBingKey().then((()=>this._getMetadata()))):this.addResolvingPromise(Promise.reject(new p("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(e,t,a){if(!this.loaded||null==this.bingMetadata)return null;const r=this.bingMetadata.resourceSets[0].resources[0],i=r.imageUrlSubdomains[t%r.imageUrlSubdomains.length],s=this._getQuadKey(e,t,a);return r.imageUrl.replace("{subdomain}",i).replace("{quadkey}",s)}async fetchAttributionData(){return this.load().then((()=>null==this.bingMetadata?null:{contributors:this.bingMetadata.resourceSets[0].resources[0].imageryProviders.map((e=>({attribution:e.attribution,coverageAreas:e.coverageAreas.map((e=>({zoomMin:e.zoomMin,zoomMax:e.zoomMax,score:1,bbox:[e.bbox[0],e.bbox[1],e.bbox[2],e.bbox[3]]})))})))}))}_getMetadata(){const e={road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style];return u(`https://dev.virtualearth.net/REST/v1/Imagery/Metadata/${e}`,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then((e=>{const t=e.data;if(200!==t.statusCode)throw new p("bingmapslayer:getmetadata",t.statusDescription);if(this.bingMetadata=t,0===this.bingMetadata.resourceSets.length)throw new p("bingmapslayer:getmetadata","no bing resourcesets");if(0===this.bingMetadata.resourceSets[0].resources.length)throw new p("bingmapslayer:getmetadata","no bing resources")})).catch((e=>{throw new p("bingmapslayer:getmetadata",e.message)}))}_getPortalBingKey(){return u(this.portalUrl??"",{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then((e=>{if(!e.data.bingKey)throw new p("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey})).catch((e=>{throw new p("bingmapslayer:getportalbingkey",e.message)}))}_getQuadKey(e,t,a){let r="";for(let i=e;i>0;i--){let e=0;const s=1<<i-1;!!(a&s)&&(e+=1),!!(t&s)&&(e+=2),r+=e.toString()}return r}};d([g({json:{read:!1,write:!1},value:null})],B.prototype,"bingMetadata",null),d([g({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],B.prototype,"type",void 0),d([g({type:s})],B.prototype,"tileInfo",void 0),d([g({type:String,readOnly:!0,json:{read:!1,write:!1}})],B.prototype,"copyright",null),d([g({type:String,json:{write:!1,read:!1}})],B.prototype,"key",void 0),d([g({type:j.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:j.read}}})],B.prototype,"style",void 0),d([g({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],B.prototype,"operationalLayerType",null),d([g({type:String,json:{write:!1,read:!1}})],B.prototype,"culture",void 0),d([g({type:String,json:{write:!1,read:!1}})],B.prototype,"region",void 0),d([g({type:String,json:{write:!0,read:!0}})],B.prototype,"portalUrl",void 0),d([g({type:Boolean,json:{write:!1,read:!1}})],B.prototype,"hasAttributionData",void 0),d([g({type:String,readOnly:!0})],B.prototype,"bingLogo",null),B=d([y("esri.layers.BingMapsLayer")],B),e("default",B)}}}));
