System.register(["./index-legacy.js","./Bitmap-legacy.js","./WGLContainer-legacy.js","./Container-legacy.js","./TileContainer-legacy.js"],(function(e,t){"use strict";var i,r,s,n,a,l,o,h,c;return{setters:[e=>{i=e.eQ,r=e.a9,s=e.x,n=e.z},e=>{a=e.b},e=>{l=e.r,o=e.h},e=>{h=e.E},e=>{c=e.i}],execute:function(){e({n:function(e,t,i,r){if(i.level===r.level)return t;const s=e.tileInfo.size,n=e.getTileResolution(i.level),a=e.getTileResolution(r.level);let l=e.getLODInfoAt(r.level);const o=l.getXForColumn(r.col),h=l.getYForRow(r.row);l=e.getLODInfoAt(i.level);const c=l.getXForColumn(i.col),d=l.getYForRow(i.row),m=function(e){return e instanceof HTMLImageElement?e.naturalWidth:e.width}(t)/s[0],p=function(e){return e instanceof HTMLImageElement?e.naturalHeight:e.height}(t)/s[1],f=Math.round(m*((o-c)/n)),g=Math.round(p*(-(h-d)/n)),b=Math.round(m*s[0]*(a/n)),w=Math.round(p*s[1]*(a/n)),R=u(s);return R.getContext("2d").drawImage(t,f,g,b,w,0,0,s[0],s[1]),R},o:u});let t=class extends l{constructor(e,t,i,r,s,n,l=null){super(e,t,i,r,s,n),this.bitmap=new a(l),this.bitmap.coordScale=[s,n],this.bitmap.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.bitmap.destroy()}beforeRender(e){this.bitmap.beforeRender(e),super.beforeRender(e)}afterRender(e){this.bitmap.afterRender(e),super.afterRender(e)}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}_createTransforms(){return{displayViewScreenMat3:i(),tileMat3:i()}}setTransform(e){super.setTransform(e),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap&&(this.bitmap.stage=null)}},d=class extends c{get requiresDedicatedFBO(){return this.children.some((e=>"additive"===e.bitmap.blendFunction))}createTile(e){const i=this._tileInfoView.getTileBounds(r(),e),s=this._tileInfoView.getTileResolution(e.level),[n,a]=this._tileInfoView.tileInfo.size;return new t(e,s,i[0],i[3],n,a)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"bitmap (tile)",brushes:[o.bitmap],target:()=>this.children.map((e=>e.bitmap)),drawPhase:h.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===h.MAP&&super.doRender(e)}};function u(e){const t=document.createElement("canvas");return[t.width,t.height]=e,t}e("r",(e=>{let t=class extends e{attach(){this.view.timeline.record(`${this.layer.title} (BitmapTileLayer) Attach`),this._bitmapView=new d(this._tileInfoView),this.container.addChild(this._bitmapView)}detach(){this.container.removeChild(this._bitmapView),this._bitmapView?.removeAllChildren(),this._bitmapView=null}};return t=s([n("esri.views.2d.layers.BitmapTileLayerView2D")],t),t}))}}}));
