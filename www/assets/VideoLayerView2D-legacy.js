System.register(["./index-legacy.js","./GraphicsLayer-legacy.js","./LayerView-legacy.js","./GraphicContainer-legacy.js","./GraphicsView2D-legacy.js","./Container-legacy.js","./highlightReasons-legacy.js","./definitions-legacy.js","./enums-legacy.js","./Texture-legacy.js","./AGraphicContainer-legacy.js","./TechniqueInstance-legacy.js","./UpdateTracking2D-legacy.js","./TurboLine-legacy.js","./enums-legacy2.js","./earcut-legacy.js","./GeometryUtils-legacy.js","./OptimizedGeometry-legacy.js","./Rect-legacy.js","./LabelMetric-legacy.js","./Program-legacy.js","./VertexElementDescriptor-legacy.js","./BindType-legacy.js","./Util-legacy.js","./constants-legacy.js","./TileContainer-legacy.js","./WGLContainer-legacy.js","./ProgramTemplate-legacy.js","./StyleDefinition-legacy.js","./config-legacy.js","./featureConversionUtils-legacy.js","./OptimizedFeatureSet-legacy.js","./FeatureCommandQueue-legacy.js","./vec3f32-legacy.js","./AttributeStore-legacy.js","./TimeOnly-legacy.js","./timeSupport-legacy.js","./json-legacy.js","./normalizeUtilsSync-legacy.js"],(function(e,t){"use strict";var i,l,s,r,a,n,o,y,h,c,m,p,u,g,f;return{setters:[e=>{i=e.db,l=e.bX,s=e.x,r=e.y,a=e.z,n=e.$,o=e.M,y=e.K,h=e.C,c=e.P},e=>{m=e.h},e=>{p=e.m,u=e.u},e=>{g=e.t},e=>{f=e.$},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){let t=class extends(i(l)){constructor(e){super(e),this.frameCenter=null,this.frameOutline=null,this.lineOfSight=null,this.sensorLocation=null,this.sensorTrail=null}};s([r({type:Boolean})],t.prototype,"frameCenter",void 0),s([r({type:Boolean})],t.prototype,"frameOutline",void 0),s([r({type:Boolean})],t.prototype,"lineOfSight",void 0),s([r({type:Boolean})],t.prototype,"sensorLocation",void 0),s([r({type:Boolean})],t.prototype,"sensorTrail",void 0),t=s([a("esri.layers.support.TelemetryDisplay")],t);const d=t,T=new n([255,127,0]);let b=class extends(p(u)){constructor(){super(...arguments),this._graphicsLayer=new m,this._frameOutlineGraphic=new o({symbol:{type:"simple-fill",outline:{type:"simple-line",color:T}}}),this._sensorTrailGraphic=new o({symbol:{type:"simple-line",color:T}}),this._lineOfSightGraphic=new o({symbol:{type:"simple-line",color:T}}),this._sensorLocationGraphic=new o({symbol:{type:"simple-marker",color:T}}),this._frameCenterGraphic=new o({symbol:{type:"simple-marker",color:T}}),this.layer=null,this.symbolColor=T,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=y(this._graphicsLayer)}initialize(){this.addHandles(h((()=>this.symbolColor),(()=>{this._frameOutlineGraphic.symbol.outline.color=this.symbolColor,this._sensorTrailGraphic.symbol.color=this.symbolColor,this._lineOfSightGraphic.symbol.color=this.symbolColor,this._sensorLocationGraphic.symbol.color=this.symbolColor,this._frameCenterGraphic.symbol.color=this.symbolColor}),c)),this._graphicsLayer.graphics.addMany([this._frameOutlineGraphic,this._sensorTrailGraphic,this._lineOfSightGraphic,this._sensorLocationGraphic,this._frameCenterGraphic]),this.visibleTelemetryElements=new d({frameCenter:this.layer.telemetryDisplay?.frameCenter??!0,frameOutline:this.layer.telemetryDisplay?.frameOutline??!0,lineOfSight:this.layer.telemetryDisplay?.lineOfSight??!0,sensorLocation:this.layer.telemetryDisplay?.sensorLocation??!0,sensorTrail:this.layer.telemetryDisplay?.sensorTrail??!0})}attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new g(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([h((()=>[this.layer.telemetryDisplay?.frameCenter,this.layer.telemetryDisplay?.frameOutline,this.layer.telemetryDisplay?.sensorLocation,this.layer.telemetryDisplay?.sensorTrail,this.layer.telemetryDisplay?.lineOfSight]),(()=>this._updateVisibleTelemetryElements()),c),h((()=>[this.layer.telemetry,this.visibleTelemetryElements?.frameCenter,this.visibleTelemetryElements?.frameOutline,this.visibleTelemetryElements?.sensorLocation,this.visibleTelemetryElements?.sensorTrail,this.visibleTelemetryElements?.lineOfSight]),(()=>this._updateGraphicGeometries()),c)])}detach(){this.container.removeAllChildren(),this.graphicsView=y(this.graphicsView)}supportsSpatialReference(e){return!0}moveStart(){}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(e){this.graphicsView.processUpdate(e)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:e}=this.layer,{visibleTelemetryElements:t}=this;e&&t&&(t.frameOutline&&e.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,t.sensorTrail&&e.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,t.lineOfSight&&e.lineOfSight?this._lineOfSightGraphic.geometry=this.layer.telemetry.lineOfSight:this._lineOfSightGraphic.geometry=null,t.sensorLocation&&e.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,t.frameCenter&&e.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}};s([r()],b.prototype,"graphicsView",void 0),s([r()],b.prototype,"layer",void 0),s([r()],b.prototype,"symbolColor",void 0),s([r({type:d})],b.prototype,"visibleTelemetryElements",void 0),b=s([a("esri.views.2d.layers.VideoLayerView2D")],b),e("default",b)}}}));
