System.register(["./index-legacy.js","./LayerView-legacy.js","./Container-legacy.js","./highlightReasons-legacy.js","./definitions-legacy.js","./enums-legacy.js","./Texture-legacy.js"],(function(e,t){"use strict";var i,a,s,r,n,d,l,o,u,h;return{setters:[e=>{i=e.V,a=e.A,s=e.B,r=e.C,n=e.w,d=e.D,l=e.x,o=e.z},e=>{u=e.m,h=e.u},null,null,null,null,null],execute:function(){const t=Symbol();let c=class extends(u(h)){constructor(){super(...arguments),this.layerViews=new i,this._debouncedUpdate=a((async()=>{const{layer:e,parent:{footprintLayerView:i}}=this;let a=[];if(i){const t=this._createQuery(),{features:s}=await i.queryFeatures(t);this.suspended||(a=s.map((t=>e.acquireLayer(t))))}this.removeHandles(t),this.addHandles(a,t)}))}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange((()=>this.layerViews),(()=>this._updateStageChildren()),{initial:!0}),s((()=>!1===this.parent.footprintLayerView?.dataUpdating),(()=>this._updateLayers())),r((()=>[this.layer.maximumVisibleSublayers,this.suspended,this.parent.footprintLayerView?.filter]),(()=>this._updateLayers()))])}detach(){this.container.removeAllChildren(),this.removeHandles(t)}update(e){}moveStart(){}viewChange(){}moveEnd(){}isUpdating(){return this.layerViews.some((e=>e.updating))}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach(((e,t)=>this.container.addChildAt(e.container,t)))}_updateLayers(){this.suspended?this.removeHandles(t):this._updatingHandles.addPromise(this._debouncedUpdate().catch((e=>{n.getLogger(this).error(e)})))}_createQuery(){const{parent:{footprintLayerView:e},layer:{maximumVisibleSublayers:t,parent:{itemTypeField:i,itemSourceField:a,objectIdField:s,orderBy:r}}}=this,n=`${i} <> 'Scene Service'`,l=e.createQuery();l.returnGeometry=!1,l.num=t,l.outFields=[s,a],l.where=d(l.where,n);const o=r?.find((e=>e.field&&!e.valueExpression));return o?.field&&(l.orderByFields=[`${o.field} ${"descending"===o.order?"DESC":"ASC"}`]),l}};c=l([o("esri.views.2d.layers.CatalogDynamicGroupLayerView2D")],c),e("default",c)}}}));
