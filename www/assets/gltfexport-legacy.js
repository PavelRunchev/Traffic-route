System.register(["./index-legacy.js","./mat4f64-legacy.js","./quat-legacy.js","./quatf64-legacy.js","./MeshLocalVertexSpace-legacy.js","./Mesh-legacy.js","./georeference-legacy.js","./enums-legacy.js","./resourceUtils-legacy.js","./mat3f64-legacy.js","./imageUtils-legacy2.js","./meshVertexSpaceUtils-legacy.js","./vec3-legacy.js","./earcut-legacy.js","./DoubleArray-legacy.js","./Indices-legacy.js","./deduplicate-legacy.js","./plane-legacy.js","./triangle-legacy.js","./Util-legacy.js","./ObjectStack-legacy.js","./lineSegment-legacy.js","./basicInterfaces-legacy.js","./VertexAttribute-legacy.js","./External-legacy.js","./infoFor3D-legacy.js","./computeTranslationToOriginAndRotation-legacy.js","./BufferView-legacy.js"],(function(e,t){"use strict";var s,i,n,r,a,o,c,l,h,u,f,d,g,_,p,m,w,y,E,T,A,b,x,R,S,I,N,M,O,B,L,C,V,F;return{setters:[e=>{s=e.s,i=e.jN,n=e.U,r=e.eT,a=e.cS,o=e.cq,c=e.cs,l=e.ct,h=e.g$,u=e.gL,f=e.cQ,d=e.gn,g=e.ev,_=e.hZ,p=e.gI,m=e.e7,w=e.w,y=e.hF,E=e.ar,T=e.jU},e=>{A=e.o,b=e.e},e=>{x=e.N,R=e.T},e=>{S=e.o,I=e.r,N=e.e},e=>{M=e.i},e=>{O=e.a},e=>{B=e.O,L=e.C},e=>{C=e.C,V=e.D},e=>{F=e.r},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){async function t(e){const t=z(e);if(null==t)throw new s("imageToArrayBuffer","Unsupported image type");const r=await async function(e){if(!(e instanceof HTMLImageElement))return"image/png";const t=e.src;if(i(t)){const e=n(t);return"image/jpeg"===e?.mediaType?e.mediaType:"image/png"}return/\.png$/i.test(t)?"image/png":/\.(jpg|jpeg)$/i.test(t)?"image/jpeg":"image/png"}(e),a=await new Promise((e=>t.toBlob(e,r)));if(!a)throw new s("imageToArrayBuffer","Failed to encode image");return{data:await a.arrayBuffer(),type:r}}function z(e){if(e instanceof HTMLCanvasElement)return e;if(e instanceof HTMLVideoElement)return null;const t=document.createElement("canvas");t.width=e.width,t.height=e.height;const s=t.getContext("2d");return e instanceof HTMLImageElement?s.drawImage(e,0,0,e.width,e.height):e instanceof ImageData&&s.putImageData(e,0,0),t}var U;e("toBinaryGLTF",(function(e,t){const s=new se,i=new ie;return s.addScene(i),i.addNode(new ne(e)),function(e,t){return async function(e,t,s){const i=new ee(e,t=t||{},s);let n=i.params;n?n.origin||(n.origin=new E({x:-1,y:-1,z:-1})):n={origin:new E({x:-1,y:-1,z:-1})};const r=n.origin,a=i.gltf,o=a.extras?.promises??[];let c=1,l=1,h=null;await Promise.allSettled(o);const u={origin:r};delete a.extras;const f="number"==typeof t.jsonSpacing?t.jsonSpacing:4,d=JSON.stringify(a,((e,s)=>{if("extras"!==e){if(s instanceof ArrayBuffer){if(function(e){if(e.byteLength<8)return!1;const t=new Uint8Array(e);return 137===t[0]&&80===t[1]&&78===t[2]&&71===t[3]&&13===t[4]&&10===t[5]&&26===t[6]&&10===t[7]}(s))switch(t.imageOutputType){case G.DataURI:case G.GLB:break;case G.External:default:{const e=`img${l}.png`;return l++,u[e]=s,e}}switch(t.bufferOutputType){case P.DataURI:return function(e){const t=[],s=new Uint8Array(e);for(let i=0;i<s.length;i++)t.push(String.fromCharCode(s[i]));return"data:application/octet-stream;base64,"+btoa(t.join(""))}(s);case P.GLB:if(h)throw new Error("Already encountered an ArrayBuffer, there should only be one in the GLB format.");return void(h=s);case P.External:default:{const e=`data${c}.bin`;return c++,u[e]=s,e}}}return s}}),f);return t.bufferOutputType===P.GLB||t.imageOutputType===G.GLB?u[ae]=new D(d,h).buffer:u[re]=d,u}(e,{bufferOutputType:P.GLB,imageOutputType:G.GLB,jsonSpacing:0},t)}(s,t).then((e=>new oe(e[ae],e.origin)))})),function(e){e[e.JSON=1313821514]="JSON",e[e.BIN=5130562]="BIN"}(U||(U={}));let D=class e{constructor(t,s){if(!t)throw new Error("GLB requires a JSON gltf chunk");this._length=e.HEADER_SIZE,this._length+=e.CHUNK_HEADER_SIZE;const i=this._textToArrayBuffer(t);if(this._length+=this._alignTo(i.byteLength,4),s&&(this._length+=e.CHUNK_HEADER_SIZE,this._length+=s.byteLength,s.byteLength%4))throw new Error("Expected BIN chunk length to be divisible by 4 at this point");this.buffer=new ArrayBuffer(this._length),this._outView=new DataView(this.buffer),this._writeHeader();const n=this._writeChunk(i,12,U.JSON,32);s&&this._writeChunk(s,n,U.BIN)}_writeHeader(){this._outView.setUint32(0,e.MAGIC,!0),this._outView.setUint32(4,e.VERSION,!0),this._outView.setUint32(8,this._length,!0)}_writeChunk(e,t,s,i=0){const n=this._alignTo(e.byteLength,4);for(this._outView.setUint32(t,n,!0),this._outView.setUint32(t+=4,s,!0),this._writeArrayBuffer(this._outView.buffer,e,t+=4,0,e.byteLength),t+=e.byteLength;t%4;)i&&this._outView.setUint8(t,i),t++;return t}_writeArrayBuffer(e,t,s,i,n){new Uint8Array(e,s,n).set(new Uint8Array(t,i,n),0)}_textToArrayBuffer(e){return(new TextEncoder).encode(e).buffer}_alignTo(e,t){return t*Math.ceil(e/t)}};var P,G,v,j,Y,k,H;D.HEADER_SIZE=12,D.CHUNK_HEADER_SIZE=8,D.MAGIC=1179937895,D.VERSION=2,function(e){e[e.External=0]="External",e[e.DataURI=1]="DataURI",e[e.GLB=2]="GLB"}(P||(P={})),function(e){e[e.External=0]="External",e[e.DataURI=1]="DataURI",e[e.GLB=2]="GLB"}(G||(G={})),function(e){e[e.ARRAY_BUFFER=34962]="ARRAY_BUFFER",e[e.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER"}(v||(v={})),function(e){e.SCALAR="SCALAR",e.VEC2="VEC2",e.VEC3="VEC3",e.VEC4="VEC4",e.MAT2="MAT2",e.MAT3="MAT3",e.MAT4="MAT4"}(j||(j={})),function(e){e[e.POINTS=0]="POINTS",e[e.LINES=1]="LINES",e[e.LINE_LOOP=2]="LINE_LOOP",e[e.LINE_STRIP=3]="LINE_STRIP",e[e.TRIANGLES=4]="TRIANGLES",e[e.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(Y||(Y={})),function(e){e.OPAQUE="OPAQUE",e.MASK="MASK",e.BLEND="BLEND"}(k||(k={})),function(e){e[e.NoColor=0]="NoColor",e[e.FaceColor=1]="FaceColor",e[e.VertexColor=2]="VertexColor"}(H||(H={}));let Z=class{constructor(e,t,s,i,n){this._buffer=e,this._componentType=s,this._dataType=i,this._data=[],this._isFinalized=!1,this._accessorIndex=-1,this._accessorAttribute=null,this._accessorMin=null,this._accessorMax=null,t.bufferViews||(t.bufferViews=[]),this.index=t.bufferViews.length,this._bufferView={buffer:e.index,byteLength:-1,target:n};const r=this._getElementSize();r>=4&&n!==v.ELEMENT_ARRAY_BUFFER&&(this._bufferView.byteStride=r),t.bufferViews.push(this._bufferView),this._numComponentsForDataType=this._calculateNumComponentsForDataType()}push(e){const t=this._data.length;if(this._data.push(e),this._accessorIndex>=0){const s=t%this._numComponentsForDataType,i=this._accessorMin[s];this._accessorMin[s]="number"!=typeof i?e:Math.min(i,e);const n=this._accessorMax[s];this._accessorMax[s]="number"!=typeof n?e:Math.max(n,e)}}get dataSize(){return this._data.length*this._sizeComponentType()}get byteSize(){return function(e,t){return t*Math.ceil(e/t)}(this.dataSize,4)}getByteOffset(){if(!this._isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this._buffer.getByteOffset(this)}get byteOffset(){if(!this._isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this._buffer.getByteOffset(this)}_createTypedArray(e,t){switch(this._componentType){case C.BYTE:return new Int8Array(e,t);case C.FLOAT:return new Float32Array(e,t);case C.SHORT:return new Int16Array(e,t);case C.UNSIGNED_BYTE:return new Uint8Array(e,t);case C.UNSIGNED_INT:return new Uint32Array(e,t);case C.UNSIGNED_SHORT:return new Uint16Array(e,t)}}writeOutToBuffer(e,t){this._createTypedArray(e,t).set(this._data)}writeAsync(e){if(this._asyncWritePromise)throw new Error("Can't write multiple bufferView values asynchronously");return this._asyncWritePromise=e.then((e=>{const t=new Uint8Array(e);for(let s=0;s<t.length;++s)this._data.push(t[s]);delete this._asyncWritePromise})),this._asyncWritePromise}startAccessor(e){if(this._accessorIndex>=0)throw new Error("Accessor was started without ending the previous one");this._accessorIndex=this._data.length,this._accessorAttribute=e;const t=this._numComponentsForDataType;this._accessorMin=new Array(t),this._accessorMax=new Array(t)}endAccessor(){if(this._accessorIndex<0)throw new Error("An accessor was not started, but was attempted to be ended");const e=this._getElementSize(),t=this._numComponentsForDataType,s=(this._data.length-this._accessorIndex)/t;if(s%1)throw new Error("An accessor was ended with missing component values");for(let n=0;n<this._accessorMin.length;++n)"number"!=typeof this._accessorMin[n]&&(this._accessorMin[n]=0),"number"!=typeof this._accessorMax[n]&&(this._accessorMax[n]=0);const i={byteOffset:e*(this._accessorIndex/t),componentType:this._componentType,count:s,type:this._dataType,min:this._accessorMin,max:this._accessorMax,name:this._accessorAttribute};switch(this._accessorAttribute){case"TEXCOORD_0":case"TEXCOORD_1":case"COLOR_0":case"WEIGHTS_0":switch(this._componentType){case C.UNSIGNED_BYTE:case C.UNSIGNED_SHORT:i.normalized=!0}}return this._accessorIndex=-1,this._accessorAttribute=null,this._accessorMin=null,this._accessorMax=null,i}get finalized(){return this._finalizedPromise?this._finalizedPromise:this._isFinalized?this._finalizedPromise=Promise.resolve():this._finalizedPromise=new Promise((e=>this._finalizedPromiseResolve=e))}async finalize(){const e=this._bufferView,t=this._buffer.getViewFinalizePromises(this);this._asyncWritePromise&&t.push(this._asyncWritePromise),await Promise.allSettled(t),this._isFinalized=!0,e.byteOffset=this.getByteOffset(),e.byteLength=this.dataSize,this._finalizedPromiseResolve&&this._finalizedPromiseResolve()}_getElementSize(){return this._sizeComponentType()*this._numComponentsForDataType}_sizeComponentType(){switch(this._componentType){case C.BYTE:case C.UNSIGNED_BYTE:return 1;case C.SHORT:case C.UNSIGNED_SHORT:return 2;case C.UNSIGNED_INT:case C.FLOAT:return 4}}_calculateNumComponentsForDataType(){switch(this._dataType){case j.SCALAR:return 1;case j.VEC2:return 2;case j.VEC3:return 3;case j.VEC4:case j.MAT2:return 4;case j.MAT3:return 9;case j.MAT4:return 16}}},J=class{constructor(e){this._gltf=e,this._bufferViews=[],this._isFinalized=!1,e.buffers||(e.buffers=[]),this.index=e.buffers.length;const t={byteLength:-1};e.buffers.push(t),this._buffer=t}addBufferView(e,t,s){if(this._finalizePromise)throw new Error("Cannot add buffer view after fiinalizing buffer");const i=new Z(this,this._gltf,e,t,s);return this._bufferViews.push(i),i}getByteOffset(e){let t=0;for(const s of this._bufferViews){if(s===e)return t;t+=s.byteSize}throw new Error("Given bufferView was not present in this buffer")}getViewFinalizePromises(e){const t=[];for(const s of this._bufferViews){if(e&&s===e)return t;t.push(s.finalized)}return t}getArrayBuffer(){if(!this._isFinalized)throw new Error("Cannot get ArrayBuffer from Buffer before it is finalized");const e=this._getTotalSize(),t=new ArrayBuffer(e);let s=0;for(const i of this._bufferViews)i.writeOutToBuffer(t,s),s+=i.byteSize;return t}finalize(){if(this._finalizePromise)throw new Error(`Buffer ${this.index} was already finalized`);return this._finalizePromise=Promise.allSettled(this.getViewFinalizePromises()).then((()=>{this._isFinalized=!0;const e=this.getArrayBuffer();this._buffer.byteLength=e.byteLength,this._buffer.uri=e})),this._gltf.extras?.promises.push(this._finalizePromise),this._finalizePromise}_getTotalSize(){let e=0;for(const t of this._bufferViews)e+=t.byteSize;return e}};function K(e,t){null==t.normal&&(t.normal=new Float32Array(t.position.length));const s=e.faces,{position:i,normal:n}=t,l=s.length/3;for(let c=0;c<l;++c){const e=3*s[3*c],t=3*s[3*c+1],l=3*s[3*c+2],h=r(W,i[e],i[e+1],i[e+2]),u=r($,i[t],i[t+1],i[t+2]),f=r(X,i[l],i[l+1],i[l+2]),d=a(u,u,h),g=a(f,f,h),_=o(d,d,g);n[e]+=_[0],n[e+1]+=_[1],n[e+2]+=_[2],n[t]+=_[0],n[t+1]+=_[1],n[t+2]+=_[2],n[l]+=_[0],n[l+1]+=_[1],n[l+2]+=_[2]}for(let a=0;a<n.length;a+=3)r(q,n[a],n[a+1],n[a+2]),c(q,q),n[a]=q[0],n[a+1]=q[1],n[a+2]=q[2]}const W=l(),$=l(),X=l(),q=l(),Q=()=>w.getLogger("gltf");class ee{constructor(e,t,s){this.params={},this._materialMap=new Array,this._imageMap=new Map,this._textureMap=new Map,this.gltf={asset:{version:"2.0",copyright:e.copyright,generator:e.generator},extras:{options:t,binChunkBuffer:null,promises:[]}},s&&(this.params=s),this._addScenes(e)}_addScenes(e){this.gltf.scene=e.defaultScene;const t=this.gltf.extras,s=t.options.bufferOutputType===P.GLB||t.options.imageOutputType===G.GLB;s&&(t.binChunkBuffer=new J(this.gltf)),e.forEachScene((e=>{this._addScene(e)})),s&&t.binChunkBuffer.finalize()}_addScene(e){this.gltf.scenes||(this.gltf.scenes=[]);const t={};e.name&&(t.name=e.name),e.forEachNode((e=>{t.nodes||(t.nodes=[]),t.nodes.push(...this._addNodes(e))})),this.gltf.scenes.push(t)}_addNodes(e){this.gltf.nodes||(this.gltf.nodes=[]);const t={};e.name&&(t.name=e.name);const s=e.translation;h(s,u)||(t.translation=f(s));const i=e.rotation;x(i,S)||(t.rotation=I(i));const n=e.scale;h(n,d)||(t.scale=f(n));const r=this.gltf.nodes.length;if(this.gltf.nodes.push(t),e.mesh&&e.mesh.vertexAttributes.position){const s=this._createMeshes(e.mesh),i=[r];if(1===s.length)this._addMesh(t,s[0]);else for(const e of s){const t={};this._addMesh(t,e),i.push(this.gltf.nodes.length),this.gltf.nodes.push(t)}return i}return e.forEachNode((e=>{t.children||(t.children=[]),t.children.push(...this._addNodes(e))})),[r]}_addMesh(e,t){this.gltf.meshes??=[];const s=this.gltf.meshes.length;this.gltf.meshes.push(t),e.mesh=s}_createMeshes(e){const t=this.gltf.extras,i=t.options.bufferOutputType===P.GLB;let n;n=i?t.binChunkBuffer:new J(this.gltf),this.params.origin||(this.params.origin=e.anchor);const{ignoreLocalTransform:r}=this.params,a=r?null:e.transform,{vertexSpace:o,spatialReference:c}=e,l=o.origin,h=e.vertexAttributes;let u=null;if("local"===o.type){const e=g(c);_(te,a?.localMatrix??A,[e,e,e]),u=B(h,te)}else{const e=r?new M({origin:l?f(l):null}):o;u=L(h,e,a,this.params.origin,{geographic:this.params.geographic,unit:"meters"})}if(null==u)throw new s("Error during gltf export.");h.position&&u.position===h.position&&(u.position=h.position.slice()),h.normal&&u.normal===h.normal&&(u.normal=h.normal.slice()),h.tangent&&u.tangent===h.tangent&&(u.tangent=h.tangent.slice()),function(e,t){if(e.components)for(const s of e.components)s.faces&&"smooth"===s.shading&&K(s,t)}(e,u),this._flipYZAxis(u);const d=n.addBufferView(C.FLOAT,j.VEC3,v.ARRAY_BUFFER);let p,m,w,y;u.normal&&(p=n.addBufferView(C.FLOAT,j.VEC3,v.ARRAY_BUFFER)),h.uv&&(m=n.addBufferView(C.FLOAT,j.VEC2,v.ARRAY_BUFFER)),u.tangent&&(w=n.addBufferView(C.FLOAT,j.VEC4,v.ARRAY_BUFFER)),h.color&&(y=n.addBufferView(C.UNSIGNED_BYTE,j.VEC4,v.ARRAY_BUFFER)),d.startAccessor("POSITION"),p&&p.startAccessor("NORMAL"),m&&m.startAccessor("TEXCOORD_0"),w&&w.startAccessor("TANGENT"),y&&y.startAccessor("COLOR_0");const E=u.position.length/3,{position:T,normal:b,tangent:x}=u,{color:R,uv:S}=h;for(let s=0;s<E;++s)d.push(T[3*s]),d.push(T[3*s+1]),d.push(T[3*s+2]),p&&null!=b&&(p.push(b[3*s]),p.push(b[3*s+1]),p.push(b[3*s+2])),m&&null!=S&&(m.push(S[2*s]),m.push(S[2*s+1])),w&&null!=x&&(w.push(x[4*s]),w.push(x[4*s+1]),w.push(x[4*s+2]),w.push(x[4*s+3])),y&&null!=R&&(y.push(R[4*s]),y.push(R[4*s+1]),y.push(R[4*s+2]),y.push(R[4*s+3]));const I=d.endAccessor(),N=this._addAccessor(d.index,I);let O,V,F,z,U;if(p){const e=p.endAccessor();O=this._addAccessor(p.index,e)}if(m){const e=m.endAccessor();V=this._addAccessor(m.index,e)}if(w){const e=w.endAccessor();F=this._addAccessor(w.index,e)}if(y){const e=y.endAccessor();z=this._addAccessor(y.index,e)}const D=[];return e.components&&e.components.length>0&&e.components[0].faces?(U=n.addBufferView(C.UNSIGNED_INT,j.SCALAR,v.ELEMENT_ARRAY_BUFFER),this._addMeshVertexIndexed(U,e.components,D,N,O,V,F,z)):this._addMeshVertexNonIndexed(e.components,D,N,O,V,F,z),d.finalize(),p&&p.finalize(),m&&m.finalize(),w&&w.finalize(),U&&U.finalize(),y&&y.finalize(),i||n.finalize(),D}_flipYZAxis({position:e,normal:t,tangent:s}){this._flipYZBuffer(e,3),this._flipYZBuffer(t,3),this._flipYZBuffer(s,4)}_flipYZBuffer(e,t){if(null!=e)for(let s=1,i=2;s<e.length;s+=t,i+=t){const t=e[s],n=e[i];e[s]=n,e[i]=-t}}_addMaterial(e){if(null===e)return;const t=this._materialMap.indexOf(e);if(-1!==t)return t;this.gltf.materials||(this.gltf.materials=[]);const s={};switch(e.alphaMode){case"mask":s.alphaMode=k.MASK;break;case"auto":case"blend":s.alphaMode=k.BLEND}.5!==e.alphaCutoff&&(s.alphaCutoff=e.alphaCutoff),e.doubleSided&&(s.doubleSided=e.doubleSided),s.pbrMetallicRoughness={};const i=e=>e**2.1,n=e=>{const t=e.toRgba();return t[0]=i(t[0]/255),t[1]=i(t[1]/255),t[2]=i(t[2]/255),t};if(null!=e.color&&(s.pbrMetallicRoughness.baseColorFactor=n(e.color)),null!=e.colorTexture&&(s.pbrMetallicRoughness.baseColorTexture=this._createTextureInfo(e.colorTexture,e.colorTextureTransform)),null!=e.normalTexture&&(s.normalTexture=this._createTextureInfo(e.normalTexture,e.normalTextureTransform)),e instanceof O){if(null!=e.emissiveTexture&&(s.emissiveTexture=this._createTextureInfo(e.emissiveTexture,e.emissiveTextureTransform)),null!=e.emissiveColor){const t=n(e.emissiveColor);s.emissiveFactor=[t[0],t[1],t[2]]}null!=e.occlusionTexture&&(s.occlusionTexture=this._createTextureInfo(e.occlusionTexture,e.occlusionTextureTransform)),null!=e.metallicRoughnessTexture&&(s.pbrMetallicRoughness.metallicRoughnessTexture=this._createTextureInfo(e.metallicRoughnessTexture,e.metallicRoughnessTextureTransform)),s.pbrMetallicRoughness.metallicFactor=e.metallic,s.pbrMetallicRoughness.roughnessFactor=e.roughness}else s.pbrMetallicRoughness.metallicFactor=1,s.pbrMetallicRoughness.roughnessFactor=1,Q().warnOnce("Meshes exported to GLTF without MeshMaterialMetallicRoughness material will appear different when imported back.");const r=this.gltf.materials.length;return this.gltf.materials.push(s),this._materialMap.push(e),r}_createTextureInfo(e,t){const s={index:this._addTexture(e)};return t?(s.extensions||(s.extensions={}),s.extensions.KHR_texture_transform={scale:t.scale,offset:t.offset,rotation:p(t.rotation)},s):s}_addTexture(e){const t=this.gltf.textures??[];return this.gltf.textures=t,m(this._textureMap,e,(()=>{const s={sampler:this._addSampler(e),source:this._addImage(e)},i=t.length;return t.push(s),i}))}_addImage(e){const s=this._imageMap.get(e);if(null!=s)return s;this.gltf.images||(this.gltf.images=[]);const i={};if(e.url)i.uri=e.url;else{const s=e.data;i.extras=s;for(let e=0;e<this.gltf.images.length;++e)if(s===this.gltf.images[e].extras)return e;const n=this.gltf.extras;switch(n.options.imageOutputType){case G.GLB:{const e=n.binChunkBuffer.addBufferView(C.UNSIGNED_BYTE,j.SCALAR);if(F(s))null!=s.data&&e.writeOutToBuffer(s.data,0);else{const n=t(s).then((({data:e,type:t})=>(i.mimeType=t,e)));e.writeAsync(n).then((()=>{e.finalize()}))}i.bufferView=e.index;break}case G.DataURI:if(F(s)){Q().warnOnce("Image export for basis compressed textures not available.");break}i.uri=function(e){const t=z(e);return null!=t?t.toDataURL():""}(s);break;default:if(F(s)){Q().warnOnce("Image export for basis compressed textures not available.");break}n.promises.push(t(s).then((({data:e,type:t})=>{i.uri=e,i.mimeType=t})))}}const n=this.gltf.images.length;return this.gltf.images.push(i),this._imageMap.set(e,n),n}_addSampler(e){this.gltf.samplers||(this.gltf.samplers=[]);let t=V.REPEAT,s=V.REPEAT;if("string"==typeof e.wrap)switch(e.wrap){case"clamp":t=V.CLAMP_TO_EDGE,s=V.CLAMP_TO_EDGE;break;case"mirror":t=V.MIRRORED_REPEAT,s=V.MIRRORED_REPEAT}else{switch(e.wrap.vertical){case"clamp":s=V.CLAMP_TO_EDGE;break;case"mirror":s=V.MIRRORED_REPEAT}switch(e.wrap.horizontal){case"clamp":t=V.CLAMP_TO_EDGE;break;case"mirror":t=V.MIRRORED_REPEAT}}const i={wrapS:t,wrapT:s};for(let r=0;r<this.gltf.samplers.length;++r)if(JSON.stringify(i)===JSON.stringify(this.gltf.samplers[r]))return r;const n=this.gltf.samplers.length;return this.gltf.samplers.push(i),n}_addAccessor(e,t){this.gltf.accessors||(this.gltf.accessors=[]);const s={bufferView:e,byteOffset:t.byteOffset,componentType:t.componentType,count:t.count,type:t.type,min:t.min,max:t.max,name:t.name};t.normalized&&(s.normalized=!0);const i=this.gltf.accessors.length;return this.gltf.accessors.push(s),i}_addMeshVertexIndexed(e,t,s,i,n,r,a,o){const c=new Map;for(const l of t){e.startAccessor("INDICES");for(let s=0;s<l.faces.length;++s)e.push(l.faces[s]);const t=e.endAccessor(),h={attributes:{POSITION:i},indices:this._addAccessor(e.index,t),material:this._addMaterial(l.material)};n&&"flat"!==l.shading&&(h.attributes.NORMAL=n),r&&(h.attributes.TEXCOORD_0=r),a&&"flat"!==l.shading&&(h.attributes.TANGENT=a),o&&(h.attributes.COLOR_0=o);const u=c.get(l.name);if(u)u.primitives.push(h);else{const e={name:l.name,primitives:[h]};c.set(l.name,e),s.push(e)}}}_addMeshVertexNonIndexed(e,t,s,i,n,r,a){const o={primitives:[]};t.push(o);const c={attributes:{POSITION:s}};i&&(c.attributes.NORMAL=i),n&&(c.attributes.TEXCOORD_0=n),r&&(c.attributes.TANGENT=r),a&&(c.attributes.COLOR_0=a),e&&(c.material=this._addMaterial(e[0].material)),o.primitives.push(c)}}const te=b();let se=class{constructor(){this.copyright="",this.defaultScene=0,this.generator="",this._scenes=[]}addScene(e){if(this._scenes.includes(e))throw new Error("Scene already added");this._scenes.push(e)}removeScene(e){y(this._scenes,e)}forEachScene(e){this._scenes.forEach(e)}};class ie{constructor(){this.name="",this._nodes=[]}addNode(e){if(this._nodes.includes(e))throw new Error("Node already added");this._nodes.push(e)}forEachNode(e){this._nodes.forEach(e)}}class ne{constructor(e){this.mesh=e,this.name="",this.translation=l(),this.rotation=N(),this.scale=f(d),this._nodes=[]}addNode(e){if(this._nodes.includes(e))throw new Error("Node already added");this._nodes.push(e)}forEachNode(e){this._nodes.forEach(e)}set rotationAngles(e){R(this.rotation,e[0],e[1],e[2])}}const re="model.gltf",ae="model.glb";class oe{constructor(e,t){this._file={type:"model/gltf-binary",data:e},this.origin=t}buffer(){return Promise.resolve(this._file)}download(e){T(new Blob([this._file.data],{type:this._file.type}),e)}}}}}));
