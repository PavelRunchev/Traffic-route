System.register(["./index-legacy.js","./Stop-legacy.js","./highlightReasons-legacy.js","./LayerView-legacy.js","./GraphicContainer-legacy.js","./GraphicsView2D-legacy.js","./Container-legacy.js","./definitions-legacy.js","./enums-legacy.js","./Texture-legacy.js","./AGraphicContainer-legacy.js","./TechniqueInstance-legacy.js","./UpdateTracking2D-legacy.js","./TurboLine-legacy.js","./enums-legacy2.js","./earcut-legacy.js","./GeometryUtils-legacy.js","./OptimizedGeometry-legacy.js","./Rect-legacy.js","./LabelMetric-legacy.js","./Program-legacy.js","./VertexElementDescriptor-legacy.js","./BindType-legacy.js","./Util-legacy.js","./constants-legacy.js","./TileContainer-legacy.js","./WGLContainer-legacy.js","./ProgramTemplate-legacy.js","./StyleDefinition-legacy.js","./config-legacy.js","./featureConversionUtils-legacy.js","./OptimizedFeatureSet-legacy.js","./FeatureCommandQueue-legacy.js","./vec3f32-legacy.js","./AttributeStore-legacy.js","./TimeOnly-legacy.js","./timeSupport-legacy.js","./json-legacy.js","./normalizeUtilsSync-legacy.js"],(function(e,t){"use strict";var i,r,s,a,l,n,h,o,c,g,u,p,d,y,_,w,m,f,j,k,G;return{setters:[e=>{i=e.V,r=e.T,s=e.P,a=e.q,l=e.n,n=e.C,h=e.x,o=e.y,c=e.z},e=>{g=e.m,u=e.c,p=e.O,d=e.f,y=e.j,_=e.g,w=e.a},e=>{m=e.t},e=>{f=e.m,j=e.u},e=>{k=e.t},e=>{G=e.$},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){const t=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],M={graphic:null,property:null,oldValue:null,newValue:null};function v(e){return e instanceof g||e instanceof u||e instanceof p||e instanceof d||e instanceof y||e instanceof _||e instanceof w}let V=class extends(f(j)){constructor(){super(...arguments),this._graphics=new i,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new r({getCollections:()=>null==this.layer||this.destroyed?[]:[null!=this.layer.routeInfo?new i([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this._updatingHandles.addOnCollectionChange((()=>this._routeItems),(e=>this._routeItemsChanged(e)),s)}destroy(){this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),this._get("_routeItems")?.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}highlight(e){let t;t=v(e)?[this._getNetworkFeatureUid(e)]:function(e){return Array.isArray(e)&&e.length>0&&v(e[0])}(e)?e.map((e=>this._getNetworkFeatureUid(e))):function(e){return i.isCollection(e)&&e.length&&v(e.at(0))}(e)?e.map((e=>this._getNetworkFeatureUid(e))).toArray():[e.uid];const r=t.filter(a);return r.length?(this._addHighlight(r),l((()=>this._removeHighlight(r)))):l()}async hitTest(e,t){if(this.suspended)return null;const i=this._graphicsView.hitTest(e).filter(a).map((e=>this._networkGraphicMap.get(e)));if(!i.length)return null;const{layer:r}=this;return i.reverse().map((t=>({type:"route",layer:r,mapPoint:e,networkFeature:t})))}isUpdating(){return this._graphicsView.updating}moveStart(){}moveEnd(){}update(e){this._graphicsView.processUpdate(e)}viewChange(){this._graphicsView.viewChange()}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_createGraphic(e){const t=e.toGraphic();return t.layer=this.layer,t.sourceLayer=this.layer,t}_createGraphicsView(){const e=this.view,t=new k(e.featuresTilingScheme);this._graphicsView=new G({container:t,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate(),view:e}),this.container.addChild(t),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(e){const i=this._networkGraphicMap.get(e);return t.indexOf(i.type)}_getNetworkFeatureUid(e){return this._networkFeatureMap.has(e)?this._networkFeatureMap.get(e).uid:null}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_routeItemsChanged(e){if(e.removed.length){this._graphics.removeMany(e.removed.map((e=>{const t=this._networkFeatureMap.get(e);return this._networkFeatureMap.delete(e),this._networkGraphicMap.delete(t),t})));for(const t of e.removed)this.removeHandles(t)}if(e.added.length){this._graphics.addMany(e.added.map((e=>{const t=this._createGraphic(e);return null==t.symbol?null:(this._networkFeatureMap.set(e,t),this._networkGraphicMap.set(t,e),t)})).filter(a));for(const t of e.added)this.addHandles([n((()=>t.geometry),((e,i)=>{this._updateGraphic(t,"geometry",e,i)})),n((()=>t.symbol),((e,i)=>{this._updateGraphic(t,"symbol",e,i)}))],t);this._graphics.sort(((e,t)=>this._getDrawOrder(e)-this._getDrawOrder(t)))}}_updateGraphic(e,t,i,r){if(!this._networkFeatureMap.has(e)){const t=this._createGraphic(e);return this._networkFeatureMap.set(e,t),this._networkGraphicMap.set(t,e),void this._graphics.add(t)}const s=this._networkFeatureMap.get(e);s[t]=i,M.graphic=s,M.property=t,M.oldValue=r,M.newValue=i,this._graphicsView.graphicUpdateHandler(M)}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=m("highlight");this._graphicsView.setHighlight(e.map((e=>({objectId:e,highlightFlags:t}))))}};h([o()],V.prototype,"_graphics",void 0),h([o()],V.prototype,"_routeItems",null),V=h([c("esri.views.2d.layers.RouteLayerView2D")],V),e("default",V)}}}));
