System.register(["./index-legacy.js","./multidimensionalUtils-legacy.js","./RasterVFDisplayObject-legacy.js","./LayerView-legacy.js","./Container-legacy.js","./enums-legacy.js","./rasterUtils-legacy.js","./Texture-legacy.js","./definitions-legacy.js","./WGLContainer-legacy.js","./Program-legacy.js","./TileContainer-legacy.js","./dataUtils-legacy.js","./RawBlockCache-legacy.js","./rasterProjectionHelper-legacy.js","./popupUtils-legacy.js","./RefreshableLayerView-legacy.js","./ProgramTemplate-legacy.js","./VertexElementDescriptor-legacy.js","./LabelMetric-legacy.js","./enums-legacy2.js","./highlightReasons-legacy.js","./StyleDefinition-legacy.js","./config-legacy.js","./earcut-legacy.js","./featureConversionUtils-legacy.js","./OptimizedGeometry-legacy.js","./OptimizedFeatureSet-legacy.js"],(function(e,t){"use strict";var s,r,i,a,n,o,l,u,c,h,d,p,m,f,g,_,y,x,b,w,v,T,P,S,R,I,U,C,F,z,M,V,L,B,D,G,k,j,O,E,A,q,W,N,Q,H,J,Y,K,X,Z,$,ee,te,se,re,ie,ae,ne,oe,le,ue,ce,he,de,pe,me,fe,ge,_e,ye,xe,be,we,ve,Te,Pe,Se,Re,Ie;return{setters:[e=>{s=e.g6,r=e.eQ,i=e.eJ,a=e.eK,n=e.eL,o=e.eM,l=e.eN,u=e.eO,c=e.N,h=e.a9,d=e.gb,p=e.x,m=e.y,f=e.z,g=e.bm,_=e.ip,y=e.A,x=e.r,b=e.aQ,w=e.jD,v=e.k,T=e.m,P=e.bE,S=e.ar,R=e.o,I=e.w,U=e.eY,C=e.C,F=e.bl,z=e.s,M=e.M,V=e.en,L=e.P},e=>{B=e.o},e=>{D=e.f,G=e.d,k=e.a},e=>{j=e.a,O=e.m,E=e.u},e=>{A=e.i,q=e.E,W=e.r},e=>{N=e.L,Q=e.P,H=e.U,J=e.D,Y=e.R,K=e.O},e=>{X=e.c,Z=e.f,$=e.m,ee=e.O,te=e.h,se=e._,re=e.A,ie=e.p,ae=e.l,ne=e.T,oe=e.g},e=>{le=e.e,ue=e.m},e=>{ce=e.a},e=>{he=e.t,de=e.a,pe=e.r},e=>{me=e.x},e=>{fe=e.i},e=>{ge=e.u,_e=e.S},e=>{ye=e.g,xe=e.a,be=e.i,we=e.u},e=>{ve=e.D,Te=e.a,Pe=e.s,Se=e.v},e=>{Re=e.p},e=>{Ie=e.i},null,null,null,null,null,null,null,null,null,null,null],execute:function(){const t={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class Ue extends A{constructor(e=null,t=null,s=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=t,this.interpolation=s}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(e){this._processedTexture!==e&&(this._disposeTextures(!0),this._processedTexture=e)}get rasterTexture(){return this._rasterTexture}set rasterTexture(e){this._rasterTexture!==e&&(this._rasterTexture?.dispose(),this._rasterTexture=e),null==e&&(this.projected=!1)}get processed(){return this._processed}set processed(e){this._processed=e,e||(s(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||t}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0,this.commonUniforms=null)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.commonUniforms=null,this.projected=!1,this.invalidateTexture())}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdsChanged(e)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode("bilinear"===this._getTextureSamplingMethod(e||"nearest")?N.LINEAR:N.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid!==e&&(this._transformGrid=e,this._transformGridTexture=s(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(e=!1){const t=e||this.projected;return[t?this.width:this.source?.width||this.width,t?this.height:this.source?.height||this.height]}getRasterCellSize(){const e=this.rawPixelData?.srcPixelSize,{projected:t,resolution:s}=this;return e&&!t?[e.x,e.y]:[s,s]}_createTransforms(){return{displayViewScreenMat3:r()}}setTransform(e){const t=i(this.transforms.displayViewScreenMat3),[s,r]=e.toScreenNoRotation([0,0],[this.x,this.y]),c=this.resolution/this.pixelRatio/e.resolution,h=c*this.width,d=c*this.height,p=Math.PI*this.rotation/180;a(t,t,n(s,r)),a(t,t,n(h/2,d/2)),o(t,t,-p),a(t,t,n(-h/2,-d/2)),l(t,t,n(h,d)),u(this.transforms.displayViewScreenMat3,e.displayViewMat3,t)}getTextures({forProcessing:e=!1,useProcessedTexture:t=!1}={}){const s=t?this._processedTexture??this._rasterTexture:this._rasterTexture,r=[],i=[];return s?(this._transformGridTexture&&!this.projected&&(i.push(this._transformGridTexture),r.push("u_transformGrid")),t?(i.push(s),r.push("u_image"),this._colormapTexture&&(i.push(this._colormapTexture),r.push("u_colormap")),{names:r,textures:i}):(i.push(s),r.push("u_image"),this._colormapTexture&&!e&&(i.push(this._colormapTexture),r.push("u_colormap")),{names:r,textures:i})):{names:r,textures:i}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){if(!this.stage)return void this._disposeTextures();const t=this._isValidSource(this.source);t&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(t?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=X(e,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:e}=this;0!==e.length&&(this.processedTexture=e.shift(),e.forEach((e=>e?.dispose())),e.length=0)}_createOrDestroyRasterTexture(e){const t=this.source?.extractBands(this.bandIds);if(!this._isValidSource(t))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const s=!this._isBandIdsChanged(this.bandIds);if(this._rasterTexture){if(s)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=!!e.capabilities.textureFloat?.textureFloatLinear;const r=this._getTextureSamplingMethod(this.interpolation),i=this.isRendereredSource;this._rasterTexture=Z(e,t,r,i),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdsChanged(e){const t=this._rasterTextureBandIds;return!(null==t&&null==e||t&&e&&t.join("")===e.join(""))}_isValidSource(e){return null!=e&&e.pixels?.length>0}_getTextureSamplingMethod(e){const{type:t}=this.symbolizerParameters,s="lut"===t||"hillshade"===t||"stretch"===t&&1===this.symbolizerParameters.bandCount;return!this._supportsBilinearTexture||s||"bilinear"!==e&&"cubic"!==e?"nearest":"bilinear"}_updateColormapTexture(e){const t=this._colormap,s=this.symbolizerParameters.colormap;return s?t?s.length!==t.length||s.some(((e,s)=>e!==t[s]))?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=$(e,s),void(this._colormap=s)):void 0:(this._colormapTexture=$(e,s),void(this._colormap=s)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}_disposeTextures(e=!1){!this._transformGridTexture||e&&!this.projected||(this._transformGridTexture.dispose(),this._transformGridTexture=null),!e&&this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null,this._colormap=null,this._colormapTextureInvalidated=!0),!e&&this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this._processedTexture&&(this._processedTexture.dispose(),this._processedTexture=null)}}function Ce(e){const t=[];return e&&(t.push("applyProjection"),1===e.spacing[0]&&t.push("lookupProjection")),t}function Fe(e,t,s){const r=!s.capabilities.textureFloat?.textureFloatLinear,i=[];return"cubic"===e?i.push("bicubic"):"bilinear"===e&&(t?(i.push("bilinear"),i.push("nnedge")):r&&i.push("bilinear")),i}const ze={vsPath:"raster/common",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])},Me={createProgram:function(e,t,s){const r=s?[]:Ce(t.transformGrid);return{defines:r,program:e.painter.materialManager.getProgram(ze,r)}},bindTextureAndUniforms:function(e,t,s,r,i=!1){const{names:a,textures:n}=s.getTextures({useProcessedTexture:i});ee(e.context,t,a,n),te(t,r,s.commonUniforms),t.setUniformMatrix3fv("u_dvsMat3",s.transforms.displayViewScreenMat3);const{colormap:o,colormapOffset:l}=s.symbolizerParameters,u=se(o,l);te(t,r,u)}},Ve={vsPath:"raster/common",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])},Le={createProgram:function(e,t,s){const{colormap:r}=t.symbolizerParameters,i=[...s?[]:Ce(t.transformGrid),...Fe(t.interpolation,!0,e.context)];return null!=r&&i.push("applyColormap"),{defines:i,program:e.painter.materialManager.getProgram(Ve,i)}},bindTextureAndUniforms:function(e,t,s,r,i=!1){const{names:a,textures:n}=s.getTextures({useProcessedTexture:i});ee(e.context,t,a,n),te(t,r,s.commonUniforms),t.setUniformMatrix3fv("u_dvsMat3",s.transforms.displayViewScreenMat3);const o=s.symbolizerParameters,{colormap:l,colormapOffset:u}=o;if(null!=l){const e=se(l,u);te(t,r,e)}const c=re(o);te(t,r,c)}},Be={vsPath:"raster/common",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])},De={createProgram:function(e,t,s){const{colormap:r,bandCount:i}=t.symbolizerParameters,a=[...s?[]:Ce(t.transformGrid),...Fe(t.interpolation,1===i,e.context)];return t.isRendereredSource&&!s?a.push("noop"):null!=r&&a.push("applyColormap"),{defines:a,program:e.painter.materialManager.getProgram(Be,a)}},bindTextureAndUniforms:function(e,t,s,r,i=!1){const{names:a,textures:n}=s.getTextures({useProcessedTexture:i});ee(e.context,t,a,n),te(t,r,s.commonUniforms),t.setUniformMatrix3fv("u_dvsMat3",s.transforms.displayViewScreenMat3);const o=s.symbolizerParameters,{colormap:l,colormapOffset:u}=o;if(null!=l){const e=se(l,u);te(t,r,e)}const c=ie(o);te(t,r,c)}},Ge=new Map;Ge.set("lut",Me),Ge.set("hillshade",Le),Ge.set("stretch",De);const ke=[1,1],je=[2,0,0,0,2,0,-1,-1,0];function Oe(e,t,s){const{context:r,rasterFunction:i,hasBranches:a}=e,{raster:n}=i.parameters,o=a?n?.id??-1:0,l=s.functionTextures[o]??s.rasterTexture;ee(r,t,["u_image"],[l])}function Ee(e,t,s){const{rasters:r}=e.rasterFunction.parameters;if(!r)return;if(r.length<2)return Oe(e,t,s);const i=r.filter((e=>"Constant"!==e.name)).map((e=>null!=e.id&&"Identity"!==e.name?s.functionTextures[e.id]:s.rasterTexture));if(ee(e.context,t,["u_image","u_image1","u_image2"].slice(0,i.length),i),i.length!==r.length)if(2===r.length){const e=r.findIndex((e=>"Constant"===e.name)),s=0===e?[0,1,0,1,0,0,0,0,0]:[1,0,0,0,1,0,0,0,0],{value:i}=r[e].parameters;t.setUniform1f("u_image1Const",i),t.setUniformMatrix3fv("u_imageSwap",s)}else if(3===r.length){const e=[];if(r.forEach(((t,s)=>"Constant"===t.name&&e.push(s))),1===e.length){const{value:s}=r[e[0]].parameters;t.setUniform1f("u_image1Const",s);const i=0===e[0]?[0,1,0,0,0,1,1,0,0]:1===e[0]?[1,0,0,0,0,1,0,1,0]:[1,0,0,0,1,0,0,0,1];t.setUniformMatrix3fv("u_imageSwap",i)}else if(2===e.length){const{value:s}=r[e[0]].parameters;t.setUniform1f("u_image1Const",s);const{value:i}=r[e[1]].parameters;t.setUniform1f("u_image2Const",i);const a=r.findIndex((e=>"Constant"!==e.name)),n=0===a?[1,0,0,0,1,0,0,0,1]:1===a?[0,1,0,1,0,0,0,0,1]:[0,0,1,1,0,0,0,1,0];t.setUniformMatrix3fv("u_imageSwap",n)}}}function Ae(e){e.setUniform2fv("u_coordScale",ke),e.setUniformMatrix3fv("u_dvsMat3",je)}const qe={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/aspect",attributes:new Map([["a_position",0],["a_texcoord",1]])},We={createProgram:function(e,t){return e.painter.materialManager.getProgram(qe,[])},bindTextureAndUniforms:function(e,t,s){Oe(e,t,s),Ae(t);const r=s.getRasterTextureSize();t.setUniform2fv("u_srcImageSize",r);const i=s.getRasterCellSize();t.setUniform2fv("u_cellSize",i)}},Ne={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/bandarithmetic",attributes:new Map([["a_position",0],["a_texcoord",1]])},Qe={createProgram:function(e,t){const{painter:s,rasterFunction:r}=e,{indexType:i}=r.parameters;return s.materialManager.getProgram(Ne,[i])},bindTextureAndUniforms:function(e,t,s){Oe(e,t,s),Ae(t);const{bandIndexMat3:r}=e.rasterFunction.parameters;t.setUniformMatrix3fv("u_bandIndexMat3",r)}},He={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/compositeband",attributes:new Map([["a_position",0],["a_texcoord",1]])},Je={createProgram:function(e,t){const s=e.rasterFunction.parameters.rasters.filter((e=>"Constant"===e.name)),r=[];return s.length&&(r.push("oneConstant"),2===s.length&&r.push("twoConstant")),e.painter.materialManager.getProgram(He,r)},bindTextureAndUniforms:function(e,t,s){Ee(e,t,s),Ae(t)}},Ye={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/contrast",attributes:new Map([["a_position",0],["a_texcoord",1]])},Ke={createProgram:function(e,t){return e.painter.materialManager.getProgram(Ye,[])},bindTextureAndUniforms:function(e,t,s){Oe(e,t,s),Ae(t);const{contrastOffset:r,brightnessOffset:i}=e.rasterFunction.parameters;t.setUniform1f("u_contrastOffset",r),t.setUniform1f("u_brightnessOffset",i)}},Xe={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/convolution",attributes:new Map([["a_position",0],["a_texcoord",1]])},Ze={createProgram:function(e,t){const{painter:s,rasterFunction:r}=e,{kernelRows:i,kernelCols:a}=r.parameters,n=[{name:"rows",value:i},{name:"cols",value:a}];return s.materialManager.getProgram(Xe,n)},bindTextureAndUniforms:function(e,t,s){Oe(e,t,s),Ae(t),t.setUniform2fv("u_srcImageSize",[s.width,s.height]);const{kernel:r,clampRange:i}=e.rasterFunction.parameters;t.setUniform1fv("u_kernel",r),t.setUniform2fv("u_clampRange",i)}},$e={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/curvature",attributes:new Map([["a_position",0],["a_texcoord",1]])},et={createProgram:function(e,t){const{painter:s,rasterFunction:r}=e,{curvatureType:i}=r.parameters,a=[i];return s.materialManager.getProgram($e,a)},bindTextureAndUniforms:function(e,t,s){Oe(e,t,s),Ae(t);const r=s.getRasterTextureSize();t.setUniform2fv("u_srcImageSize",r);const{zFactor:i}=e.rasterFunction.parameters,a=s.getRasterCellSize();t.setUniform1f("u_zlFactor",200*i/a[0]/a[1])}},tt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/extractband",attributes:new Map([["a_position",0],["a_texcoord",1]])},st={createProgram:function(e,t){return e.painter.materialManager.getProgram(tt,[])},bindTextureAndUniforms:function(e,t,s){Oe(e,t,s),Ae(t);const{bandIndexMat3:r}=e.rasterFunction.parameters;t.setUniformMatrix3fv("u_bandIndexMat3",r)}},rt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/focalstatistics",attributes:new Map([["a_position",0],["a_texcoord",1]])},it={createProgram:function(e,t){const{painter:s,rasterFunction:r}=e,{kernelRows:i,kernelCols:a,fillNoDataOnly:n,statisticsType:o}=r.parameters,l=[{name:"rows",value:i},{name:"cols",value:a},o];return n&&l.push("fill"),s.materialManager.getProgram(rt,l)},bindTextureAndUniforms:function(e,t,s){Oe(e,t,s),Ae(t),t.setUniform2fv("u_srcImageSize",[s.width,s.height]);const{clampRange:r}=e.rasterFunction.parameters;t.setUniform2fv("u_clampRange",r)}},at={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/grayscale",attributes:new Map([["a_position",0],["a_texcoord",1]])},nt={createProgram:function(e,t){return e.painter.materialManager.getProgram(at,[])},bindTextureAndUniforms:function(e,t,s){Oe(e,t,s),Ae(t);const{weights:r}=e.rasterFunction.parameters;t.setUniform3fv("u_weights",r)}},ot={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/local",attributes:new Map([["a_position",0],["a_texcoord",1]])},lt={createProgram:function(e){const{painter:t,rasterFunction:s}=e,{imageCount:r,operationName:i,rasters:a,isOutputRounded:n}=s.parameters,o=[i.toLowerCase()];2===r&&o.push("twoImages");const l=a.filter((e=>"Constant"===e.name));return l.length&&(o.push("oneConstant"),2===l.length&&o.push("twoConstant")),n&&o.push("roundOutput"),t.materialManager.getProgram(ot,o)},bindTextureAndUniforms:function(e,t,s){Ee(e,t,s),Ae(t);const{domainRange:r}=e.rasterFunction.parameters;t.setUniform2fv("u_domainRange",r)}},ut={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/mask",attributes:new Map([["a_position",0],["a_texcoord",1]])},ct={createProgram:function(e,t){const{painter:s,rasterFunction:r}=e,i=r.parameters.bandCount>1?["multiBand"]:[];return s.materialManager.getProgram(ut,i)},bindTextureAndUniforms:function(e,t,s){Oe(e,t,s),Ae(t);const{includedRanges:r,noDataValues:i}=e.rasterFunction.parameters;t.setUniform1fv("u_includedRanges",r),t.setUniform1fv("u_noDataValues",i)}},ht={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/ndvi",attributes:new Map([["a_position",0],["a_texcoord",1]])},dt={createProgram:function(e,t){const{painter:s,rasterFunction:r}=e,i=r.parameters.scaled?["scaled"]:[];return s.materialManager.getProgram(ht,i)},bindTextureAndUniforms:function(e,t,s){Oe(e,t,s),Ae(t);const{bandIndexMat3:r}=e.rasterFunction.parameters;t.setUniformMatrix3fv("u_bandIndexMat3",r)}},pt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/remap",attributes:new Map([["a_position",0],["a_texcoord",1]])},mt={createProgram:function(e,t){return e.painter.materialManager.getProgram(pt,[])},bindTextureAndUniforms:function(e,t,s){Oe(e,t,s),Ae(t);const{noDataRanges:r,rangeMaps:i,allowUnmatched:a,clampRange:n}=e.rasterFunction.parameters;t.setUniform1fv("u_noDataRanges",r),t.setUniform1fv("u_rangeMaps",i),t.setUniform1f("u_unmatchMask",a?1:0),t.setUniform2fv("u_clampRange",n)}},ft={vsPath:"raster/common",fsPath:"raster/reproject",attributes:new Map([["a_position",0],["a_texcoord",1]])},gt={createProgram:function(e,t){const{painter:s}=e,r=[],{interpolation:i,transformGrid:a}=t,n=e.rasterFunction?.parameters;return"cubic"===i?r.push("bicubic"):"bilinear"===i&&(r.push("bilinear"),n?.requireNNEdge&&r.push("nnedge")),a&&(r.push("applyProjection"),1===a.spacing[0]&&r.push("lookupProjection")),s.materialManager.getProgram(ft,r)},bindTextureAndUniforms:function(e,t,s){const{names:r,textures:i}=s.getTextures({forProcessing:!0});ee(e.context,t,r,i),t.setUniform1f("u_scale",1),t.setUniform2fv("u_offset",[0,0]),t.setUniform2fv("u_coordScale",[1,1]),t.setUniformMatrix3fv("u_dvsMat3",[2,0,0,0,2,0,-1,-1,0]),t.setUniform1i("u_flipY",0),t.setUniform1f("u_opacity",1);const{width:a,height:n,source:o,transformGrid:l}=s;t.setUniform2fv("u_srcImageSize",[o.width,o.height]),t.setUniform2fv("u_targetImageSize",[a,n]),t.setUniform2fv("u_transformSpacing",l?l.spacing:c),t.setUniform2fv("u_transformGridSize",l?l.size:c)}},_t={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/slope",attributes:new Map([["a_position",0],["a_texcoord",1]])},yt={createProgram:function(e,t){const{painter:s,rasterFunction:r}=e,{slopeType:i}=r.parameters,a="percent-rise"===i?["percentRise"]:[];return s.materialManager.getProgram(_t,a)},bindTextureAndUniforms:function(e,t,s){Oe(e,t,s),Ae(t);const r=s.getRasterTextureSize();t.setUniform2fv("u_srcImageSize",r);const i=s.getRasterCellSize();t.setUniform2fv("u_cellSize",i);const{zFactor:a,slopeType:n,pixelSizePower:o,pixelSizeFactor:l}=e.rasterFunction.parameters;t.setUniform1f("u_zFactor",a),t.setUniform1f("u_pixelSizePower","adjusted"===n?o:0),t.setUniform1f("u_pixelSizeFactor","adjusted"===n?l:0)}},xt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])},bt={createProgram:function(e,t){const{useGamma:s,bandCount:r,isOutputRounded:i}=e.rasterFunction.parameters,a=[];return s&&a.push("useGamma"),r>1&&a.push("multiBand"),i&&a.push("roundOutput"),e.painter.materialManager.getProgram(xt,a)},bindTextureAndUniforms:function(e,t,s){Oe(e,t,s),Ae(t);const{width:r,height:i}=s,a=e.rasterFunction.parameters;t.setUniform2fv("u_srcImageSize",[r,i]),t.setUniform1f("u_minOutput",a.outMin),t.setUniform1f("u_maxOutput",a.outMax),t.setUniform1fv("u_factor",a.factor),t.setUniform1fv("u_minCutOff",a.minCutOff),t.setUniform1fv("u_maxCutOff",a.maxCutOff),t.setUniform1fv("u_gamma",a.gamma),t.setUniform1fv("u_gammaCorrection",a.gammaCorrection)}},wt=new Map;function vt(e,t){const s=new le;return s.width=e,s.height=t,s.internalFormat=Q.RGBA32F,s.samplingMode=N.NEAREST,s.dataType=H.FLOAT,s.isImmutable=!0,s.wrapMode=J.CLAMP_TO_EDGE,s}function Tt(e,t,s,r){const i=e.rasterFunction.name.toLowerCase(),a="reproject"===i?gt:function(e){return wt.get(e.toLowerCase())}(i);if(null==a)return;const n=function(e,t,s,r){const{context:i,requestRender:a,allowDelayedRender:n}=e,o=r.createProgram(e,s);return n&&null!=a&&!o.compiled?(a(),null):(i.bindFramebuffer(t),i.setViewport(0,0,t.width,t.height),i.useProgram(o),o)}(e,s,r,a);if(!n)return;a.bindTextureAndUniforms(e,n,r);const{interpolation:o}=r;"reproject"===i&&(r.interpolation="nearest"),t.draw();const[l,u]=r.getRasterTextureSize("reproject"===i),c=vt(l,u),h=new ue(e.context,c);if(s.copyToTexture(0,0,l,u,0,0,h),"reproject"===i)r.rasterTexture=h,r.projected=!0,r.interpolation=o;else{const t=e.hasBranches?e.rasterFunction.id:0;r.functionTextures[t]=h}}wt.set("arithmetic",lt),wt.set("aspect",We),wt.set("bandarithmetic",Qe),wt.set("compositeband",Je),wt.set("convolution",Ze),wt.set("contrastbrightness",Ke),wt.set("curvature",et),wt.set("extractband",st),wt.set("statistics",it),wt.set("grayscale",nt),wt.set("local",lt),wt.set("mask",ct),wt.set("ndvi",dt),wt.set("remap",mt),wt.set("slope",yt),wt.set("stretch",bt);class Pt extends he{constructor(){super(...arguments),this.name="raster",this._quad=null,this._rendererUniformInfos=new Map,this._fbo=null}dispose(){s(this._quad),s(this._fbo)}prepareState(e){const{context:t,renderPass:s}=e,r="raster"===s;t.setBlendingEnabled(!r),t.setBlendFunctionSeparate(Y.ONE,Y.ONE_MINUS_SRC_ALPHA,Y.ONE,Y.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!r)}draw(e,t){if(!function(e){return null!=e.source}(t)||t.suspended)return;const{renderPass:s}=e;if("raster-bitmap"!==s)return"raster"===s?this._process(e,t):void this._drawBitmap(e,t,!0);this._drawBitmap(e,t)}_process(e,t){const{rasterFunction:r}=e,i="Reproject"===r.name;if(!(i?!t.rasterTexture||!t.projected:!t.processed))return;const{timeline:a,context:n}=e;a.begin(this.name);const o=n.getBoundFramebufferObject(),l=n.getViewport();i||(t.processedTexture=s(t.processedTexture)),n.setStencilFunction(K.EQUAL,t.stencilRef,255),t.updateTexture(e),this._initQuad(n);const[u,c]=t.getRasterTextureSize(i),{isStandardRasterTileSize:h,fbo:d}=this._getRasterFBO(n,u,c);Tt(e,this._quad,d,t),h||d.dispose(),n.bindFramebuffer(o),n.setViewport(l.x,l.y,l.width,l.height),a.end(this.name)}_drawBitmap(e,t,s=!1){const{timeline:r,context:i}=e;if(r.begin(this.name),i.setStencilFunction(K.EQUAL,t.stencilRef,255),t.updateTexture(e),s&&!t.processedTexture){if(t.updateProcessedTexture(),!t.processedTexture)return void r.end(this.name);t.processed=!0}this._initBitmapCommonUniforms(t);const a=t.symbolizerParameters.type,n=function(e){return Ge.get(e)}(a),{requestRender:o,allowDelayedRender:l}=e,{defines:u,program:c}=n.createProgram(e,t,t.projected&&s);if(l&&null!=o&&!c.compiled)return void o();i.useProgram(c);const h=this._getUniformInfos(a,i,c,u);this._quad||(this._quad=new de(i,[0,0,1,0,0,1,1,1])),n.bindTextureAndUniforms(e,c,t,h,s),this._quad.draw(),r.end(this.name)}_initBitmapCommonUniforms(e){if(!e.commonUniforms){const t=oe(1,[0,0]),{transformGrid:s,width:r,height:i}=e,a=ae(s,[r,i],[e.source.width,e.source.height],1,!1);e.commonUniforms={...t,...a,u_coordScale:e.coordScale}}}_getRasterFBO(e,t,s){const r=t===ce&&s===ce;return r?(this._fbo||(this._fbo=this._createNewFBO(e,t,s)),{isStandardRasterTileSize:r,fbo:this._fbo}):{isStandardRasterTileSize:r,fbo:this._createNewFBO(e,t,s)}}_createNewFBO(e,t,s){const r=vt(t,s);return new me(e,r)}_initQuad(e){this._quad||(this._quad=new de(e,[0,0,1,0,0,1,1,1]))}_getUniformInfos(e,t,s,r){const i=r.length>0?e+"-"+r.join("-"):e;if(this._rendererUniformInfos.has(i))return this._rendererUniformInfos.get(i);const a=ne(t,s);return this._rendererUniformInfos.set(i,a),a}}class St extends pe{constructor(e,t,s,r,i,a,n=null){super(e,t,s,r,i,a),this.bitmap=null,this.bitmap=new Ue(n,null,null),this.bitmap.coordScale=[i,a],this.bitmap.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e){super.setTransform(e),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}_createTransforms(){return{displayViewScreenMat3:r(),tileMat3:r()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}let Rt=class extends fe{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const t=this._getTileBounds(e),[s,r]=this._tileInfoView.tileInfo.size,i=this._tileInfoView.getTileResolution(e.level);return new St(e,i,t[0],t[3],s,r)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (tile)",brushes:[Pt],target:()=>this.children.map((e=>e.bitmap)),drawPhase:q.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){if(!this.visible||e.drawPhase!==q.MAP)return;const{rasterFunctionChain:t}=this;if(!t)return e.renderPass="raster-bitmap",void super.doRender(e);if(!t.hasFocalFunction){const[s,r]=this._tileInfoView.tileInfo.size;e.renderPass="raster",e.rasterFunction={name:"Reproject",parameters:{targetImageSize:[s,r],requireNNEdge:t.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1},super.doRender(e)}if(t?.functions.length){const{functions:s,hasBranches:r}=t;for(let t=0;t<s.length;t++){const i=s[t];"Constant"!==i.name&&"Identity"!==i.name&&(e.renderPass="raster",e.rasterFunction=i,e.hasBranches=r,super.doRender(e))}}e.rasterFunction=null,e.renderPass="bitmap",super.doRender(e)}_getTileBounds(e){const t=this._tileInfoView.getTileBounds(h(),e);if(this.isCustomTilingScheme&&e.world){const{tileInfo:s}=this._tileInfoView,r=d(s.spatialReference);if(r){const i=s.lodAt(e.level);if(!i)return t;const{resolution:a}=i,n=r/a%s.size[0],o=n?(s.size[0]-n)*a:0;t[0]-=o*e.world,t[2]-=o*e.world}}return t}};const It=[0,0];let Ut=class extends g{constructor(){super(...arguments),this._updatingHandles=new _,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=y((async(e={})=>{const t=this._rasterFunctionState;if(e.reprocess&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const s=this._rasterFunctionState,{type:r}=this;return e.refetch||"raster"!==r&&e.reprocess||"cpu"===s||"cpu"===t?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(e.signal))}))}destroy(){this._updatingHandles.destroy()}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(e){this._set("useWebGLForProcessing",e)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(e){if(this._tileStrategy&&this.useProgressiveUpdate!==e){this._tileStrategy.destroy(),this.container.removeAllChildren();const t=this._getCacheSize(e);this._tileStrategy=new x({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:t,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",e),this.layerView.requestUpdate()}}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume();const{extent:t,resolution:s,scale:r}=e.state,i=this._tileInfoView.getClosestInfoForScale(r);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const e=this._srcResolutions[i.level],r=t.toJSON?t:b.fromJSON(t);ye(this._blockCacheRegistryUrl,this._blockCacheRegistryId,r,s,e,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,this.previousLOD?.level!==i.level&&(this.previousLOD=i,null==this._symbolizerParams||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,0===this._fetchQueue.length&&this._redrawImage(this._abortController.signal).then((()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()})));const e=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(e),this.layerView.requestUpdate()}get updating(){return this._globalUpdateRequested||this._updatingHandles?.updating}attach(){const e=w();this._maxIndexedColormapSize=4*(e.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new v(this.layerView.tileInfo,this.layerView.fullExtent);const t=this._computeFetchConcurrency();this._fetchQueue=new T({tileInfoView:this._tileInfoView,concurrency:t,process:(e,t)=>this._fetchTile(e,t)});const s=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new x({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:s,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,xe(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(e){const t=this.container.createTile(e);return this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,t}releaseTile(e){this._fetchQueue.abort(e.key.id),this.container.removeChild(e),e.once("detach",(()=>{e.destroy(),this.layerView.requestUpdate()})),this.layerView.requestUpdate()}createEmptyTilePixelBlock(e=null){const t=null==e||e.join(",")===this._tileInfoView.tileInfo.size.join(",");if(t&&null!=this._emptyTilePixelBlock)return this._emptyTilePixelBlock;e=e||this._tileInfoView.tileInfo.size;const[s,r]=e,i=new ge({width:s,height:r,pixels:[new Uint8Array(s*r)],mask:new Uint8Array(s*r),pixelType:"u8"});return t&&(this._emptyTilePixelBlock=i),i}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:e,raster:t}=this.layer,s="rasterFunction"in t?t.rasterFunction.rawInputBandIds:null;return e?.length&&s?.length&&1!==t.rasterInfo.bandCount?e.map((e=>s[Math.min(e,s.length-1)])):e||s}updateRasterFunctionParameters(){}_fetchTile(e,t){const s=null!=t?t.signal:null,r=this.canUseWebGLForProcessing(),{layerView:i}=this,{tileInfo:a}=i,n=!a.isWrappable&&null!=ve(i.view.spatialReference),o=r&&this.layer.raster.hasUniqueSourceStorageInfo,l={allowPartialFill:!0,datumTransformation:i.datumTransformation,interpolation:r?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:o,skipRasterFunction:"raster"===this.type&&null!=this.container.rasterFunctionChain,signal:s,srcResolution:this._srcResolutions[e.level],timeExtent:i.timeExtent,tileInfo:a,disableWrapAround:n};return this.fetchTile(e,l)}_getCacheSize(e){return e?40:0}_initializeTileInfo(){const{layerView:e}=this,t=e.view.spatialReference;if(this._canUseLayerLODs()){const{origin:s,lods:r}=this.layer.tileInfo,i=r.map((({scale:e})=>e)),a=P.create({spatialReference:t,size:ce,scales:i,origin:s});return e.set("tileInfo",a),void(this._srcResolutions=r.map((({resolution:e})=>({x:e,y:e}))))}const{scales:s,srcResolutions:r,isCustomTilingScheme:i}=Te(this.layer.serviceRasterInfo,t,{tileSize:ce,alignGlobalDatasetWithAGOL:!0,limitToSrcResolution:!1}),a=P.create({spatialReference:t,size:ce,scales:s}),n=0===a.origin.x,{xmin:o,ymax:l}=e.fullExtent;(n||i&&a.origin.x>o)&&(a.origin=new S({x:o,y:l,spatialReference:t})),this._isCustomTilingScheme=i,e.set("tileInfo",a),this._srcResolutions=r??[]}_canUseLayerLODs(){const{layer:e,layerView:t}=this;if("Map"!==e.raster.tileType)return!1;const{lods:s}=e.tileInfo,r=t.view.constraints?.effectiveLODs;return r?.length===s.length&&r.every((({scale:e},t)=>Math.abs(e-s[t].scale)<.001))}_computeFetchConcurrency(){const{blockBoundary:e}=this.layer.serviceRasterInfo.storageInfo,t=e[e.length-1];return(t.maxCol-t.minCol+1)*(t.maxRow-t.minRow+1)>64?2:10}async _enqueueTileFetch(e,t){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key),r=this._getBandIds();let i=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&0===this._fetchQueue.length){i=!1;try{await this._redrawImage(this._abortController?.signal)}catch(s){R(s)&&I.getLogger(this).error(s)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&"rasterVF"!==this.type||this.layerView.hasTilingEffects||null!=this._symbolizerParams||this._updateSymbolizerParams();const a=this._tileInfoView.getTileCoords(It,e.key),n=this._tileInfoView.getTileResolution(e.key);await this.updateTileSource(e,{source:t,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:i,bandIds:r,coords:a,resolution:n}),e.once("attach",(()=>this.layerView.requestUpdate())),this.container.addChild(e)}catch(s){R(s)||I.getLogger(this).error(s)}this.layerView.requestUpdate()}}async _redrawImage(e){if(0===this.container.children.length)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(e):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const t=this.container.children.map((async e=>this.updateTileSymbolizerParameters(e,{local:this._symbolizerParams,global:this._globalSymbolizerParams})));await Promise.allSettled(t),this.container.requestRender()}async _updateGlobalSymbolizerParams(e){const t={srcResolution:this._srcResolutions[this.previousLOD.level],registryId:this._blockCacheRegistryId,signal:e},s=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,t);if(!s?.pixelBlock)return;const{resolution:r}=this.previousLOD,i=this._getBandIds(),a=this.layer.symbolizer.generateWebGLParameters({pixelBlock:s.pixelBlock.extractBands(i),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:r,y:r},bandIds:i});!this.canUseWebGLForProcessing()&&a&&"stretch"===a.type&&this.layer.renderer&&"raster-stretch"===this.layer.renderer.type&&(a.factor=a.factor.map((e=>255*e)),a.outMin=Math.round(255*a.outMin),a.outMax=Math.round(255*a.outMax)),this._globalSymbolizerParams=a}_updateSymbolizerParams(){const{resolution:e}=this.previousLOD,t=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:e,y:e},bandIds:t})}_updateBlockCacheRegistry(e=!1){const{layer:t,layerView:s}=this,{raster:r}=t,{multidimensionalDefinition:i}=t.normalizeRasterFetchOptions({multidimensionalDefinition:t.multidimensionalDefinition,timeExtent:s.timeExtent}),a=r.rasterInfo.multidimensionalInfo?r.getSliceIndex(i):null,n=be(r.rasterId,a);if(n!==this._blockCacheRegistryUrl){if(null!=this._blockCacheRegistryUrl&&xe(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=we(n,r.rasterInfo),e){const{view:e}=s,t=this._tileInfoView.getClosestInfoForScale(e.scale),i=this._srcResolutions[t.level];ye(n,this._blockCacheRegistryId,e.extent,e.resolution,i,r.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const e=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh((t=>e.push(this._enqueueTileFetch(t)))),await this._updatingHandles.addPromise(Promise.allSettled(e))}};p([m()],Ut.prototype,"_globalUpdateRequested",void 0),p([m()],Ut.prototype,"attached",void 0),p([m()],Ut.prototype,"container",void 0),p([m()],Ut.prototype,"layer",void 0),p([m()],Ut.prototype,"layerView",void 0),p([m()],Ut.prototype,"type",void 0),p([m()],Ut.prototype,"useWebGLForProcessing",null),p([m()],Ut.prototype,"useProgressiveUpdate",null),p([m()],Ut.prototype,"timeExtent",void 0),p([m()],Ut.prototype,"updating",null),Ut=p([f("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],Ut);let Ct=class extends Ut{constructor(){super(...arguments),this.type="raster"}attach(){super.attach(),this.container=new Rt(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){const{symbolizer:e}=this.layer,t=e.lookup?.colormapLut?.indexedColormap,s=t&&t.length>this._maxIndexedColormapSize;return this.useWebGLForProcessing&&e.canRenderInWebGL&&!s&&!("majority"===this.layer.interpolation&&W(this.layer))}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}updateRasterFunctionParameters(){const{clips:e,view:t}=this.layerView;null!=this._geometry&&e.remove(this._geometry);const{raster:s,type:r}=this.layer;if("Function"===s.datasetFormat){const r=s.getClippingGeometry(t.spatialReference);if(r){const t=new j({geometry:r});e.add(t),this._geometry=t}}const{container:i}=this;if("Function"!==s.datasetFormat||"wcs"===r)return i.rasterFunctionChain=null,i.children.forEach((e=>{const{bitmap:t}=e;t&&(t.suspended=!0,t.processed=!1,t.projected&&(t.invalidateTexture(),t.rasterTexture=null))})),void(this._rasterFunctionState="na");const a=this._rasterFunctionState,{rasterFunction:n,primaryRasters:o}=s,l=n.supportsGPU&&(!o||o.rasters.length<=1),u=l?n.flatWebGLFunctionChain:null,{renderer:c}=this.layer,h=!l||!u?.functions.length||"raster-stretch"===c?.type&&c.dynamicRangeAdjustment||!this.canUseWebGLForProcessing();i.rasterFunctionChain=h?null:u;const d=null==n?"na":i.rasterFunctionChain?"gpu":"cpu";i.children.forEach((e=>{const{bitmap:t}=e;t&&(t.suspended=a!==d,t.processed=!1,t.processedTexture=null)})),this._rasterFunctionState=d}async updateTileSource(e,t){const s=this._getBandIds(),r=this._getLayerInterpolation(),i=this.canUseWebGLForProcessing(),{source:a,globalSymbolizerParams:n,suspended:o,coords:l,resolution:u}=t,c=this.layerView.hasTilingEffects?n:t.symbolizerParams,{bitmap:h}=e;if([h.x,h.y]=l,h.resolution=u,null!=a?.pixelBlock){const e={extent:a.extent,pixelBlock:a.pixelBlock,srcPixelSize:a.srcTilePixelSize};if(h.rawPixelData=e,i)h.source=a.pixelBlock,h.isRendereredSource=!1;else{const t=await this.layer.applyRenderer(e,"stretch"===n?.type?n:void 0);h.source=t,h.isRendereredSource=!0}h.symbolizerParameters=i?c:null,h.transformGrid=i?a.transformGrid:null}else{const e=this.createEmptyTilePixelBlock();h.source=e,h.symbolizerParameters=i?c:null,h.transformGrid=null}h.bandIds=i?s:null,h.width=this._tileInfoView.tileInfo.size[0],h.height=this._tileInfoView.tileInfo.size[1],h.interpolation=r,h.suspended=o,h.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:s,global:r}=t,i=this._getBandIds(),a=this._getLayerInterpolation(),n=this.canUseWebGLForProcessing(),{bitmap:o}=e,{rawPixelData:l}=o;n||null==l?(o.isRendereredSource&&null!=l&&(o.source=l.pixelBlock),o.isRendereredSource=!1):(o.source=await this.layer.applyRenderer(l,"stretch"===r?.type?r:void 0),o.isRendereredSource=!0),o.symbolizerParameters=n?this.layerView.hasTilingEffects?r:s:null,o.bandIds=n?i:null,o.interpolation=a,o.suspended=!1}_getLayerInterpolation(){const{interpolation:e,renderer:t}=this.layer;if(!t)return e;const s=t.type;return"raster-colormap"===s||"unique-value"===s||"class-breaks"===s?"nearest":"raster-stretch"===t.type&&null!=t.colorRamp?"bilinear"===e||"cubic"===e?"bilinear":"nearest":e}};p([m()],Ct.prototype,"container",void 0),p([m()],Ct.prototype,"layer",void 0),p([m()],Ct.prototype,"type",void 0),Ct=p([f("esri.views.2d.layers.imagery.ImageryTileView2D")],Ct);const Ft=Ct;class zt extends pe{constructor(e,t,s,r,i,a,n=null){super(e,t,s,r,i,a),this.tileData=new D(n),this.tileData.coordScale=[i,a],this.tileData.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{displayViewScreenMat3:r(),tileMat3:r()}}setTransform(e){super.setTransform(e);const t=this.resolution/(e.resolution*e.pixelRatio),s=this.transforms.tileMat3,[r,i]=this.tileData.offset,a=[this.x+r*this.resolution,this.y-i*this.resolution],[n,o]=e.toScreenNoRotation([0,0],a),{symbolTileSize:l}=this.tileData.symbolizerParameters,c=Math.round((this.width-this.tileData.offset[0])/l)*l,h=Math.round((this.height-this.tileData.offset[1])/l)*l,d=c/this.rangeX*t,p=h/this.rangeY*t;U(s,d,0,0,0,p,0,n,o,1),u(this.transforms.displayViewScreenMat3,e.displayViewMat3,s),this.tileData.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class Mt extends fe{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const t=this._tileInfoView.getTileBounds(h(),e),[s,r]=this._tileInfoView.tileInfo.size,i=this._tileInfoView.getTileResolution(e.level);return new zt(e,i,t[0],t[3],s,r)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (vf tile)",brushes:[G],target:()=>this.children.map((e=>e.tileData)),drawPhase:q.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===q.MAP&&this.symbolTypes.forEach((t=>{e.renderPass=t,super.doRender(e)}))}}let Vt=class extends Ut{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(e,t){t={...t,interpolation:"nearest",requestProjectedLocalDirections:!0};const s=await this.layer.fetchTile(e.level,e.row,e.col,t);return"vector-magdir"===this.layer.serviceRasterInfo.dataType&&s?.pixelBlock&&(s.pixelBlock=await this.layer.convertVectorFieldData(s.pixelBlock,t)),s}updateTileSource(e,t){const s=t.symbolizerParams,{tileData:r}=e;r.key=e.key,r.width=this._tileInfoView.tileInfo.size[0],r.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:i}=s,{source:a}=t;if(r.offset=this._getTileSymbolOffset(r.key,i),null!=a?.pixelBlock){const e={extent:a.extent,pixelBlock:a.pixelBlock};r.rawPixelData=e,r.symbolizerParameters=s,r.source=this._sampleVectorFieldData(a.pixelBlock,s,r.offset)}else{const e=[Math.round((this._tileInfoView.tileInfo.size[0]-r.offset[0])/i),Math.round((this._tileInfoView.tileInfo.size[1]-r.offset[1])/i)],t=this.createEmptyTilePixelBlock(e);r.source=t,r.symbolizerParameters=s}return r.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(e,t){const s=t.local,{symbolTileSize:r}=s,{tileData:i}=e;i.offset=this._getTileSymbolOffset(i.key,r);const a=i.symbolizerParameters.symbolTileSize;i.symbolizerParameters=s;const n=i.rawPixelData?.pixelBlock;return null!=n&&a!==r&&(i.source=this._sampleVectorFieldData(n,i.symbolizerParameters,i.offset)),Promise.resolve()}attach(){super.attach(),this.container=new Mt(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=C((()=>this.layer.renderer),(e=>this._updateSymbolType(e)))}detach(){super.detach(),this.container.removeAllChildren(),this._handle?.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(e,t){const s=e.col*this._tileInfoView.tileInfo.size[0]%t,r=e.row*this._tileInfoView.tileInfo.size[1]%t;return[s>t/2?t-s:-s,r>t/2?t-r:-r]}_sampleVectorFieldData(e,t,s){const{symbolTileSize:r}=t;return _e(e,"vector-uv",r,s)}_updateSymbolType(e){"vector-field"===e.type&&(this.container.symbolTypes="wind-barb"===e.style?["scalar","triangle"]:"simple-scalar"===e.style?["scalar"]:["triangle"])}};p([m()],Vt.prototype,"container",void 0),p([m()],Vt.prototype,"layer",void 0),p([m()],Vt.prototype,"type",void 0),Vt=p([f("esri.views.2d.layers.imagery.VectorFieldTileView2D")],Vt);const Lt=Vt,Bt=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return Pe(this.layer.serviceRasterInfo,this.view.spatialReference)}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){return Se(this.layer.fullExtent,this.view.spatialReference,!0)}supportsSpatialReference(e){return!!Pe(this.layer.serviceRasterInfo,e)}async fetchPopupFeaturesAtLocation(e,t){const{layer:s}=this;if(!e)throw new z("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:r}=s,i=Re(s,t);if(!r||null==i)throw new z("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:r,popupTemplate:i});const a=[],{value:n,magdirValue:o,processedValue:l}=await s.identify(e,{timeExtent:this.timeExtent,signal:t?.signal});let u="";if(n&&n.length){u="imagery-tile"===s.type&&s.hasStandardTime()&&null!=n[0]?n.map((e=>s.getStandardTimeValue(e))).join(", "):n.join(", ");const e={ObjectId:0},t="Raster.ServicePixelValue";e[t]="imagery-tile"===s.type&&"Function"===s.raster.datasetFormat?l?.join(", "):u,e[t+".Raw"]=u;const r=s.serviceRasterInfo.attributeTable;if(null!=r){const{fields:t,features:s}=r,i=t.find((({name:e})=>"value"===e.toLowerCase())),a=i?s.find((e=>String(e.attributes[i.name])===u)):null;if(a)for(const r in a.attributes)a.attributes.hasOwnProperty(r)&&(e[this._rasterFieldPrefix+r]=a.attributes[r])}const i=s.serviceRasterInfo.dataType;"vector-magdir"!==i&&"vector-uv"!==i||(e["Raster.Magnitude"]=o?.[0],e["Raster.Direction"]=o?.[1]);const c=new M(this.fullExtent.clone(),null,e);c.layer=s,c.sourceLayer=c.layer,a.push(c)}return a}};return p([m()],t.prototype,"layer",void 0),p([m(F)],t.prototype,"timeExtent",void 0),p([m()],t.prototype,"view",void 0),p([m()],t.prototype,"fullExtent",null),p([m()],t.prototype,"tileInfo",void 0),p([m({readOnly:!0})],t.prototype,"hasTilingEffects",null),p([m()],t.prototype,"datumTransformation",null),t=p([f("esri.views.layers.ImageryTileLayerView")],t),t};let Dt=class extends(Bt(Ie(O(E)))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(e){this._useWebGLForProcessing=e,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=e)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(e){this._useProgressiveUpdate=e,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=e)}get displayParameters(){const{layer:e}=this,t=this._get("displayParameters");return e.renderer?{bandIds:e.bandIds,renderer:e.renderer,interpolation:e.interpolation,multidimensionalDefinition:e.multidimensionalDefinition,rasterFunction:"imagery-tile"===e.type?e.rasterFunction:null}:t}update(e){this.subview?.update(e),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([C((()=>this.displayParameters),((e,t)=>{const s=e.interpolation!==t?.interpolation&&("majority"===e.interpolation||"majority"===t?.interpolation)&&W(this.layer),r=e.renderer!==t?.renderer&&this._getSubviewType(t?.renderer)!==this._getSubviewType(e.renderer);r&&this._updateSubview();const i=e.multidimensionalDefinition!==t?.multidimensionalDefinition,a=e.rasterFunction!==t?.rasterFunction,n=a&&!this._useWebGLForProcessing,o=i||s||r||n;this.subview.redrawOrRefetch({refetch:o,reprocess:a}).catch((e=>{R(e)||I.getLogger(this).error(e)})),this.notifyChange("updating")})),C((()=>this.layer.multidimensionalSubset??null),((e,t)=>{const{multidimensionalDefinition:s}=this.layer;null!=s&&B(s,e)!==B(s,t)&&(this.subview.redrawOrRefetch({refetch:!0}).catch((e=>{R(e)||I.getLogger(this).error(e)})),this.notifyChange("updating"))}),V),C((()=>this.timeExtent),(()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch((e=>{R(e)||I.getLogger(this).error(e)}))}),L)])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){const{renderer:e}=this.layer;if(!e)return;const t=this._getSubviewType(e);if(this.subview){if(this.subview.type===t)return void this._attachSubview(this.subview);this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}const{layer:s}=this;let r;if(r="rasterVF"===t?new Lt({layer:s,layerView:this}):"flow"===t?new k({layer:s,layerView:this}):new Ft({layer:s,layerView:this}),"useWebGLForProcessing"in r&&(r.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in r&&(r.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in r){const{subview:e}=this;r.previousLOD=e&&"previousLOD"in e?e.previousLOD:null}this._attachSubview(r),this.subview=r,this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0))}_detachSubview(e){e?.attached&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}_getSubviewType(e){const t=e?.type;return"vector-field"===t?"rasterVF":"flow"===t?"flow":"raster"}};p([m()],Dt.prototype,"subview",void 0),p([m()],Dt.prototype,"useWebGLForProcessing",null),p([m()],Dt.prototype,"useProgressiveUpdate",null),p([m({readOnly:!0})],Dt.prototype,"displayParameters",null),Dt=p([f("esri.views.2d.layers.ImageryTileLayerView2D")],Dt),e("default",Dt)}}}));
