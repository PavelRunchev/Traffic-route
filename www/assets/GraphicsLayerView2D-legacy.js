System.register(["./index-legacy.js","./highlightReasons-legacy.js","./LayerView-legacy.js","./GraphicContainer-legacy.js","./GraphicsView2D-legacy.js","./HighlightCounter-legacy.js","./Container-legacy.js","./definitions-legacy.js","./enums-legacy.js","./Texture-legacy.js","./AGraphicContainer-legacy.js","./TechniqueInstance-legacy.js","./UpdateTracking2D-legacy.js","./TurboLine-legacy.js","./enums-legacy2.js","./earcut-legacy.js","./GeometryUtils-legacy.js","./OptimizedGeometry-legacy.js","./Rect-legacy.js","./LabelMetric-legacy.js","./Program-legacy.js","./VertexElementDescriptor-legacy.js","./BindType-legacy.js","./Util-legacy.js","./constants-legacy.js","./TileContainer-legacy.js","./WGLContainer-legacy.js","./ProgramTemplate-legacy.js","./StyleDefinition-legacy.js","./config-legacy.js","./featureConversionUtils-legacy.js","./OptimizedFeatureSet-legacy.js","./FeatureCommandQueue-legacy.js","./vec3f32-legacy.js","./AttributeStore-legacy.js","./TimeOnly-legacy.js","./timeSupport-legacy.js","./json-legacy.js","./normalizeUtilsSync-legacy.js"],(function(e,i){"use strict";var t,l,s,a,n,h,r,g,c,u,o,y,p,d;return{setters:[e=>{t=e.K,l=e.M,s=e.V,a=e.q,n=e.n,h=e.x,r=e.y,g=e.z},e=>{c=e.t},e=>{u=e.m,o=e.u},e=>{y=e.t},e=>{p=e.$},e=>{d=e.t},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){let i=class extends(u(o)){constructor(){super(...arguments),this._highlightCounter=new d}attach(){this.graphicsView=new p({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new y(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this._updateHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=t(this.graphicsView)}async hitTest(e){return this.graphicsView?this.graphicsView.hitTest(e).map((i=>({type:"graphic",graphic:i,mapPoint:e,layer:this.layer}))):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(e){this.graphicsView.processUpdate(e)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(e,i="highlight"){let t;"number"==typeof e?t=[e]:e instanceof l?t=[e.uid]:Array.isArray(e)&&e.length>0?t="number"==typeof e[0]?e:e.map((e=>e&&e.uid)):s.isCollection(e)&&e.length>0&&(t=e.map((e=>e&&e.uid)).toArray());const h=t?.filter(a);return h?.length?(this._addHighlight(h,i),n((()=>this._removeHighlight(h,i)))):n()}_addHighlight(e,i){this._highlightCounter.addReason(e,i),this._updateHighlight()}_removeHighlight(e,i){this._highlightCounter.deleteReason(e,i),this._updateHighlight()}_updateHighlight(){const e=[];for(const i of this._highlightCounter.ids()){const t=this._highlightCounter.getHighestReason(i),l=c(t);e.push({objectId:i,highlightFlags:l})}this.graphicsView?.setHighlight(e)}};h([r()],i.prototype,"graphicsView",void 0),i=h([g("esri.views.2d.layers.GraphicsLayerView2D")],i),e("default",i)}}}));
