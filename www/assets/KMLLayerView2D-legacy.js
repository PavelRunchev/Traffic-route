System.register(["./index-legacy.js","./kmlUtils-legacy.js","./Bitmap-legacy.js","./BitmapContainer-legacy.js","./LayerView-legacy.js","./GraphicContainer-legacy.js","./GraphicsView2D-legacy.js","./rasterProjectionHelper-legacy.js","./WGLContainer-legacy.js","./RenderingContext-legacy.js","./enums-legacy.js","./Program-legacy.js","./rasterUtils-legacy.js","./Texture-legacy.js","./Container-legacy.js","./highlightReasons-legacy.js","./definitions-legacy.js","./AGraphicContainer-legacy.js","./TechniqueInstance-legacy.js","./UpdateTracking2D-legacy.js","./TurboLine-legacy.js","./enums-legacy2.js","./earcut-legacy.js","./GeometryUtils-legacy.js","./OptimizedGeometry-legacy.js","./Rect-legacy.js","./LabelMetric-legacy.js","./VertexElementDescriptor-legacy.js","./BindType-legacy.js","./Util-legacy.js","./constants-legacy.js","./TileContainer-legacy.js","./FeatureCommandQueue-legacy.js","./ProgramTemplate-legacy.js","./vec3f32-legacy.js","./AttributeStore-legacy.js","./TimeOnly-legacy.js","./featureConversionUtils-legacy.js","./OptimizedFeatureSet-legacy.js","./timeSupport-legacy.js","./json-legacy.js","./normalizeUtilsSync-legacy.js","./StyleDefinition-legacy.js","./config-legacy.js","./programUtils-legacy.js","./NestedMap-legacy.js","./OrderIndependentTransparency-legacy.js","./basicInterfaces-legacy.js","./testSVGPremultipliedAlpha-legacy.js","./floatRGBA-legacy.js","./doublePrecisionUtils-legacy.js"],(function(e,t){"use strict";var i,a,s,l,n,r,o,h,c,p,u,g,d,m,y,_,w,x,b,f,V,j,v,S,C,I,D,P,T,M,R,U,k,A,E,L,q,G,z,B,O,F,N;return{setters:[e=>{i=e.t,a=e.b4,s=e.ar,l=e.X,n=e.j,r=e.V,o=e.C,h=e.eo,c=e.K,p=e.aQ,u=e.b3,g=e.bc,d=e.ep,m=e.eq,y=e.ay,_=e.dY,w=e.x,x=e.y,b=e.z},e=>{f=e.b,V=e.g,j=e.d},e=>{v=e.g,S=e.f,C=e.b},e=>{I=e.a},e=>{D=e.m,P=e.u},e=>{T=e.t},e=>{M=e.$},e=>{R=e.C,U=e.e},e=>{k=e.a},e=>{A=e.w,E=e.o},e=>{L=e.D,q=e.G,G=e.U,z=e.X},e=>{B=e.x},e=>{O=e.c},e=>{F=e.e,N=e.m},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){class t{constructor(e){if(this._ownsRctx=!1,e)this._ownsRctx=!1,this._rctx=e;else{if(t._instance)return t._instanceRefCount++,t._instance;t._instanceRefCount=1,t._instance=this,this._ownsRctx=!0;const e=document.createElement("canvas"),a=i(e);a.getExtension("OES_texture_float"),this._rctx=new A(a,{})}const a=E("raster/reproject","raster/reproject",new Map([["a_position",0]]),{applyProjection:!0,bilinear:!1,bicubic:!1});this._program=this._rctx.programCache.acquire(a.shaders.vertexShader,a.shaders.fragmentShader,a.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new k(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(e,t,i=!1){const l=a(e.extent,t),n=new s({x:(e.extent.xmax-e.extent.xmin)/e.texture.descriptor.width,y:(e.extent.ymax-e.extent.ymin)/e.texture.descriptor.height,spatialReference:e.extent.spatialReference}),{x:r,y:o}=R(n,t,e.extent);let h=(r+o)/2;const c=Math.round((l.xmax-l.xmin)/h),p=Math.round((l.ymax-l.ymin)/h);h=(l.width/c+l.height/p)/2;const u=new s({x:h,y:h,spatialReference:l.spatialReference}),g=U({projectedExtent:l,srcBufferExtent:e.extent,pixelSize:u,hasWrapAround:!0,spacing:[16,16]}),d=O(this._rctx,g),m=new F(c,p);m.wrapMode=L.CLAMP_TO_EDGE;const y=new B(this._rctx,m);this._rctx.bindFramebuffer(y),this._rctx.setViewport(0,0,c,p),this._rctx.useProgram(this._program),this._rctx.bindTexture(e.texture,0),this._rctx.bindTexture(d,1),this._quad.bind();const{width:_=0,height:w=0}=e.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",_,w),this._program.setUniform2fv("u_transformSpacing",g.spacing),this._program.setUniform2fv("u_transformGridSize",g.size),this._program.setUniform2f("u_targetImageSize",c,p),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),d.dispose(),i){const{width:e,height:t}=y,i=new ImageData(e??0,t??0);y.readPixels(0,0,e??0,t??0,q.RGBA,G.UNSIGNED_BYTE,i.data);const a=y.detachColorTexture(z.COLOR_ATTACHMENT0);return y.dispose(),{texture:a,extent:l,imageData:i}}const x=y.detachColorTexture(z.COLOR_ATTACHMENT0);return y.dispose(),{texture:x,extent:l}}reprojectBitmapData(e,t){const i=v(e.bitmapData)?S(e.bitmapData):e.bitmapData,a=new F;a.wrapMode=L.CLAMP_TO_EDGE,a.width=e.bitmapData.width,a.height=e.bitmapData.height;const s=new N(this._rctx,a,i),l=this.reprojectTexture({texture:s,extent:e.extent},t,!0);l.texture.dispose();const n=document.createElement("canvas"),r=l.imageData;return n.width=r.width,n.height=r.height,n.getContext("2d").putImageData(r,0,0),{bitmapData:n,extent:l.extent}}async loadAndReprojectBitmapData(e,t,i){const a=(await l(e,{responseType:"image"})).data,s=document.createElement("canvas");s.width=a.width,s.height=a.height;const n=s.getContext("2d");n.drawImage(a,0,0);const r=n.getImageData(0,0,s.width,s.height);if(t.spatialReference.equals(i))return{bitmapData:r,extent:t};const o=this.reprojectBitmapData({bitmapData:r,extent:t},i);return{bitmapData:o.bitmapData,extent:o.extent}}destroy(){this._ownsRctx?(t._instanceRefCount--,0===t._instanceRefCount&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),t._instance=null)):(this._quad.dispose(),this._program.dispose())}}t._instanceRefCount=0;class W{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let H=class extends(D(P)){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new I,this._kmlVisualData=new W,this._fetchController=null,this.allVisiblePoints=new n,this.allVisiblePolylines=new n,this.allVisiblePolygons=new n,this.allVisibleMapImages=new r}async hitTest(e,t){const i=this.layer;return[this._pointsView?.hitTest(e),this._polylinesView?.hitTest(e),this._polygonsView?.hitTest(e)].flat().filter(Boolean).map((t=>(t.layer=i,t.sourceLayer=i,{type:"graphic",graphic:t,layer:i,mapPoint:e})))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new M({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new T(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new M({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new T(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new M({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new T(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((e=>this._addMapImage(e))),e.removed.forEach((e=>this._removeMapImage(e)))})),o((()=>this.layer.visibleSublayers),(e=>{for(const[t,i]of this._kmlVisualData.allSublayers)i.visibility=0;for(const t of e){const e=this._kmlVisualData.allSublayers.get(t.id);e&&(e.visibility=1)}this._refreshCollections()}))]),this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new t}detach(){this._fetchController=h(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=c(this._polygonsView),this._polylinesView=c(this._polylinesView),this._pointsView=c(this._pointsView),this._imageReprojector=c(this._imageReprojector)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){(this.view.spatialReference?.isWGS84||this.view.spatialReference?.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(e.href,p.fromJSON(e.extent),this.view.spatialReference).then((t=>{const i=new C(t.bitmapData);i.x=t.extent.xmin,i.y=t.extent.ymax,i.resolution=t.extent.width/t.bitmapData.width,i.rotation=e.rotation,this._mapImageContainer.addChild(i),this._bitmapIndex.set(e,i)}))}async _getViewDependentUrl(e,t){const{viewFormat:i,viewBoundScale:s,httpQuery:l}=e;if(null!=i){if(null==t)throw new Error("Loading this network link requires a view state.");let n;if(await u(),null!=s&&1!==s){const e=new p(t.extent);e.expand(s),n=e}else n=t.extent;n=a(n,g.WGS84);const r=a(n,g.WebMercator),o=n.xmin,h=n.xmax,c=n.ymin,w=n.ymax,x=t.size[0]*t.pixelRatio,b=t.size[1]*t.pixelRatio,f=Math.max(r.width,r.height),V={"[bboxWest]":o.toString(),"[bboxEast]":h.toString(),"[bboxSouth]":c.toString(),"[bboxNorth]":w.toString(),"[lookatLon]":n.center.x.toString(),"[lookatLat]":n.center.y.toString(),"[lookatRange]":f.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":n.center.x.toString(),"[lookatTerrainLat]":n.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":n.center.x.toString(),"[cameraLat]":n.center.y.toString(),"[cameraAlt]":f.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":x.toString(),"[vertPixels]":b.toString(),"[terrainEnabled]":"0","[clientVersion]":d,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},j=e=>{for(const t in e){let i;for(i in V)e[t]=e[t].replace(i,V[i])}},v=m(i);j(v);let S={};null!=l&&(S=m(l),j(S));const C=y(e.href);return C.query={...C.query,...v,...S},`${C.path}?${_(v)}`}return e.href}async _fetchService(e){const t=new W;await this._loadVisualData(this.layer.url,t,e),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e)))}_isSublayerVisible(e){const t=this._kmlVisualData.allSublayers.get(e);return!!t?.visibility&&(-1===t.parentFolderId||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(e,t,i){return this._fetchParsedKML(e,i).then((async e=>{for(const a of e.sublayers){t.allSublayers.set(a.id,a);const e=a.points?await f(a.points):[],s=a.polylines?await f(a.polylines):[],l=a.polygons?await f(a.polygons):[],n=a.mapImages||[];if(t.allPoints.push(...e.map((e=>({item:e,sublayerId:a.id})))),t.allPolylines.push(...s.map((e=>({item:e,sublayerId:a.id})))),t.allPolygons.push(...l.map((e=>({item:e,sublayerId:a.id})))),t.allMapImages.push(...n.map((e=>({item:e,sublayerId:a.id})))),a.networkLink){const e=await this._getViewDependentUrl(a.networkLink,this.view.state);await this._loadVisualData(e,t,i)}}}))}_fetchParsedKML(e,t){return V(e,this.layer.spatialReference,this.layer.refreshInterval,t).then((e=>j(e.data)))}_removeMapImage(e){const t=this._bitmapIndex.get(e);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(e))}};w([x()],H.prototype,"_pointsView",void 0),w([x()],H.prototype,"_polylinesView",void 0),w([x()],H.prototype,"_polygonsView",void 0),w([x()],H.prototype,"updating",void 0),H=w([b("esri.views.2d.layers.KMLLayerView2D")],H),e("default",H)}}}));
