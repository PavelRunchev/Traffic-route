System.register(["./index-legacy.js","./definitions-legacy.js","./AttributeStore-legacy.js","./tileUtils-legacy.js","./geohashUtils-legacy.js","./featureConversionUtils-legacy.js","./OptimizedGeometry-legacy.js","./timeSupport-legacy.js","./QueryEngine-legacy.js","./query-legacy.js","./ogcFeatureUtils-legacy.js","./pbf-legacy.js","./pbfQueryUtils-legacy.js","./CircularArray-legacy.js","./createConnection-legacy.js","./UpdateTracking2D-legacy.js","./LabelMetric-legacy.js","./enums-legacy.js","./enums-legacy2.js","./Texture-legacy.js","./Program-legacy.js","./VertexElementDescriptor-legacy.js","./TimeOnly-legacy.js","./highlightReasons-legacy.js","./OptimizedFeatureSet-legacy.js","./json-legacy.js","./WhereClause-legacy.js","./QueryEngineCapabilities-legacy.js","./utils-legacy4.js","./utils-legacy3.js","./utils-legacy5.js","./ClassBreaksDefinition-legacy.js","./RenderState-legacy.js","./geojson-legacy.js","./date-legacy.js","./clientSideDefaults-legacy.js","./sourceUtils-legacy.js","./TurboLine-legacy.js","./earcut-legacy.js","./GeometryUtils-legacy.js","./Rect-legacy.js","./BindType-legacy.js","./Util-legacy.js","./constants-legacy.js"],(function(e,t){"use strict";var s,r,i,n,a,o,u,h,c,d,l,_,p,g,f,y,m,b,I,v,S,w,x,k,F,C,T,M,O,q,j,A,R,E,P,D,L,U,z,G,W,N,B,V,$,X,Y,Q,H,J,Z,K,ee,te,se,re,ie,ne,ae,oe,ue,he,ce,de,le,_e,pe,ge,fe,ye,me,be,Ie,ve,Se,we,xe,ke,Fe,Ce,Te,Me,Oe,qe,je,Ae,Re,Ee,Pe,De;return{setters:[e=>{s=e.v,r=e.kq,i=e.c7,n=e.bg,a=e.cx,o=e.bc,u=e.b5,h=e.m1,c=e.iJ,d=e.iK,l=e.kI,_=e.ai,p=e.kJ,g=e.eP,f=e.K,y=e.at,m=e.az,b=e.dZ,I=e.dJ,v=e.x,S=e.y,w=e.z,x=e.bm,k=e.C,F=e.s,C=e.a7,T=e.w,M=e.jV,O=e.m2,q=e.gr,j=e.gt,A=e.iq,R=e.a8,E=e.es,P=e.m3,D=e.m4,L=e.X,U=e.j$,z=e.aC,G=e.c3,W=e.cW,N=e.m5,B=e.bE,V=e.k},e=>{$=e.a},e=>{X=e.n,Y=e.i,Q=e.r,H=e.C,J=e.p,Z=e.d,K=e.f,ee=e.g,te=e.a,se=e.b,re=e.h,ie=e.j},e=>{ne=e.o},e=>{ae=e.S,oe=e.R,ue=e.A},e=>{he=e.g,ce=e.e,de=e.c,le=e.N,_e=e.n,pe=e.p,ge=e.b,fe=e.w,ye=e.a,me=e.K,be=e.O,Ie=e.f},e=>{ve=e.s,Se=e.t,we=e.e},e=>{xe=e.x,ke=e.j},e=>{Fe=e.o,Ce=e.$},e=>{Te=e.d,Me=e.c,Oe=e.S},e=>{qe=e.$},e=>{je=e.n},e=>{Ae=e.b,Re=e.h},e=>{Ee=e.t},e=>{Pe=e.createConnection},e=>{De=e.d},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){let t=class{constructor(e){this._client=e,this.layerView=this._client.createInvokeProxy("",{ignoreConnectionErrors:!0}),this.container=this._client.createInvokeProxy("container",{ignoreConnectionErrors:!0}),this.eventLog=this._client.createInvokeProxy("eventLog",{ignoreConnectionErrors:!0})}};const Le=128;function Ue(e){switch(e){case 1:case 8:case 32:return-1;case 2:case 64:return 0;case 4:case 16:case Le:return 1}}function ze(e){switch(e){case 1:case 2:case 4:return-1;case 8:case 16:return 0;case 32:case 64:case Le:return 1}}let Ge=class{constructor(e,t,s=0){this.tileKey=e,this._bufferingEnabled=t,this._sizeHint=s,this._meshes={self:new X(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0}get id(){return this.tileKey}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(e){this._meshes.self.indexEnsureSize(e)}entityStart(e,t=e){this._currentEntityOverlaps=0,this._meshes.self.entityStart(e,t)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled)for(let e=0;e<8;e++){const t=1<<e;this._currentEntityOverlaps&t&&this._meshes.neighbors[e].entityEnd()}}recordStart(e,t,s){this._currentRecordOverlaps=0,this._meshes.self.recordStart(e,t,s)}recordEnd(e=0){const t=this._meshes.self.recordEnd(this._currentRecordOverlaps);return t&&0!==this._currentRecordOverlaps?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):t}recordBounds(e,t,s,r){this._bufferingEnabled&&this._addOverlap(e,t,s,r)}recordCount(){return this._meshes.self.recordCount()}metricStart(e){this._meshes.self.metricStart(e)}metricBoxWrite(e){this._meshes.self.metricBoxWrite(e)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(e){this._meshes.self.vertexWrite(e)}vertexWriteF32(e){this._meshes.self.vertexWriteF32(e)}vertexWriteRegion(e){this._meshes.self.vertexWriteRegion(e)}indexWrite(e){this._meshes.self.indexWrite(e)}serialize(e){const t={message:[],transferList:[]},r=this._meshes.self.serialize();return t.message.push({tileId:this.tileKey,...r.message}),t.transferList.push(...r.transferList),this._meshes.neighbors.forEach(((r,i)=>{const n=r.serialize(),a=1<<i,o=Ue(a),u=ze(a),h=ne(new s(this.tileKey),o,u,e);t.message.push({tileId:h.id,...n.message}),t.transferList.push(...n.transferList)})),t}_addOverlap(e,t,s,r){const i=Math.min($/2,s),n=Math.min($/2,r),a=255^((e<0+i?148:e>=$-i?41:189)|(t<0+n?224:t>=$-n?7:231));this._currentRecordOverlaps|=a}_copyIntoNeighbors(){for(let e=0;e<8;e++){const t=1<<e;if(this._currentRecordOverlaps&t){if(!this._meshes.neighbors[e]){const s=Math.floor(this._sizeHint/16);this._meshes.neighbors[e]=new X(t,s)}const s=this._meshes.neighbors[e],r=-Ue(t)*$,i=-ze(t)*$;s.copyLastFrom(this._meshes.self,r,i)}}}},We=class{},Ne=class e{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(t,s,r,i){const n=new e;return n.setDefault(await Y(t,s,r.meshes,i)),n}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}match(e,t){const s=this.doMatch(e,t)||this.getDefault();if(s&&s.length>0){const e=this.getBackgroundFill();if(e)return[...e,...s]}return s}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}},Be=class e extends Ne{static async fromDictionaryRenderer(t,s,r){return new e(t,s,r)}constructor(e,t,s){super(),this._storage=e,this._schema=t,this._viewParams=s,this._hashToGroup=new Map}get fieldMap(){return this._schema.fieldMap}async fetchResources(e,t){const s=t.getCursor(),r=[];for(;s.next();)r.push(this._updateMeshWriterGroup(e,s));await Promise.all(r)}match(e,t){const s=e.getAttributeHash();return this._hashToGroup.get(s)}async _updateMeshWriterGroup(e,t){const s=t.readLegacyFeatureForDisplay(),r=t.getAttributeHash();if(this._hashToGroup.has(r))return;this._hashToGroup.set(r,null);const i=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",feature:s});if(!i)return;const n=await Y(this._storage,e,i.meshes,this._viewParams);this._hashToGroup.set(r,n)}},Ve=class e extends Ne{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(t,s,r,i){const n=await t.createComputedField(r),a=new e(n,r.isMaxInclusive);await Promise.all(r.intervals.map((async e=>{const r=await Y(t,s,e.meshes,i);a.add(e,r)})));const o=await Y(t,s,r.defaultSymbol,i);a.setDefault(o);const u=await Y(t,s,r.backgroundFill,i);return a.setBackgroundFill(u),a}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort(((e,t)=>e.interval.min-t.interval.min))}size(){return super.size()+this._intervals.length}doMatch(e,t){const s=this._field?.read(e,t);if(null==s||isNaN(s)||s===1/0||s===-1/0)return null;for(let r=0;r<this._intervals.length;r++){const{interval:e,result:t}=this._intervals[r],i=s>=e.min,n=this._isMaxInclusive?s<=e.max:s<e.max;if(i&&n)return t}return null}},$e=class e extends Ne{static async fromLabelSchema(t,s,r,i){const n=r.classes.map((async e=>{const r=await Y(t,s,e.meshes,i);return{minScale:e.minScale,maxScale:e.maxScale,meshes:r,expression:null,where:await t.createWhereClause(e.where)}})),a=await Promise.all(n);return new e(a)}constructor(e){super(),this._labels=e}match(e,t){if(!this._labels.length)return null;const s=this._getLabels(t.$view.scale),r=[];for(const i of s)i.where&&!i.where(e)||r.push(...i.meshes);return r}_getLabels(e){return this._labels.filter((t=>this._validForTileScale(t,e)))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}},Xe=class e extends Ne{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(t,s,r,i){const n=r.expression?[t.createComputedField({expression:r.expression})]:[r.field?t.createComputedField({field:r.field}):null,r.field2?t.createComputedField({field:r.field2}):null,r.field3?t.createComputedField({field:r.field3}):null],a=(await Promise.all(n)).filter((e=>!!e)),o=new e(a,r.fieldDelimiter),u=await Y(t,s,r.defaultSymbol,i);o.setDefault(u);const h=await Y(t,s,r.backgroundFill,i);return o.setBackgroundFill(h),await Promise.all(r.map.map((async(e,r)=>{const n=await Y(t,s,e.symbol,i);"<Null>"===e.value?o.setNullResult(n):o.add(e.value,n,r+1)}))),o}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(null==s||""===s||"<Null>"===s)return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}doMatch(e,t){const s=this._getValueFromFields(e,t);if(null!==this._nullResult&&(null==s||""===s||"<Null>"===s))return this._nullResult;if(null==s)return null;const r=s.toString();return this._resultsMap.get(r)?.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const i=r.read(e,t);null==i||""===i?s.push("<Null>"):s.push(i)}return s.join(this._separator)}};async function Ye(e,t,s,r){switch(s.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return Ne.from(e,t,s,r);case"interval":return Ve.fromIntervalSchema(e,t,s,r);case"dictionary":return Be.fromDictionaryRenderer(e,s,r);case"label":return $e.fromLabelSchema(e,t,s,r);case"map":return Xe.fromMatcherSchema(e,t,s,r);case"subtype":return Qe.fromSubtypes(e,t,s,r);case"cluster":return He.fromClusterSchema(e,t,s,r);default:throw new Error("Impl")}}let Qe=class e extends Ne{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(t,s,r,i){const n=new Map,a=[];for(const e in r.renderers){const o=parseInt(e,10),u=Ye(t,s,r.renderers[e],i).then((e=>n.set(o,e)));a.push(u)}return await Promise.all(a),new e(n,r.subtypeField)}match(e,t){const s=e.readAttribute(this._subtypeField),r=this._subMatchers.get(s);return r?r.match(e,t):null}},He=class e extends Ne{static async fromClusterSchema(t,s,r,i){const[n,a]=await Promise.all([Ye(t,s,r.feature,i),Ye(t,s,r.cluster,i)]);return new e(n,a)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t){return 1===e.readAttribute("cluster_count")?this._featureMatcher.match(e,t):this._clusterMatcher.match(e,t)}},Je=class e extends We{static async create(t,s,r,i){const n=await Ye(t,s,r.symbology,i),a=r.labels?await Ye(t,s,r.labels,i):null;return new e(n,a)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){await Promise.all([this._symbology.fetchResources(e,t),this._labels?.fetchResources(e,t)])}enqueueWriterRequests(e,t,s){const r=this._symbology.match(t,s);if(r){for(const i of r)i.enqueueRequest(e,t,s);if(this._labels){const r=this._labels.match(t,s);if(!r)return;for(const i of r)i.enqueueRequest(e,t,s)}}}write(e,t,s,r,i){const n=this._symbology.match(s,r);if(n){for(const a of n)a.write(e,t,s,r,i);if(e.entityRecordCount()>=1&&this._labels){const a=this._labels.match(s,r);if(!a)return;for(const o of a)o.setReferences(n),o.write(e,t,s,r,i)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}},Ze=class{constructor(e){this._outstandingMessages=[],this._queue=new r({concurrency:e.concurrency,process:t=>e.process(t)})}async push(e){if(e.end)return await Promise.all(this._outstandingMessages),await this._queue.push(e),void(this._outstandingMessages=[]);const t=this._queue.push(e);return this._outstandingMessages.push(t),t}},Ke=class e{static async create(t,s){if("count"===s.statisticType){const t=new Q(1);return new e(s.name,s.alias,s.type,s.statisticType,t)}const r=await t.createComputedField({expression:s.onStatisticExpression?.expression,field:s.onStatisticField});return new e(s.name,s.alias,s.type,s.statisticType,r)}constructor(e,t,s,r,i){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=i}},et=class{constructor(e){this.subscription=e,this.handledChunks=new Set}destroy(){}},tt=class{constructor(e,t){this._source=e,this._attributeStore=t,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}onSubscribe(e){const t=this.createState(e);this._sendStates.set(e.key.id,t),this.updateChunks()}onUnsubscribe(e){this._sendStates.get(e.key.id)?.destroy(),this._sendStates.delete(e.key.id)}invalidate(){const e=Array.from(this._sendStates.values());this._sendStates.clear();for(const t of e)t.destroy(),this.onSubscribe(t.subscription)}invalidateAttributeData(){}getFeatureObjectIdsForAggregate(e){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(e){return this.displayMap(e,(e=>e),(e=>e))}getDisplayAndObjectIds(e){return this.displayMap(e,(e=>e),((e,t,s)=>[e,s]))}afterUpdateChunks(){}},st=class extends tt{constructor(e,t,s,r){super(e,t),this.spatialReference=s,this.aggregateFields=r,this.events=new i,this.featureAdapter=Fe}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new Ce({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,objectIdField:this._metadata.objectIdField,spatialReference:this.spatialReference})),this._aggregateQueryEngine}removeChunks(e){}forEach(e){return this.forEachAggregateWorldSpace(e)}forEachInBounds(e,t){}forEachBounds(e,t){const s=n();for(const r of e){const e=he(s,r.geometry,!1,!1);e&&t(e)}}},rt=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.clear=s,this.end=r,this.debugInfo=i,this.type="append"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"append",clear:this.clear,id:this.id,append:e,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:t,attributeEpoch:s}}},it=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.remove=s,this.end=r,this.debugInfo=i,this.type="update"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"update",id:this.id,modify:e,debugInfo:this.debugInfo,remove:this.remove,version:t,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:s}}},nt=class e extends H{static fromFeatures(t,s){const{objectIdField:r,geometryType:i}=s,n=ce([],t,i,!1,!1,r);for(let e=0;e<n.length;e++)n[e].displayId=t[e].displayId;return e.fromOptimizedFeatures(n,s)}static fromFeatureSet(t,s){const r=de(t,s.objectIdField);return e.fromOptimizedFeatureSet(r,s)}static fromOptimizedFeatureSet(t,s){const r=e.fromOptimizedFeatures(t.features,s);return r._exceededTransferLimit=t.exceededTransferLimit,r._transform=t.transform,r._fieldsIndex=new a(t.fields),r}static fromOptimizedFeatures(t,s,r){const i=new e(t,s);return i._fieldsIndex=s.fieldsIndex,i._transform=r,i}static empty(t){return new e([],t)}constructor(e,t){super(t),this._exceededTransferLimit=!1,this._featureIndex=-1,this._fieldsIndex=null,this._geometryType=t.geometryType,this._features=e}get fields(){return this._fieldsIndex}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}get _current(){return this._features[this._featureIndex]}removeIds(e){const t=new Set(e);this._features=this._features.filter((e=>!(null!=e.objectId&&t.has(e.objectId))))}getSize(){return this._features.length}getCursor(){return this.copy()}getInTransform(){return this._transform}getAttributeHash(){let e="";for(const t in this._current.attributes)e+=this._current.attributes[t];return e}getIndex(){return this._featureIndex}setIndex(e){this._featureIndex=e}getObjectId(){return this._current?.objectId}getDisplayId(){return this._current.displayId}setDisplayId(e){this._current.displayId=e}copy(){const t=new e(this._features,this.metadata);return this.copyInto(t),t}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readGeometryArea(){return ve(this._current)?le(this._current.geometry,2):0}_readX(){return ve(this._current)?this._current.geometry.coords[0]:0}_readY(){return ve(this._current)?this._current.geometry.coords[1]:0}_readGeometry(){return ve(this._current)?this._current.geometry??null:null}_readServerCentroid(){return this._current.centroid}_readAttribute(e,t){if(!this._fieldsIndex){const t=this._current.attributes[e];if(void 0!==t)return t;const s=e.toLowerCase();for(const e in this._current.attributes)if(e.toLowerCase()===s)return this._current.attributes[e];return}const s=this._fieldsIndex.get(e);if(!s)return;let r=this._current.attributes[s.name];return null==r?r:("esriFieldTypeTimestampOffset"===this.fields.get(e)?.type&&(r=this.parseTimestampOffset(r)),t&&this.fields.isDateField(e)?new Date(r):r)}_readAttributes(){return this._current.attributes}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._transform=this._transform,e._fieldsIndex=this._fieldsIndex}},at=class extends et{constructor(e,t){super(e),this.bins=new Map,this.done=!1,this._store=t}reset(){this.destroy(),this.bins.clear(),this.done=!1,this.handledChunks.clear()}destroy(){const e=this.subscription.tile.key.level;for(const t of this.bins.values()){const s=t.cachedFeature?.objectId;null!=s&&this._store.releaseDisplayIdForObjectId(`${s}.${e}`)}}*featuresWorldSpace(){for(const e of this.bins.values()){const t=e.cachedFeature;if(t){const e=t.clone();pe(e.geometry,e.geometry,!1,!1,this.subscription.tile.transform),yield e}}}getGeohashBounds(e,t){const s=this.subscription.tile;return ae(s.extent,s.resolution,t,e)}},ot=class e extends st{static async create(t,s,r,i,n){const a=new J({spatialReference:s}),u=t.fixedBinLevel,h=await Promise.all(t.fields.map((async e=>Ke.create(a,e)))),c=t.featureFilter?await Z.create({geometryType:r.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:r.metadata.timeInfo,fieldsIndex:r.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null;return await xe(s,o.WGS84),new e({fields:h,geohashLevel:u,spatialReference:s,featureFilter:c,timeZone:n},t.fields,r,i)}constructor(e,t,s,r){super(s,r,e.spatialReference,e.fields),this._indexOptions=e,this._metadata=new K({geometryType:"esriGeometryPolygon",objectIdField:"aggregateId",fields:t,globalIdField:null,spatialReference:s.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}createState(e){return new at(e,this._attributeStore)}async*applyOverride(e){for(const t of this._sendStates.values()){t.reset();const e=new rt(t.subscription,nt.empty(this._source.metadata),!0,!1,{});yield e}}displayMap(e,t,s){const r=new Map(e.map((e=>[t(e),e]))),i=[];for(const n of this._sendStates.values())for(const e of n.featuresWorldSpace()){const{objectId:t,displayId:n}=e,a=r.get(t);if(null!=a){const e=s(n,a,t);i.push(e),r.delete(t)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._sendStates.values())for(const e of i.featuresWorldSpace())t.has(e.displayId)&&!s.has(e.objectId)&&(e.geometry&&r.push({..._e(e,this._metadata.geometryType,!1,!1),displayId:e.displayId}),s.add(e.objectId));return{features:[],aggregates:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.objectIds);return[]}async*updateChunks(){if(this._source.chunks().length)for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){for(const t of this._sendStates.values())for(const s of t.featuresWorldSpace())e(s)}async*_update(e,t){const{handledChunks:r,subscription:i,bins:n}=e,{spatialReference:a,geohashLevel:o}=this._indexOptions,u=i.tile;if(e.done)return;for(const f of t.chunks()){if(r.has(f.chunkId))continue;r.add(f.chunkId);const t=f.queryInfo;if("tileId"in t){const e=new s(t.tileId);if(e.level!==u.level||e.world!==u.key.world)continue}const i=f.getGeohashIndex(this._indexOptions),h=e.getGeohashBounds(a,o);null!=h&&i.putBins(n,h)}const h=[],c=i.tile.transform,d=i.tile.key.level;for(const s of n.values()){if(s.cachedFeature)s.cachedFeature.attributes=s.getAttributes();else{const e=s.getGeometry(this.spatialReference,c),t=new Se(e,s.getAttributes(),null);e||(t.centroid=s.getGeometryCentroid(this.spatialReference,c)),t.objectId=s.id,t.displayId=this._attributeStore.createDisplayIdForObjectId(`${t.objectId}.${d}`),s.cachedFeature=t}h.push(s.cachedFeature)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const l=nt.fromOptimizedFeatures(h,this._metadata,c),_=l.getCursor(),p=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.timeZone);for(;_.next();)this._attributeStore.setAttributeData(_.getDisplayId(),_,p);const g=new it(e.subscription,l,[],e.done,{});yield g}};const ut=Math.PI/180;let ht=class e{static create(t){return new e(t.map((e=>function(e){switch(e.statisticType){case"min":return new dt(e);case"max":return new lt(e);case"avg":return new pt(e);case"avg_angle":return new gt(e);case"sum":case"count":return new _t(e);case"mode":return new ft(e)}}(e))))}constructor(e){this._statistics=e}values(){return this._statistics.values()}insert(e,t){for(const s of this._statistics)s.insert(e,t)}merge(e){for(let t=0;t<this._statistics.length;t++){const s=this._statistics[t],r=e._statistics[t];if(s.field.name!==r.field.name)throw new Error("InternalError: Tried to merge incompatible statistics");s.merge(r)}}clone(){return new e(this._statistics.map((e=>e.clone())))}},ct=class{constructor(e){this.field=e}insert(e,t){if(!this.field.computed)return;const s=this.field.computed.read(e,t);ee(s)||this._insertValue(s)}},dt=class e extends ct{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(e){this.value=Math.min(this.value,e)}merge(e){this.value=Math.min(this.value,e.value)}clone(){const t=new e(this.field);return t.value=this.value,t}},lt=class e extends ct{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(e){this.value=Math.max(this.value,e)}merge(e){this.value=Math.max(this.value,e.value)}clone(){const t=new e(this.field);return t.value=this.value,t}},_t=class e extends ct{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(e){this.value+=e}merge(e){this.value+=e.value}clone(){const t=new e(this.field);return t.value=this.value,t}},pt=class e extends ct{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(e){this._total+=e,this._count+=1}merge(e){this._total+=e._total,this._count+=e._count}clone(){const t=new e(this.field);return t._total=this._total,t._count=this._count,t}},gt=class e extends ct{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const e=this._x/this._count,t=this._y/this._count,s=180/Math.PI;return Math.atan2(t,e)*s}_insertValue(e){this._x=this._x+Math.cos(e*ut),this._y=this._y+Math.sin(e*ut),this._count+=1}merge(e){this._x+=e._x,this._y+=e._y,this._count+=e._count}clone(){const t=new e(this.field);return t._x=this._x,t._y=this._y,t._count=this._count,t}},ft=class e extends ct{constructor(){super(...arguments),this._frequencies=new Map}get value(){let e,t=0;for(const[s,r]of this._frequencies.entries())r>t&&(t=r,e=s);return e}_insertValue(e){const t=this._frequencies.get(e);null!=t?this._frequencies.set(e,t+1):this._frequencies.set(e,1)}merge(e){for(const[t,s]of e._frequencies.entries()){const e=this._frequencies.get(t);null!=e?this._frequencies.set(t,e+s):this._frequencies.set(t,s)}}clone(){const t=new e(this.field);return t._frequencies=new Map(this._frequencies),t}},yt=class e{static createId(e,t){return`${e}.${t}`}static create(t,s,r,i){return new e(t,s,ht.create(r),i)}constructor(e,t,s,r){this.gridX=e,this.gridY=t,this._statistics=s,this._worldUnitsPerCell=r,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return e.createId(this.gridX,this.gridY)}get count(){return this._count}get statistics(){return this._statistics}get objectIds(){return this._objectIds}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const t=new e(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return t._count=this._count,t._xWorldTotal=this._xWorldTotal,t._yWorldTotal=this._yWorldTotal,t._firstFeatureAttributes=this._firstFeatureAttributes,t._objectIds=new Set(this._objectIds),t}insert(e,t,s,r){0===this._count?this._firstFeatureAttributes=e.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=s,this._yWorldTotal+=r,this._statistics.insert(e,t),this._objectIds.add(e.getObjectId())}merge(e){if(0!==e._count){this._count+=e._count,this._firstFeatureAttributes=e._firstFeatureAttributes,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroidX(e){return null==e?this.centroidXWorld:ge(e,this.centroidXWorld)}getCentroidY(e){return null==e?this.centroidYWorld:fe(e,this.centroidYWorld)}getCentroid(e){const t=new we([],[this.centroidXWorld,this.centroidYWorld]);if(null!=e){const s=new we;return ye(s,t,!1,!1,"esriGeometryPoint",e)}return t}getGeometricCentroid(e){const t=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,s=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,r=new we([],[t,s]);if(null!=e){const t=new we;return ye(t,r,!1,!1,"esriGeometryPoint",e)}return r}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return null!=this._firstFeatureAttributes?{...e,...this._firstFeatureAttributes}:e}};function mt(e,t){return u(e)*h*96/t}let bt=class{constructor(e){this._options=e,this._cells=new Map,this._pixelsPerMapUnit=mt(e.spatialReference,e.scale)}insert(e,t){const s=e.getCursor(),r={$view:{scale:this._options.scale,timeZone:this._options.timeZone}};for(;s.next();)this._insertFeature(s,r,t)}putCellsInBounds(e,t){const[s,r,i,n]=t,a=Math.floor(s*this._pixelsPerMapUnit/this._options.cellSize),o=Math.floor(r*this._pixelsPerMapUnit/this._options.cellSize),u=Math.ceil(i*this._pixelsPerMapUnit/this._options.cellSize),h=Math.ceil(n*this._pixelsPerMapUnit/this._options.cellSize);for(let c=o;c<=h;c++)for(let t=a;t<=u;t++){const s=`${t}.${c}`,r=this._cells.get(s);if(!r)continue;const i=e.get(r.id);i?r&&!e.has(r.id)&&i.merge(r):e.set(r.id,r.clone())}}putCells(e){for(const t of this._cells.values()){const s=e.get(t.id);s?s.merge(t):e.set(t.id,t.clone())}}_insertFeature(e,t,s){const{featureFilter:r}=this._options;if(null!==r&&!r.check(e))return;let i=0,n=0;if("esriGeometryPoint"===e.geometryType)i=e.readXWorldSpace(),n=e.readYWorldSpace();else{if(s){const t=e.readCentroidForDisplay();if(null==t)return;const[s,r]=t.coords;if(s<0||s>$||r<0||r>$)return}const t=e.readCentroidWorldSpace();if(null==t)return;i=t.coords[0],n=t.coords[1]}const a=i*this._pixelsPerMapUnit,o=n*this._pixelsPerMapUnit,u=Math.floor(a/this._options.cellSize),h=Math.floor(o/this._options.cellSize);this._getCellOrCreate(u,h).insert(e,t,i,n)}_getCellOrCreate(e,t){const s=yt.createId(e,t);let r=this._cells.get(s);if(!r){const i=1*this._options.cellSize/this._pixelsPerMapUnit;r=yt.create(e,t,this._options.fields,i),this._cells.set(s,r)}return r}},It=class{constructor(e,t){this.inner=e,this.displayId=t}};const vt=128;let St=class extends et{constructor(e){super(e),this.didSend=!1,this.done=!1}},wt=class{constructor(e,t,s,r,i){this._level=e,this._scale=t,this._indexOptions=s,this._clusterRadius=r,this._store=i,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const e of this._clusters.values())this._store.releaseDisplayIdForObjectId(e.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const e of this._clusters.values()){const t=e.inner.getCentroid(null),s=new Se(t,e.inner.getAttributes(),null);s.objectId=e.inner.id,s.displayId=e.displayId,yield s}}clusters(){return this._clusters.values()}updateChunks(e,t){let r=!1;for(const o of e){const e=o.queryInfo;"tileId"in e&&new s(e.tileId).level!==this._level||this._handledChunks.has(o.normalizedChunkId)||(this._handledChunks.add(o.normalizedChunkId),r=!0,o.getGridIndex({...this._indexOptions,scale:this._scale}).putCells(this._cells))}const i={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},n=mt(this._indexOptions.spatialReference,this._scale),a=this._indexOptions.cellSize;for(const{subscription:s}of t){const e=s.tile.bounds,t=Math.floor(e[0]*n/a),r=Math.floor(e[1]*n/a),o=Math.ceil(e[2]*n/a),u=Math.ceil(e[3]*n/a);i.xMin=Math.min(i.xMin,t),i.yMin=Math.min(i.yMin,r),i.xMax=Math.max(i.xMax,o),i.yMax=Math.max(i.yMax,u)}return null!=this._lastCellBounds&&i.xMin===this._lastCellBounds.xMin&&i.yMin===this._lastCellBounds.yMin&&i.yMin===this._lastCellBounds.yMin&&i.yMax===this._lastCellBounds.yMax||(r=!0,this._lastCellBounds=i),r&&this._clusterCells(i),r}async updateStatistics(e){let t=!1;for(const s of this._clusters.values())s.inner.count>1&&(t=this._updateAggregateStatistics(this._statistics,s.inner)||t);if(t){const t=Array.from(this._statistics.entries()).map((([e,t])=>({fieldName:e,minValue:t.minValue,maxValue:t.maxValue})));await e.container.updateStatistics(this._level,t)}}createAggregateFeatures(e,t){const s=e.subscription,r=[],i=s.tile.transform;for(const n of this._clusters.values()){let e=n.inner.getCentroidX(i);const t=n.inner.getCentroidY(i),a=s.tile.lod,o=a.wrap?a.worldSize[0]:null,u=1===n.inner.count?n.inner.firstObjectId:n.inner.id,h=n.displayId;if(null!=o)if(1===o){const s=new we([],[e,t]),i=new Se(s,n.inner.getAttributes(),null);i.geometry.coords[0]-=$,i.objectId=u,i.displayId=h,r.push(i);const a=new we([],[e,t]),o=new Se(a,n.inner.getAttributes(),null);o.geometry.coords[0]+=$,o.objectId=u,o.displayId=h,r.push(o)}else e>$+$/2?e-=o*$:e<-$/2&&(e+=o*$);if(e<$+vt&&e>=-128&&t<$+vt&&t>=-128){const s=new we([],[e,t]),i=new Se(s,n.inner.getAttributes(),null);i.objectId=u,i.displayId=h,r.push(i)}}return nt.fromOptimizedFeatures(r,t,s.tile.transform)}_clusterCells(e){let t=Array.from(this._cells.values());t=t.sort(((e,t)=>t.count-e.count));const s=[];for(const a of this._clusters.values())s.push(a.inner.id);this._clusters.clear();const r=this._clusterRadius*(1/mt(this._indexOptions.spatialReference,this._scale)),i=1+this._clusterRadius/this._indexOptions.cellSize,n=new Set;for(const a of t){if(n.has(a.id))continue;if(a.gridX<e.xMin||a.gridX>e.xMax||a.gridY<e.yMin||a.gridY>e.yMax)continue;const t=this._store.createDisplayIdForObjectId(a.id),s=new It(a.clone(),t);n.add(a.id),this._clusters.set(a.id,s);const o=a.centroidXWorld,u=a.centroidYWorld;for(let e=a.gridY-i;e<=a.gridY+i;e++)for(let t=a.gridX-i;t<=a.gridX+i;t++){if(e===a.gridY&&t===a.gridX)continue;const i=this._cells.get(yt.createId(t,e));if(!i||n.has(i.id))continue;const h=Math.abs(i.centroidXWorld-o),c=Math.abs(i.centroidYWorld-u);h<r&&c<r&&(s.inner.merge(i),n.add(i.id))}}for(const a of s)this._store.releaseDisplayIdForObjectId(a)}_updateAggregateStatistics(e,t){let s=!1;for(const r of t.statistics.values()){if("esriFieldTypeString"===r.field.type)continue;const t=r.value,i=r.field,n=e.get(i.name);if(n){const{minValue:e,maxValue:r}=n,i=Math.min(n.minValue,t),a=Math.max(n.maxValue,t);e===i&&r===a||(n.minValue=i,n.maxValue=a,s=!0)}else e.set(i.name,{minValue:t,maxValue:t}),s=!0}return s}};class xt extends st{static async create(e,t,s,r,i,n){const a=new J({spatialReference:s}),o={fields:await Promise.all(t.fields.map((async e=>Ke.create(a,e)))),spatialReference:s,featureFilter:t.featureFilter?await Z.create({geometryType:r.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:r.metadata.timeInfo,fieldsIndex:r.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,timeZone:n};return new xt(e,t.clusterRadius,o,t.fields,r,i)}constructor(e,t,s,r,i,n){super(i,n,s.spatialReference,s.fields),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=new K({geometryType:"esriGeometryPoint",objectIdField:"aggregateId",fields:[...r,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}],globalIdField:null,spatialReference:i.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new St(e)}async*applyOverride(e){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(e,t,s){const r=new Map(e.map((e=>[t(e),e]))),i=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const a of n.clusters()){const e=r.get(a.inner.id);if(null==e){if(1===a.inner.count){const e=r.get(a.inner.firstObjectId);if(null!=e){const t=s(a.displayId,e,a.inner.firstObjectId);i.push(t),r.delete(a.inner.firstObjectId)}}}else{const t=s(a.displayId,e,a.inner.id);i.push(t),r.delete(a.inner.id)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],i=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const a of n.aggregatesWorldSpace())if(t.has(a.displayId)&&!s.has(a.displayId)){const e=_e(a,this._metadata.geometryType,!1,!1);if(s.add(a.displayId),1===e.attributes.cluster_count){r.push({...e,displayId:a.displayId});continue}i.push({...e,displayId:a.displayId})}return{features:r,aggregates:i}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.objectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter((e=>e.subscription.tile.level===this._requiredLevel));if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const n of s)n.subscription.tile.level===this._requiredLevel&&(n.didSend=!1,n.done=!1);const r=Array.from(this._sendStates.values()).filter((e=>e.done)).map((e=>e.subscription.tile.key)),i=new Set(r);for(const n of this._sendStates.values()){if(this._source.updateTracking.updating){if(r.some((e=>e.containsChild(n.subscription.tile.key))))continue;if(n.subscription.tile.key.getChildKeys().every((e=>i.has(e))))continue}n.didSend||n.subscription.tile.level!==this._requiredLevel||(n.didSend=!0,yield*this._update(n,t,this._source))}await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(null==this._requiredLevel||null==this._requiredScale)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(null==e||null==t)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new wt(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const r=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const i=r.getCursor(),n=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.timeZone);for(;i.next();)this._attributeStore.setAttributeData(i.getDisplayId(),i,n);const a=new rt(e.subscription,r,!0,e.done,{});yield a}}let kt=class e{static fromReader(t){const s=[],r=t.copy(),i=n();for(;r.next();)r.getBounds(i)&&s.push(r.getIndex());const a=c(9,(e=>(r.setIndex(e),{minX:r.getBoundsXMin(),minY:r.getBoundsYMin(),maxX:r.getBoundsXMax(),maxY:r.getBoundsYMax()})));return a.load(s),new e(a)}constructor(e){this._index=e}search(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this._index.search(t)}},Ft=class e{static create(t,s,r,i){const n=ht.create(t),a=new Array(32);for(let e=0;e<a.length;e++)a[e]=null;return new e(n,s,r,i,a)}constructor(e,t,s,r,i){this._statistics=e,this.xNode=t,this.yNode=s,this.depth=r,this.children=i,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get objectIds(){return this._objectIds}clone(){const t=new e(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return t._count=this._count,t._xWorldTotal=this._xWorldTotal,t._yWorldTotal=this._yWorldTotal,t._xGeohashTotal=this._xGeohashTotal,t._yGeohashTotal=this._yGeohashTotal,t.next=this.next,t.cachedFeature=this.cachedFeature,t._objectIds=new Set(this._objectIds),t}insert(e,t,s,r,i,n){this._count+=1,this._xWorldTotal+=t,this._yWorldTotal+=s,this._xGeohashTotal+=r,this._yGeohashTotal+=i,this._statistics.insert(e,n),this._objectIds.add(e.getObjectId())}merge(e){if(0!==e._count){this._count+=e._count,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._xGeohashTotal+=e._xWorldTotal,this._yGeohashTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getGeometry(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,u=ke({rings:[[[r,i],[r,a],[n,a],[n,i],[r,i]]]},o.WGS84,e),h=me(new we,u,!1,!1);return null!=t?ye(new we,h,!1,!1,"esriGeometryPolygon",t,!1,!1):h}getGeometryCentroid(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,u=ke({x:(r+n)/2,y:(i+a)/2},o.WGS84,e),h=be(new we,u);return null!=t?ye(new we,h,!1,!1,"esriGeometryPoint",t,!1,!1):h}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return e.aggregateCount=this._count,e}_getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),i=30-(2*t+3*s),n=this.xNode<<r,a=this.yNode<<i;return oe({geohashX:n,geohashY:a},this.depth)}},Ct=class{constructor(e){this._fields=e,this._root=Ft.create(this._fields,0,0,0)}destroy(){}insert(e,t,s,r,i,n,a){let o=this._root,u=0,h=0,c=0;for(;null!==o;){if(o.insert(e,t,s,r,i,a),u>=n)return;const d=Math.ceil((u+1)/2),l=Math.floor((u+1)/2),_=1-u%2,p=30-(3*d+2*l),g=30-(2*d+3*l),f=(r&7*_+3*(1-_)<<p)>>p,y=(i&3*_+7*(1-_)<<g)>>g,m=f+y*(8*_+4*(1-_));h=h<<3*_+2*(1-_)|f,c=c<<2*_+3*(1-_)|y,null==o.children[m]&&(o.children[m]=Ft.create(this._fields,h,c,u+1)),u+=1,o=o.children[m]}}putBins(e,t){for(const s of this.getNodes(t)){const t=e.get(s.id);t?t.merge(s):e.set(s.id,s.clone())}}getNodes(e){const t=[],{geohashBounds:s,level:r}=e;let i=this._root;for(;null!==i;){const e=i.depth,n=i.xNode,a=i.yNode;if(e>=r){t.push(i),i=i.next;continue}const o=Math.ceil((e+1)/2),u=Math.floor((e+1)/2),h=1-e%2,c=30-(3*o+2*u),d=30-(2*o+3*u),l=~((1<<c)-1),_=~((1<<d)-1),p=(s.xLL&l)>>c,g=(s.yLL&_)>>d,f=(s.xTR&l)>>c,y=(s.yTR&_)>>d,m=n<<3*h+2*(1-h),b=a<<2*h+3*(1-h),I=m+8*h+4*(1-h),v=b+4*h+8*(1-h),S=Math.max(m,p),w=Math.max(b,g),x=Math.min(I,f),k=Math.min(v,y);let F=null,C=null;for(let t=w;t<=k;t++)for(let e=S;e<=x;e++){const s=e-m+(t-b)*(8*h+4*(1-h)),r=i.children[s];r&&(F||(F=r,F.next=i.next),C&&(C.next=r),C=r,r.next=i.next)}i=F||i.next}return t}},Tt=class{constructor(e){this._options=e,this._tree=new Ct(e.fields)}insert(e,t){const s=e.getCursor(),r={$view:{scale:0,timeZone:this._options.timeZone}};for(;s.next();)this._insertFeature(s,r,t)}putBins(e,t){this._tree.putBins(e,t)}_insertFeature(e,t,s){const{featureFilter:r,geohashLevel:i,spatialReference:n}=this._options;if(null!==r&&!r.check(e))return;let a=0,o=0;if("esriGeometryPoint"===e.geometryType)a=e.readXWorldSpace(),o=e.readYWorldSpace();else{if(s){const t=e.readCentroidForDisplay();if(null==t)return;const[s,r]=t.coords;if(s<0||s>$||r<0||r>$)return}const t=e.readCentroidWorldSpace();if(null==t)return;a=t.coords[0],o=t.coords[1]}const u=ue(a,o,i,n);u&&this._tree.insert(e,a,o,u[0],u[1],i,t)}},Mt=class e extends H{static from(t,s){return new e(t.copy(),s)}constructor(e,t){super(e.metadata),this._currentIndex=-1,this._displayTranslationX=0,this._displayTranslationY=0,this._displayScaleX=1,this._displayScaleY=1,this._reader=e,this._indices=t,this._isPoint="esriGeometryPoint"===e.geometryType}setTransformForDisplay(e){const t=this._reader.getInTransform();if(null==t){const[t,s]=e.scale,[r,i]=e.translate;return this._displayTranslationX=-r/t,this._displayScaleX=1/t,this._displayTranslationY=i/s,this._displayScaleY=1/-s,void(this._displayTransform=e)}const[s,r]=t.scale,[i,n]=t.translate,[a,o]=e.scale,[u,h]=e.translate;if(this._displayScaleX=s/a,this._displayTranslationX=(i-u)/a,this._displayScaleY=r/o,this._displayTranslationY=(-n+h)/o,!this._isPoint&&t)throw new Error("InternalError: Relative transformations not supported for non-point features");this._displayTransform=e}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const t=new e(this._reader.copy(),this._indices);return t._currentIndex=this._currentIndex,t._displayTransform=this._displayTransform,t._displayTranslationX=this._displayTranslationX,t._displayTranslationY=this._displayTranslationY,t._displayScaleX=this._displayScaleX,t._displayScaleY=this._displayScaleY,t}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._reader.readXForDisplay()*this._displayScaleX+this._displayTranslationX}readYForDisplay(){return this._reader.readYForDisplay()*this._displayScaleY+this._displayTranslationY}readGeometryForDisplay(){const e=this._reader.readGeometryForDisplay();if(!this._displayTransform)return e;const t=new we;return ye(t,e,this.hasZ,this.hasM,this.geometryType,this._displayTransform),t.deltaDecode()}readCentroidForDisplay(){const e=this._reader.readCentroidForDisplay()?.clone();if(e){const[t,s]=e.coords;e.coords[0]=t*this._displayScaleX+this._displayTranslationX,e.coords[1]=s*this._displayScaleY+this._displayTranslationY}return e}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(e,t=!1){return this._reader.readAttribute(e,t)}readAttributes(){return this._reader.readAttributes()}joinAttributes(e){return this._reader.joinAttributes(e)}getBounds(e){return this._reader.getBounds(e)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(e){return this._reader.setDisplayId(e)}setIndex(e){return this._reader.setIndex(e)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){return this._reader.readLegacyFeatureForDisplay()}readLegacyGeometryForDisplay(){return this._reader.readLegacyGeometryForDisplay()}readGeometryArea(){return this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(e,t){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(e){return this.readAttribute(e,!0)}hasField(e){return this._reader.hasField(e)}setField(e,t){return this._reader.setField(e,t)}keys(){return this._reader.keys()}castToText(e=!1){return this._reader.castToText(e)}},Ot=class{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._geohashIndex=null,this._geohashIndexHash=null,this._spatialIndex=null,this._gridIndex=null,this._gridIndexHash=null}queryFeaturesInBounds(e){const t=this._getSpatialIndex().search(e);return Mt.from(this.reader,t)}getGeohashIndex(e){const t=JSON.stringify(e);return t!==this._geohashIndexHash&&(this._geohashIndexHash=t,this._geohashIndex=new Tt(e),this._geohashIndex.insert(this.reader,this.isTiled)),this._geohashIndex}getGridIndex(e){const t=JSON.stringify(e);return t!==this._gridIndexHash&&(this._gridIndexHash=t,this._gridIndex=new bt(e),this._gridIndex.insert(this.reader,this.isTiled)),this._gridIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=kt.fromReader(this.reader)),this._spatialIndex}},qt=class extends Ot{constructor(e){super(),this.metadata=e,this.chunkId="override",this.normalizedChunkId="override",this.removed=new Set,this.overridenIds=new Set,this._features=[]}get reader(){return nt.fromOptimizedFeatures(this._features,this.metadata)}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}applyOverrides(e){super.invalidate();const{reader:t,removed:s}=e,r=[],i=new Set,n=t.getCursor(),a=new Set(s);for(this.overridenIds.clear();n.next();){const e=n.readOptimizedFeatureWorldSpace(),t=e.objectId;r.push(e),i.add(t),this.overridenIds.add(t),this.removed.delete(t)}for(const o of this._features){const e=o.objectId;a.has(e)||i.has(e)||(r.push(o),this.overridenIds.add(e))}this._features=r;for(const o of i.values())this.removed.delete(o);for(const o of s)this.removed.add(o),this.overridenIds.add(o)}getTileReader(e){if(!this._features.length)return null;const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}},jt=class extends et{},At=class extends tt{constructor(e,t,s){super(e,t),this._timeZone=s,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const e of this._source.chunks())this._cleanupChunkIds(e)}invalidateAttributeData(){this.handledChunksForAttributeData.clear()}onSubscribe(e){super.onSubscribe(e),this._evalOptions=e.tile.createArcadeEvaluationOptions(this._timeZone)}createState(e){return new jt(e)}get aggregateQueryEngine(){return null}displayMap(e,t,s){const r=new Map(e.map((e=>[t(e),e]))),i=[];for(const n of this._source.chunks()){const e=n.reader.getCursor();for(;e.next();){const t=e.getObjectId(),n=e.getDisplayId(),a=r.get(t);if(null!=a){const e=s(n,a,t);i.push(e),r.delete(t)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._source.chunks()){const e=i.reader.getCursor();for(;e.next();){const i=e.getObjectId(),n=e.getDisplayId();t.has(n)&&!s.has(i)&&(r.push({...e.readLegacyFeatureWorldSpace(),displayId:n}),s.add(i))}}return{features:r,aggregates:[]}}async*applyOverride(e){const t=[],s=e.reader.getCursor();for(;s.next();){const e=s.getObjectId();t.push(e);const r=this._attributeStore.createDisplayIdForObjectId(e);s.setDisplayId(r),this._attributeStore.setAttributeData(r,s,this._evalOptions)}const r=this.getDisplayIds(t),i=this.getDisplayIds(e.removed),n=new qt(this._source.metadata);n.applyOverrides(e),this.handledChunks.add(n.chunkId),this.handledChunksForAttributeData.add(n.chunkId),this.handledChunksForIdCreation.add(n.chunkId);for(const a of this._sendStates.values())a.handledChunks.add(n.chunkId),yield new it(a.subscription,null,r,!1,n.queryInfo);for(const a of this._sendStates.values()){const e=n.getTileReader(a.subscription.tile);yield new it(a.subscription,e,i,!1,n.queryInfo)}for(const a of e.removed)this._attributeStore.releaseDisplayIdForObjectId(a)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const e of this._sendStates.values())yield*this._update(e)}}removeChunks(e){for(const t of e)this.handledChunks.delete(t.chunkId),this.handledChunksForAttributeData.delete(t.chunkId),this._cleanupChunkIds(t)}afterUpdateChunks(){for(const e of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(e);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(e){if(this.handledChunksForIdCreation.has(e.chunkId)){const t=e.reader.getCursor();for(;t.next();){const e=t.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(e):this._attributeStore.releaseDisplayIdForObjectId(e)}this.handledChunksForIdCreation.delete(e.chunkId)}}async _updateAttributeData(){for(const e of this._source.chunks()){const{chunkId:t,reader:s}=e;if(!this.handledChunksForIdCreation.has(t)){this.handledChunksForIdCreation.add(t);const e=s.getCursor();for(;e.next();){const t=this._attributeStore.createDisplayIdForObjectId(e.getObjectId());e.setDisplayId(t)}}}for(const e of this._source.chunks())if(!this.handledChunksForAttributeData.has(e.chunkId)){this.handledChunksForAttributeData.add(e.chunkId);const t=e.reader.getCursor();for(;t.next();){const e=t.getDisplayId();this._attributeStore.setAttributeData(e,t,this._evalOptions)}}}*_update(e){const{subscription:t,handledChunks:s}=e;for(const r of this._source.chunks()){const{chunkId:i}=r;if(s.has(i))continue;s.add(i);const n=r.getTileReader(t.tile);n&&(yield new rt(e.subscription,n,!1,r.end,r.queryInfo))}}},Rt=class{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._proxy=new te({fetch:(e,t)=>this._connection.layerView.fetch(e,t),fetchDictionary:(e,t)=>this._connection.layerView.fetchDictionary(e,t)}),this._attributeStore=new se({isLocal:!1,update:e=>d(this._connection.container.updateAttributeView(e))})}destroy(){this._proxy.destory(),this._strategy?.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){return this._strategy?.aggregateQueryEngine}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[]}}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}onSubscribe(e){this._strategy?.onSubscribe(e)}onUnsubscribe(e){this._strategy?.onUnsubscribe(e)}async update(e,t,s,r,i){const n=e.processor,a=l(this._schema,n);if(!a&&!r)return;_("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:a,schema:n}),this._schema=n;const u=o.fromJSON(e.source.mutable.dataFilter.outSpatialReference),h=new J({fields:this._source.metadata.fieldsIndex,spatialReference:u});return await this._attributeStore.update(n.storage,h,this._source.metadata,u,t),this._strategy?.invalidateAttributeData(),r||p(a,"mesh")?(p(a,"mesh.strategy")&&await this._updateStrategy(n.mesh.strategy,u,i,n.mesh.timeZone),this._updateSortKey(h,"sortKey"in n.mesh?n.mesh.sortKey:null),(p(a,"mesh.factory")||"dictionary"===n.mesh.factory.symbology.type)&&(this._factory=await Je.create(h,this._proxy,n.mesh.factory,s)),this._invalidate(),this._version=t,this._connection.container.updateRenderState(this._version)):void 0}async applyOverride(e){if(!this._strategy)return;const t=this._strategy.applyOverride(e);for await(const s of t)try{await this._process(s)}catch(ls){}this._source.applyOverride(e)}async updateChunks(){await this._doUpdateChunks(),this._strategy?.afterUpdateChunks()}async removeChunks(e){this._strategy?.removeChunks(e),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:e}){if(!this._strategy)return void this._attributeStore.setHighlight(e.map((({objectId:e,highlightFlags:t})=>({objectId:e,highlightFlags:t,displayId:-1}))),e);const t=this._strategy.displayMap(e,(({objectId:e})=>e),((e,{highlightFlags:t},s)=>({objectId:s,displayId:e,highlightFlags:t})));this._attributeStore.setHighlight(t,e)}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[],s=new Map;for await(const r of e){let e=s.get(r.id);null==e&&(e=new Ze({concurrency:16,process:e=>this._process(e)}),s.set(r.id,e));const i=e.push(r).catch((e=>g(e)));t.push(i)}try{await Promise.all(t)}catch(cs){}_("esri-2d-update-debug")&&console.log("SendUpdates"),await this._attributeStore.sendUpdates(),_("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(e,t,s,r){switch(this._strategy?.destroy(),e.type){case"feature":this._strategy=new At(this._source,this._attributeStore,r);break;case"binning":this._strategy=await ot.create(e,t,this._source,this._attributeStore,r);break;case"cluster":this._strategy=await xt.create(this._connection,e,t,this._source,this._attributeStore,r)}for(const i of s)this._strategy.onSubscribe(i)}async _updateSortKey(e,t){if(this._sortInfo=f(this._sortInfo?.computed),null!=t){const s=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:s}}}_invalidate(){this._strategy&&this._strategy.invalidate()}async _process(e){const t=e.subscription;if(_("esri-2d-update-debug")){const s=t.tile;console.debug(`Version[${this._version}] Tile[${s.key.id}, end=${e.end}] Processor._process`)}await this._fetchResources(e),y(t.signal);const s=await this._write(e,t.tile.createArcadeEvaluationOptions(this._schema.mesh.timeZone)),r=t.tile.tileInfoView.tileInfo.isWrappable,{message:i,transferList:n}=s.serialize(r),a=e.createMessage(i,this._version,this._attributeStore.epoch);if(y(t.signal),this._connection.container.onMessage(a,{signal:t.signal,transferList:n}),this._attributeStore.sendUpdates(),_("esri-2d-update-debug")){const s=t.tile;console.debug(`Version[${this._version}] Tile[${s.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e){await this._fetchMatcherResources(e),await this._fetchWriterResources(e)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e){if(!e.reader)return;const t=e.reader.getCursor(),s=e.subscription.tile.createArcadeEvaluationOptions(this._schema.mesh.timeZone);for(;t.next();)this._factory.enqueueWriterRequests(this._proxy,t,s);await this._proxy.fetchEnqueuedResources()}async _write(e,t){const s=e.subscription.tile,r=e.reader?.getCursor(),i=r?.getSize()??0,n=new Ge(s.key.id,this._strategy.enablePixelBuffering,i);if(!r)return n;const a=s.createArcadeEvaluationOptions(this._schema.mesh.timeZone);for(;r.next();){const e=this._getSortKeyValue(r,t);n.entityStart(r.getDisplayId(),e),this._factory.write(n,this._proxy,r,a,s.level),n.entityEnd()}return n}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:i}=this._sortInfo,n=i?this._factory.getSortKey(e,t):s?.read(e,t);return null==n||isNaN(n)?0:n*("asc"===r?-1:1)}},Et=class e{static from(t){let s=0,r=0,i=0;return t.forEach((e=>{const t=e._readGeometry();t&&(r+=t.isPoint?1:t.lengths.reduce(((e,t)=>e+t),0),i+=t.isPoint?1:t.lengths.length,s+=1)})),new e(s,r,i)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}},Pt=class e{static fromSchema(t,s){return new e(function(e,t){const{service:s}=e,r=s.orderByFields??t.objectIdField+" ASC",i=s.source,n={returnCentroid:!(null!==i&&"object"==typeof i&&"path"in i&&b(i.path))&&"esriGeometryPolygon"===t.geometryType,returnGeometry:!0,timeReferenceUnknownClient:t.timeReferenceUnknownClient??void 0,outSpatialReference:o.fromJSON(e.mutable.dataFilter.outSpatialReference),orderByFields:[r],where:e.mutable.dataFilter.definitionExpression??"1=1",outFields:e.mutable.availableFields};if("feature"===e.type){const{gdbVersion:t,historicMoment:s,timeExtent:r}=e.mutable.dataFilter;return{...n,gdbVersion:t,historicMoment:s?new Date(s):null,timeExtent:r?I.fromJSON(r):null,outFields:e.mutable.availableFields}}return n}(t,s),t.mutable.dataFilter.customParameters,s.geometryType,t.service.queryMetadata.capabilities)}constructor(e,t,s,r){this._queryParams=e,this._customParameters=t,this._geometryType=s,this._capabilities=r}get pageSize(){if(null==this._capabilities)throw new Error("InternalError: Service does not support paged queries");const{query:e}=this._capabilities,t=e.supportsMaxRecordCountFactor?4:null,s=(e.maxRecordCount??8e3)*(t??1);return Math.min(8e3,s)}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t){const s=e.clone();if("*"===this._queryParams.outFields[0]){if("*"===(s.outFields??[])[0])return null;s.outFields=this._queryParams.outFields}else{const e=new Set(this._queryParams.outFields),r=[];for(const s of e)t.has(s)||r.push(s);if(0===r.length)return null;s.outFields=r}return s.returnGeometry=!1,s.returnCentroid=!1,s.quantizationParameters=null,s.cacheHint=!0,{inner:s,customParameters:this._customParameters}}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new m({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(null==this._capabilities)throw new Error("InternalError: Service does not support tile queries");const s=this.createQuery(t),r=s.inner;return r.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),r.resultType="tile",r.geometry=e.extent,this._capabilities.query.supportsQuantization?"esriGeometryPolyline"===this._geometryType&&(r.maxAllowableOffset=e.resolution*_("feature-polyline-generalization-factor")):"esriGeometryPolyline"!==this._geometryType&&"esriGeometryPolygon"!==this._geometryType||(r.maxAllowableOffset=e.resolution,"esriGeometryPolyline"===this._geometryType&&(r.maxAllowableOffset*=_("feature-polyline-generalization-factor"))),r.defaultSpatialReferenceEnabled=this._capabilities.query.supportsDefaultSpatialReference,r.compactGeometryEnabled=this._capabilities.query.supportsCompactGeometry,this._capabilities.query.supportsMaxRecordCountFactor&&(r.maxRecordCountFactor=4),s}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e){const t=this.pageSize;return this.createQuery({start:t*e,num:t,returnExceededLimitFeatures:!0,maxRecordCountFactor:4})}},Dt=class extends x{constructor(e){super(),this._connection=e,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this.addHandles([k((()=>this._strategy?.connectionStatus??"disconnected"),(e=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:e})}),{initial:!0}),k((()=>this._strategy?.errorString||null),(e=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:e})),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(e){null==this._strategy&&this._resetUpdateInfo(performance.now());const t="event-handles";this.removeHandles(t),null!=e&&this.addHandles([e.events.on("data-received",(e=>this._onFeature(e))),e.events.on("message-received",(e=>this._onWebSocketMessage(e))),e.events.on("features-updated",(e=>this._onUpdate(e))),e.events.on("tick",(()=>this._onTick()))],t),this._strategy=e}updateCustomParameters(e){null!=e&&this._strategy?.updateCustomParameters(e)}sendMessageToSocket(e){this._strategy?.sendMessageToSocket(e)}sendMessageToClient(e){this._strategy?.sendMessageToClient(e)}enableEvent(e,t){t?this._enabledEventTypes.add(e):this._enabledEventTypes.delete(e)}disconnect(){this._strategy?.disconnect()}connect(){this._strategy?.connect()}clear(){this._strategy?.clear()}_onWebSocketMessage(e){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:e})}_onFeature(e){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}})}_onUpdate(e){this._updateInfo.client+=e}_onTick(){const e=performance.now(),t=e-this._lastTime;if(t>2500){const s=Math.round(this._updateInfo.client/(t/1e3)),r=Math.round(this._updateInfo.websocket/(t/1e3));this._resetUpdateInfo(e),this._layerView.emitEvent({name:"update-rate",event:{client:s,websocket:r}})}}_resetUpdateInfo(e){this._lastTime=e,this._updateInfo.client=0,this._updateInfo.websocket=0}};v([S()],Dt.prototype,"_strategy",void 0),Dt=v([w("esri.views.2d.layers.features.sources.StreamMessenger")],Dt);let Lt=class{constructor(e){this._store=e,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}async queryOverride(e){throw new Error("InternalError: LoadStrategy does not support fetching")}};const Ut=268435455;let zt=class{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}};const Gt=268435455,Wt=128e3,Nt={small:{delta:new Int32Array(128),decoded:new Int32Array(128)},large:{delta:new Int32Array(Wt),decoded:new Int32Array(Wt)}};function Bt(e){return e<=Nt.small.delta.length?Nt.small:(e<=Nt.large.delta.length||(Nt.large.delta=new Int32Array(Math.round(1.25*e)),Nt.large.decoded=new Int32Array(Math.round(1.25*e))),Nt.large)}function Vt(e){for(;e.next();){if(1===e.tag())return e.getMessage();e.skip()}return null}function $t(e,t,s,r,i,n){return.5*Math.abs(e*r+s*n+i*t-e*n-s*t-i*r)}function Xt(e,t,s,r){return 0==e*r-s*t&&e*s+t*r>0}let Yt=class e extends H{static fromBuffer(t,s,r=!1){const i=s.geometryType,n=function(e){try{const t=2,s=new je(new Uint8Array(e),new DataView(e));for(;s.next();){if(s.tag()===t)return Vt(s.getMessage());s.skip()}}catch(n){const t=new F("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:n});T.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}(t),o=function(e,t,s=!1){const r=e.asUnsafe(),i=r.pos(),n=new zt;let o=0,u=0,h=null,c=null,d=null,l=!1;const _=[];for(;r.next();)switch(r.tag()){case 1:h=r.getString();break;case 3:c=r.getString();break;case 12:d=r.processMessage(Re);break;case 9:if(n.exceededTransferLimit=r.getBool(),n.exceededTransferLimit){n.offsets.geometry=s?new Float64Array(8e3):new Int32Array(8e3),n.centroid=s?new Float64Array(16e3):new Int32Array(16e3);for(let e=0;e<n.centroid.length;e++)n.centroid[e]=Ut}break;case 13:{const e=r.processMessage(Ae);e.index=o++,_.push(e);break}case 15:{const e=r.getLength(),i=r.pos()+e;if(!n.exceededTransferLimit){const e=n.offsets.geometry,t=n.centroid;e.push(0),t.push(Ut),t.push(Ut)}!l&&n.exceededTransferLimit&&(l=!0,n.offsets.attributes=s?new Float64Array(8e3*o):new Uint32Array(8e3*o));let a=u*o;for(;r.pos()<i&&r.next();)switch(r.tag()){case 1:{l?n.offsets.attributes[a++]=r.pos():n.offsets.attributes.push(r.pos());const e=r.getLength();r.skipLen(e);break}case 2:if(t){const e=r.getLength(),t=r.pos()+e;for(;r.pos()<t&&r.next();)switch(r.tag()){case 3:{r.getUInt32();const e=r.getSInt64(),t=r.getSInt64();n.centroid[2*u]=e,n.centroid[2*u+1]=t;break}default:r.skip()}}else{n.offsets.geometry[u]=r.pos();const e=r.getLength();n.vertexCount+=e,r.skipLen(e)}break;case 4:{const e=r.getLength(),t=r.pos()+e;for(;r.pos()<t&&r.next();)switch(r.tag()){case 3:{r.getUInt32();const e=r.getSInt64(),t=r.getSInt64();n.centroid[2*u]=e,n.centroid[2*u+1]=t;break}default:r.skip()}break}default:r.skip()}u++,n.hasFeatures=!0;break}default:r.skip()}const p=h||c;if(!p)throw new F("FeatureSet has no objectId or globalId field name");return n.fields=new a(_),n.featureCount=u,n.fieldCount=o,n.objectIdFieldIndex=n.fields.get(p)?.index,n.transform=d,n.displayIds=new Uint32Array(n.featureCount),n.groupIds=new Uint16Array(n.featureCount),r.move(i),n}(n,"esriGeometryPoint"===i,r);return new e(n,o,s)}constructor(e,t,s){super(s),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints="esriGeometryPoint"===s.geometryType}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const t=this._reader.clone(),s=new e(t,this._header,this.metadata);return this.copyInto(s),s}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===Gt?null:new we([],[e,t])}_readGeometry(e=!1){if(void 0===this._cache.geometry){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===Gt)return null;const e=this._header.centroid[2*this._featureIndex],s=this._header.centroid[2*this._featureIndex+1];t=new we([],[e,s])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(0===s)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch(_s){return console.error("Failed to parse geometry!",_s),null}}return 0===t?.coords.length&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(null==s)return;let r=this._readAttributeAtIndex(s.index);"esriFieldTypeTimestampOffset"===this.fields.get(e)?.type&&(r=this.parseTimestampOffset(r));const i=this._header.fields.isDateField(s.name);return t?null==r?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new re(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;r.move(s);const i=function(e){const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 1:return e.getString();case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getSInt32();case 5:return e.getUInt32();case 6:return e.getInt64();case 7:return e.getUInt64();case 8:return e.getSInt64();case 9:return e.getBool();default:return e.skip(),null}return null}(r);return t.set(this._featureIndex,i),i}_readGeometryDeltaDecoded(e=!1){if(void 0===this._cache.unquantGeometry){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=Bt(t.coords.length).decoded,r=t.clone(s),i=r.coords;let n=0;for(const e of r.lengths){for(let t=1;t<e;t++){const e=2*(n+t),s=2*(n+t-1);i[e]+=i[s],i[e+1]+=i[s+1]}n+=e}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,i=[],n=[];for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const e=t.getUInt32(),s=t.pos()+e;for(;t.pos()<s;)n.push(t.getUInt32());break}case 3:{const e=t.getUInt32(),s=t.pos()+e;for(i.push(t.getSInt64()),i.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();t.pos()<s;)i.push(t.getSInt64()),i.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();break}default:t.skip()}return new we(n,i)}_parseGeometryForDisplay(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,i=[],n=[];let a=0,o=0,u=null,h=0;const c="esriGeometryPolygon"===this.geometryType;for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const e=t.getUInt32(),s=t.pos()+e;for(;t.pos()<s;){const e=t.getUInt32();i.push(e),a+=e}u=Bt(2*a).delta;break}case 3:{t.getUInt32();const e=2+(this.hasZ?1:0)+(this.hasM?1:0);C(u);for(const s of i)if(o+e*s>u.length)for(let e=0;e<s;e++)t.getSInt32(),t.getSInt32(),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();else if(c){const e=this.getAreaSimplificationThreshold(s,this._header.vertexCount);let r=2,i=1;const a=!1;let c=t.getSInt32(),d=t.getSInt32();u[o++]=c,u[o++]=d,this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();let l=t.getSInt32(),_=t.getSInt32();for(this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();r<s;){let s=t.getSInt32(),n=t.getSInt32();this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();const a=c+l,p=d+_;$t(c,d,a,p,a+s,p+n)>=e?(h+=-.5*(a-c)*(p+d),i>1&&Xt(u[o-2],u[o-1],l,_)?(u[o-2]+=l,u[o-1]+=_):(u[o++]=l,u[o++]=_,i++),c=a,d=p):(s+=l,n+=_),l=s,_=n,r++}i<3||a?o-=2*i:(h+=-.5*(c+l-c)*(d+_+d),Xt(u[o-2],u[o-1],l,_)?(u[o-2]+=l,u[o-1]+=_,n.push(i)):(u[o++]=l,u[o++]=_,n.push(++i)))}else{let e=0,r=t.getSInt32(),i=t.getSInt32();this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32(),u[o++]=r,u[o++]=i,e+=1;for(let n=1;n<s;n++){const s=t.getSInt32(),a=t.getSInt32(),c=r+s,d=i+a;h+=-.5*(c-r)*(d+i),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32(),n>2&&Xt(u[o-2],u[o-1],s,a)?(u[o-2]+=s,u[o-1]+=a):(u[o++]=s,u[o++]=a,e+=1),r=c,i=d}n.push(e)}break}default:t.skip()}return this._cache.area=h,n.length?new we(n,u):null}};class Qt{constructor(e,t){this.service=e,this._metadata=t}destroy(){}}class Ht extends Qt{constructor(e,t){super(e,t),this._portsOpen=async function(e){const t=new O;return await t.open(e,{}),t}(e.source).then((e=>this.client=e))}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return nt.fromFeatureSet(s,this._metadata)}}class Jt extends Qt{async executeQuery(e,t){const{data:s}=await Te(this.service.source,e,t),r=!e.quantizationParameters;return Yt.fromBuffer(s,this._metadata,r)}}class Zt extends Qt{async executeQuery(e,t){const{source:s,queryMetadata:r}=this.service,i=r.capabilities;if(null!=e.quantizationParameters&&!i.query.supportsQuantization){const r=e.clone(),i=M(r.quantizationParameters);r.quantizationParameters=null;const{data:n}=await Me(s,r,this._metadata.spatialReference,t),a=de(n,this._metadata.objectIdField);return Ie(i,a),nt.fromOptimizedFeatureSet(a,this._metadata)}const{data:n}=await Me(s,e,this._metadata.spatialReference,t);return"esriGeometryPoint"===this._metadata.geometryType&&(n.features=n.features?.filter((e=>{if(null!=e.geometry){const t=e.geometry;return Number.isFinite(t.x)&&Number.isFinite(t.y)}return!0}))),nt.fromFeatureSet(n,this._metadata)}}let Kt=class extends Qt{async executeQuery(e,t){const{capabilities:s}=this.service.queryMetadata;if(e.quantizationParameters&&!s.query.supportsQuantization){const s=e.clone(),r=M(s.quantizationParameters);s.quantizationParameters=null;const i=await qe(this.service.source,e,t);return Ie(r,i),nt.fromOptimizedFeatureSet(i,this._metadata)}const r=await qe(this.service.source,e,t);return nt.fromOptimizedFeatureSet(r,this._metadata)}},es=class extends Lt{constructor(e,t,s,i,n){super(s),this._serviceInfo=e,this._queryInfo=t,this._metadata=i,this._eventLog=n,this._queue=new r({concurrency:16,process:async e=>{const t={signal:e.options?.signal,query:e.query.customParameters};return this._adapter.executeQuery(e.query.inner,t)}}),this._adapter=function(e,t){switch(e.type){case"memory":return new Ht(e,t);case"ogc":return new Kt(e,t);case"feature-service":return e.queryMetadata.capabilities.query.supportsFormatPBF&&_("featurelayer-pbf")?new Jt(e,t):new Zt(e,t)}}(e,i)}async updateFields(e){this._queryInfo.updateFields(e);const t=Array.from(this._store.chunks()).map((async e=>{const s=m.fromJSON(e.queryInfo.queryJSON);if(s)try{return await this._tryUpdateFields(e.reader,s),null}catch(t){return t}})),s=(await Promise.all(t)).filter((e=>e));if(s.length)throw new F("featurelayer-query","Encountered errors when downloading fields",{errors:s})}async queryOverride({edits:e}){const t=[],s=[];for(const n of e.removed)null!=n.objectId&&-1!==n.objectId?t.push(n.objectId):s.push(n.globalId);s.length&&t.push(...this._mapGlobalIdsToObjectIds(s));const r=e.addOrModified.map((({objectId:e})=>e));let i;if(r.length){const e=this._queryInfo.createQuery({objectIds:r});i=await this._fetch(e)}else i=nt.empty(this._metadata);return{reader:i,removed:t}}_mapGlobalIdsToObjectIds(e){const t=new Set(e),s=this._metadata.globalIdField;if(null==s)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");const r=[];return this._store.forEachUnsafe((e=>{const i=e.readAttribute(s);t.has(i)&&r.push(e.getObjectId())})),r}async _fetch(e,t){const s=await this._enqueue(e,t);return await this._tryUpdateFields(s,e.inner),s}async _tryUpdateFields(e,t){const s=this._queryInfo.createPatchFieldsQuery(t,e.fields);if(!s)return;const r=await this._enqueue(s,this._options);e.joinAttributes(r)}async _enqueue(e,t){return this._eventLog.onEvent({type:"fetchStart"}),this._queue.push({query:e,options:t}).finally((()=>{this._eventLog.onEvent({type:"fetchEnd",done:0===this._queue.length})}))}},ts=class extends es{constructor(){super(...arguments),this._chunksById=new Map}unload(e){this._removeChunks(e.tile)}_addChunk(e){const t=e.tile.id;this._chunksById.has(t)||this._chunksById.set(t,[]);const s=e.size();(s||e.first||e.end)&&(_("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] ATileLoadStrategy.addChunk [count=${s}]`),this._chunksById.get(t).push(e),this._store.insert(e))}_removeChunks(e){const t=this._chunksById.get(e.key.id)??[];for(const s of t)_("esri-2d-update-debug")&&console.debug(`Tile[${e.key.id}] Chunk[${s.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(s);this._chunksById.delete(e.key.id)}},ss=class extends Ot{constructor(e,t,s,r,i,n){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._sourceTile=r,this._sourceTileDepth=i,this._end=n,this.chunkId=`${this._tile.key.id}.${this._sourceTile?.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._sourceTile?.key.normalizedId}${this._end?"e":""}`}get queryInfo(){return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:this._sourceTile?.key.id,size:this.size(),end:this.end}}get first(){return 0===this._sourceTileDepth}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}},rs=class{constructor(e,t){this.subscription=e,this._tileIdToResult=new Map,this._controller=new AbortController,q(e.options,(()=>this._controller.abort())),q(t,(()=>this._controller.abort()))}get(e){return this._tileIdToResult.get(e)}set(e,t){this._tileIdToResult.set(e,t)}get options(){return{signal:this._controller.signal}}},is=class extends ts{constructor(){super(...arguments),this._loadStates=new Map}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new rs(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{for await(const s of this._fetchChunkInfos(t,e.tile,0)){const{queryJSON:t,reader:r,sourceTile:i,sourceTileDepth:n,tile:a}=s,o=new ss(r,t,a,i,n,!1);y(e.options),this._addChunk(o)}}catch(hs){s=hs}const r=new ss(nt.empty(this._metadata),null,e.tile,null,-1,!0);if(this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.delete(e.key.id)}async*_fetchChunkInfos(e,t,s){let r=e.get(t.id);const i=!!r;if(r||(r=await this._fetchChunkInfo(e,t,s),e.set(t.id,r)),r.reader.exceededTransferLimit&&s<_("featurelayer-query-max-depth"))for(const n of t.createChildTiles())yield*this._fetchChunkInfos(e,n,s+1);else i||(yield r)}async _fetchChunkInfo(e,t,s){const r=e.subscription.tile.getQuantizationParameters(),i=this._queryInfo.createTileQuery(t,{returnExceededLimitFeatures:!1,quantizationParameters:r});return{reader:await this._fetch(i,e.subscription.options),queryJSON:i.inner.toJSON(),tile:e.subscription.tile,sourceTile:t,sourceTileDepth:s}}},ns=class extends Ot{constructor(e,t,s,r,i){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return 0===this._page}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}},as=class{constructor(e,t){this.subscription=e,this._pages=new Set,this._controller=new AbortController,this._done=!1,q(e.options,(()=>this._controller.abort())),q(t,(()=>this._controller.abort()))}resetAbortController(){this._controller=new AbortController}get pageStart(){let e=-1;for(const t of this._pages.values())e=Math.max(e,t);return e+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(e,t){this._pages.add(e),this._done=this._done||t}},os=class extends ts{constructor(){super(...arguments),this._loadStates=new Map}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new as(e,this._options));const t=this._loadStates.get(e.key.id);let s;t.resetAbortController();try{await this._fetchPages(t)}catch(Ht){s=Ht}const r=new ns(nt.empty(this._metadata),null,e.tile,-1,!0);if(j(t.options)||this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.delete(e.key.id)}async _fetchPages(e){let t=0,s=e.pageStart,r=1;for(;t<20&&!e.done;){const i=[];for(let t=0;t<r;t++)i.push(this._fetchChunk(e,s++));const n=await Promise.all(i);for(const t of n)(0!==t.size()||t.first)&&(e.add(t.page,!t.reader.exceededTransferLimit),y(e.options),this._addChunk(t));t++,r=Math.min(r+1,4)}}async _fetchChunk(e,t){const s=e.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,t),i=await this._fetch(r,e.options);return new ns(i,r.inner.toJSON(),s,t,!1)}},us=class extends Ot{constructor(e,t,s,r){super(),this._reader=e,this._queryJSON=t,this._page=s,this._end=r,this.chunkId=`${this._page}${this.end?"e":""}`,this.normalizedChunkId=this.chunkId}get reader(){return this._reader}get first(){return 0===this._page}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}};class hs extends es{constructor(e,t,s,r,i,n){super(e,t,s,i,n),this._random=new A(1e3),this._featureCount=r}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return null==this._promise&&(this._promise=this._downloadPages(this._featureCount)),this._promise}unload(e){}async _downloadPages(e){const t=Math.ceil(e/this._queryInfo.pageSize),s=Array.from({length:t},((e,t)=>t)).sort(((e,t)=>this._random.getInt()-this._random.getInt())),r=await Promise.all(s.map((e=>this._downloadPage(e)))),i=new us(nt.empty(this._metadata),null,-1,!0);this._store.insert(i);const n=r.filter((e=>e));if(n.length)throw new F("featurelayer-query","Encountered errors when downloading data",{errors:n})}async _downloadPage(e){try{const t=this._queryInfo.createPagedQuery(e),s=await this._fetch(t,this._options),r=new us(s,t.inner.toJSON(),e,!1);return y(this._options),this._store.insert(r),null}catch(ms){return ms}}}const cs="__esri_timestamp__";class ds{constructor(e,t,s,r,i=128){this._trackIdToObservations=new Map,this._idCounter=0,this._lastPurge=performance.now(),this._addOrUpdated=new Map,this._removed=[],this._maxAge=0,this._timeInfo=s,this._purgeOptions=r,this.store=e,this.objectIdField=t,this.purgeInterval=i,this._useGeneratedIds="__esri_stream_id__"===this.objectIdField}removeById(e){this._removed.push(e)}removeByTrackId(e){const t=this._trackIdToObservations.get(e);if(t)for(const s of t.entries)this._removed.push(s)}add(e){if(this._useGeneratedIds){const t=this._nextId();e.attributes[this.objectIdField]=t,e.objectId=t}else e.objectId=e.attributes[this.objectIdField];const t=e.objectId;if(this._addOrUpdated.set(t,e),this._maxAge=Math.max(this._maxAge,e.attributes[this._timeInfo.startTimeField]),!this._timeInfo.trackIdField)return null==this._trackIdLessObservations&&(this._trackIdLessObservations=new Ee(1e5)),void this._trackIdLessObservations.enqueue(t);const s=e.attributes[this._timeInfo.trackIdField];if(!this._trackIdToObservations.has(s)){const e=null!=this._purgeOptions?.maxObservations?this._purgeOptions.maxObservations:1e3,t=R(e,0,1e3);this._trackIdToObservations.set(s,new Ee(t))}const r=this._trackIdToObservations.get(s),i=r?.enqueue(t);null!=i&&(this._addOrUpdated.has(i)?this._addOrUpdated.delete(i):this._removed.push(i))}checkForUpdates(){const e=this._getToAdd(),t=this._getToRemove(),s=performance.now();s-this._lastPurge>=this.purgeInterval&&(this._purge(s),this._lastPurge=s);const r=[];if(null!=t)for(const n of t){const e=this.store.removeById(n);null!=e&&r.push(e)}const i=[];if(null!=e){const r=new Set(t??[]);for(const t of e)r.has(t.objectId)||(t.attributes[cs]=s,this.store.add(t),i.push(t))}return!(!i.length&&!r?.length||(this.store.update(i,r),0))}_getToAdd(){if(!this._addOrUpdated.size)return null;const e=new Array(this._addOrUpdated.size);let t=0;return this._addOrUpdated.forEach((s=>e[t++]=s)),this._addOrUpdated.clear(),e}_getToRemove(){const e=this._removed;return this._removed.length?(this._removed=[],e):null}_nextId(){const e=this._idCounter;return this._idCounter=(this._idCounter+1)%4294967294+1,e}_purge(e){const t=this._purgeOptions;null!=t&&(this._purgeSomeByDisplayCount(t),this._purgeByAge(t),this._purgeByAgeReceived(e,t),this._purgeTracks())}_purgeSomeByDisplayCount(e){if(!e.displayCount)return;let t=this.store.size;if(t>e.displayCount){if(this._timeInfo.trackIdField)for(const s of this._trackIdToObservations.values())if(t>e.displayCount&&s.size){const e=s.dequeue();this._removed.push(e),t--}if(null!=this._trackIdLessObservations){let s=t-e.displayCount;for(;s-- >0;){const e=this._trackIdLessObservations.dequeue();null!=e&&this._removed.push(e)}}}}_purgeByAge(e){const t=this._timeInfo?.startTimeField;if(!e.age||!t)return;const s=60*e.age*1e3,r=this._maxAge-s;this.store.forEach((e=>{e.attributes[t]<r&&this._removed.push(e.objectId)}))}_purgeByAgeReceived(e,t){if(!t.ageReceived)return;const s=e-60*t.ageReceived*1e3;this.store.forEach((e=>{e.attributes[cs]<s&&this._removed.push(e.objectId)}))}_purgeTracks(){this._trackIdToObservations.forEach(((e,t)=>{0===e.size&&this._trackIdToObservations.delete(t)}))}}let ls=class extends x{constructor(e){super(e)}get connectionStatus(){return this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}};v([S()],ls.prototype,"connection",void 0),v([S()],ls.prototype,"connectionStatus",null),v([S()],ls.prototype,"errorString",null),ls=v([w("esri.views.2d.layers.features.sources.StreamConnectionState")],ls);class _s{constructor(e,t){this._metadata=e,this._onUpdate=t,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return nt.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(e){this._objectIdToFeature.set(e.objectId,e)}forEach(e){this._objectIdToFeature.forEach(e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),t):null}clear(){this._objectIdToFeature=new Map}update(e,t){this._onUpdate(e?.length??0)}}let ps=class extends Ot{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}};class gs extends Lt{constructor(e,t,s,r,n){super(s),this._service=e,this._dataFilter=t,this._streamOptions=r,this._metadata=n,this._connectionState=new ls,this._forceRefresh=!1,this.events=new i;const{objectIdField:a,timeInfo:o}=this._metadata,{purgeOptions:u}=t;this._stagingStore=new _s(this._metadata,(e=>this.events.emit("features-updated",e))),this._manager=new ds(this._stagingStore,a,o,u),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}async refresh(){const e=null!=this._chunk;this._manager.checkForUpdates()||!e||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new ps(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick")):this.events.emit("tick")}async updateFields(e){throw new Error("Updating available fields not supported for StreamLayer")}async load(e){}unload(e){}disconnect(){this._connection=f(this._connection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(null!=this._connection)return;const{geometryType:e,spatialReference:t}=this._metadata,{maxReconnectionAttempts:s,maxReconnectionInterval:r,geometryDefinition:i,definitionExpression:n,customParameters:a}=this._dataFilter;this._connection=Pe(this._service.source,t,this._streamOptions.outSR,e,n,i,s,r,a),this._handlesGroup=E([this._connection.on("data-received",(e=>this._onFeature(e))),this._connection.on("message-received",(e=>this._onWebSocketMessage(e)))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){this._connection?.updateCustomParameters(e)}sendMessageToSocket(e){this._connection?.sendMessageToSocket(e)}sendMessageToClient(e){this._connection?.sendMessageToClient(e)}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch(_s){}}}class fs{constructor(e){this._onChange=e,this._chunks=new Map,this._chunksToRemove=[],this.events=new i,this.featureAdapter=new ie}destroy(){this.clear()}clear(){for(const e of this._chunks.values())this._chunksToRemove.push(e);this._chunks.clear(),null!=this._overrideChunk&&this._chunksToRemove.push(this._overrideChunk),this._overrideChunk=null}*chunks(){this._overrideChunk&&(yield this._overrideChunk),yield*this._chunks.values()}insert(e){_("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),this._overrideChunk?.overridenIds.size&&e.reader.removeIds(this._overrideChunk.overridenIds),this._chunks.set(e.chunkId,e),this.events.emit("changed"),this._onChange()}remove(e){_("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this._chunksToRemove.push(e)}cleanupRemovedChunks(){const e=this._chunksToRemove;return this._chunksToRemove=[],e}applyOverrides(e,t){null==this._overrideChunk&&(this._overrideChunk=new qt(t)),this._overrideChunk.applyOverrides(e);for(const s of this._chunks.values())s.reader.removeIds(this._overrideChunk.overridenIds),s.invalidate()}forEach(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const s=r.getObjectId();t.has(s)||(e(r.copy()),t.add(s))}}}forEachUnsafe(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const s=r.getObjectId();t.has(s)||(e(r),t.add(s))}}}forEachInBounds(e,t){const s=new Set;for(const r of this.chunks()){const i=r.queryFeaturesInBounds(e);for(;i.next();){const e=i.getObjectId();s.has(e)||(t(i.copy()),s.add(e))}}}forEachBounds(e,t){const s=n();for(const r of e)r.getBounds(s)&&t(s)}}let ys=class{constructor(e,t,s,r){this._aggregateAdapter=e,this._subscriptions=t,this._onChange=s,this._connection=r,this._updateTracking=new De({debugName:"FeatureSource"}),this._store=new fs(this._onChange)}destroy(){this._strategy?.destroy(),this._store.destroy(),this._streamMessenger?.destroy()}get _eventLog(){return this._connection.eventLog}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get service(){return this._schema.service}get store(){return this._store}get streamMessenger(){return null==this._streamMessenger&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return Et.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,s=this._metadata;this._queryEngine=new Ce({featureStore:this._store,fieldsIndex:s.fieldsIndex,geometryType:s.geometryType,objectIdField:s.objectIdField,hasM:!1,hasZ:!1,spatialReference:e.outSpatialReference,cacheSpatialQueries:!0,aggregateAdapter:this._aggregateAdapter,timeInfo:s.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return"stream"===this._schema.type}chunks(){return Array.from(this._store.chunks())}cleanupRemovedChunks(){return this._store.cleanupRemovedChunks()}onSubscribe(e){this._eventLog.onEvent({type:"subscribe",tile:e.tile.id});const t=this._strategy?.load(e);t&&(t.then((()=>this._eventLog.onEvent({type:"loaded",tile:e.tile.id}))).catch((t=>this._eventLog.onEvent({type:"error",tile:e.tile.id,error:t}))),this._updateTracking.addPromise(t))}onResume(e){this._updateTracking.addPromise(d(this._strategy?.load(e)))}onUnsubscribe(e){this._eventLog.onEvent({type:"unsubscribe",tile:e.tile.id}),this._strategy?.unload(e)}getOverride(e){return this._updateTracking.addPromise(this._doGetOverride(e))}applyOverride(e){this._store.applyOverrides(e,this.metadata)}async update(e,t){const s=e.source,r=l(this._schema?.mutable,s.mutable);if(!r)return!1;if(_("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:r}),this._schema=s,this._metadata=new K(this._schema.service.metadata),this._queryEngine?.destroy(),this._queryEngine=null,"feature"===this._schema.type&&null!=this._schema.service.queryMetadata.lastEditDate&&(this._lastEditDate=this._schema.service.queryMetadata.lastEditDate),null==this._streamMessenger&&"stream"===this._schema.type&&this._initStreamMessenger(),P(r,"sourceRefreshVersion")&&this._strategy?.refresh)return await this._strategy.refresh(),!0;if("feature"===s.type&&P(r,"availableFields")){if(await this._queryLastEditDateChanged())await this._updateStrategy(t);else{this._eventLog.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(s.mutable.availableFields),this._eventLog.onEvent({type:"updateFieldsEnd"})}catch(ds){this._eventLog.onEvent({type:"updateFieldsError",error:ds})}}return!1}return!(!D(r,"dataFilter")&&!D(r,"sourceRefreshVersion")||(await this._updateStrategy(t),0))}_initStreamMessenger(){null==this._streamMessenger&&(this._streamMessenger=new Dt(this._connection))}async _doGetOverride(e){return this._strategy.queryOverride(e)}async _queryLastEditDateChanged(){if(null==this._lastEditDate)return!1;const e=this._schema.service.source,t={...e.query,f:"json"},s=(await L(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _createStrategy(){const e=this.service,t="isSourceHosted"in e&&e.isSourceHosted,s=Array.isArray(e.source),r=e.source&&"collection"in e.source,i=t||s||r;if("stream"===this._schema.type){const e=new gs(this._schema.service,this._schema.mutable.dataFilter,this._store,{outSR:this._schema.mutable.dataFilter.outSpatialReference},this.metadata);return this._streamMessenger.strategy=e,e}const n=Pt.fromSchema(this._schema,this._metadata),a=await this._supportSnapshotMode(this._schema,n);return a?new hs(this._schema.service,n,this._store,a.featureCount,this.metadata,this._eventLog):i?new os(this._schema.service,n,this._store,this.metadata,this._eventLog):new is(this._schema.service,n,this._store,this.metadata,this._eventLog)}async _updateStrategy(e){const t=await this._createStrategy();this._eventLog.onEvent({type:"updateStrategyStart",about:t.about});const s=!!this._strategy;this._store.clear(),this._strategy?.destroy(),this._strategy=t,_("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const r=Array.from(this._subscriptions.values());if(!r.length)return void this._eventLog.onEvent({type:"updateStrategyEnd"});const i=Promise.all(r.map((e=>this._strategy.load(e).then((()=>this._eventLog.onEvent({type:"loaded",tile:e.tile.id}))).catch((t=>this._eventLog.onEvent({type:"error",tile:e.tile.id,error:t}))))));this._updateTracking.addPromise(i);try{s&&await i}catch(fs){g(fs)}this._eventLog.onEvent({type:"updateStrategyEnd"}),_("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:s}=e.service,r=s.snapshotInfo;if(!r||!r.supportsSnapshotMinThreshold||!r.snapshotCountThresholds)return null;const i=e.service.source,n=t.createQuery();n.inner.orderByFields=[],n.inner.returnGeometry=!1;const a=(await Oe(i,n.inner,{query:n.customParameters})).data.count,{min:o,max:u}=r.snapshotCountThresholds;return a<=o||r.supportsSnapshotMaxThreshold&&a<u?{featureCount:a}:null}};class ms{constructor(e,t){this._handles=new U,this._abortController=new AbortController,this._resolver=z(),this._isDone=!1,this._aborted=!1,this.tile=e,this._version=t,this._handles.add([])}destroy(){this.pause(),this._handles.destroy()}get key(){return this.tile.key}get version(){return this._version}set version(e){this._version=e}get signal(){return this._abortController.signal}get options(){return{signal:this._abortController.signal}}get done(){return this._resolver.promise}get isDone(){return this._isDone}resolve(){this._isDone=!0,this._resolver.resolve()}get paused(){return this._aborted}resume(){this._abortController=new AbortController,this._aborted=!1}pause(){this._aborted||(this._aborted=!0,this._abortController.abort())}}class bs{constructor(e){this.edit=e,this.resolver=z()}}class Is{constructor(e,t){this.schema=e,this.version=t,this.resolver=z()}}e("default",class{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._updateRequested=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor.destroy(),this._source.destroy(),this._handles.remove(),this._editState=null,this._tileInfoView=null}onDetach(){this.destroy(),this._initialize(this._connection)}_initialize(e){this._source=new ys(this._aggregateAdapter,this._subscriptions,(()=>this._requestUpdate()),e),this._processor=new Rt(e,this._source),this._handles=E([k((()=>this._source.updateTracking.updating),(()=>{this._requestUpdate(),this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0})}))])}set remoteClient(e){this._connection=new t(e),this._initialize(this._connection)}get features(){const e=this._source.queryEngine;if(!e)throw new F("no-queryEngine","No query engine defined");return e}get aggregates(){const e=this._processor.aggregateQueryEngine;if(!e)throw new F("no-queryEngine","No aggregate query engine defined");return e}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}async updateSchema(e,t){return _("esri-2d-update-debug")&&this._updateSchemaState&&console.error("InternalError: Schema already updating"),this._updateSchemaState=new Is(e,t),this._requestUpdate(),this._updateSchemaState.resolver.promise}updateSubscriptions(e){this._updateSubscriptionRequests.push(e),this._requestUpdate()}updateHighlight(e){this._updateHighlightRequests.push(e),this._requestUpdate()}async onEdits(e){if(null!=this._editState)throw new F("InternalError - Already processing an edit");this._editState=new bs(e);const t=this._editState.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(G(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const i="string"==typeof e.fieldOffset,n=e.fieldOffset??0,a=Array.from(this._subscriptions.values()),o=this._source.chunks(),u=t**2,h=3/(Math.PI*u),c=2*t,d=Math.ceil($/c);for(const l of a){const t=l.tile,a=new Float64Array(d*d);for(const s of o){const r=s.getTileReader(t);if(!r)continue;const o=r.getCursor();for(;o.next();){let t=1;if(null!=e.field){const s=o.readAttribute(e.field);t=i?-1*+s:+s+n}const s=o.readXForDisplay()/c,r=o.readYForDisplay()/c,l=Math.floor(s),_=Math.floor(r);if(l<0||_<0||l>=d||_>=d)continue;const p=((.5+l-s)*c)**2+((.5+_-r)*c)**2;if(p>u)continue;const g=t*(h*(1-p/u)**2);a[_+l*d]+=g}}for(let e=0;e<a.length;e++)s=Math.min(s,a[e]),r=Math.max(r,a[e])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce(((e,t)=>e+t.size()),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const e=[];return this._source.store.forEachUnsafe((t=>e.push(t.readLegacyFeatureWorldSpace()))),e}return null}const s=new Set,r=[],i=t.map((e=>e.reader.getCursor())),n=new A,a=3*e.sampleSize;for(let o=0;o<a&&r.length<e.sampleSize;o++){const e=i[n.getIntRange(0,t.length-1)];if(0===e.getSize())continue;const a=n.getIntRange(0,e.getSize()-1);e.setIndex(a);const o=e.getObjectId();s.has(o)||(s.add(o),r.push(e.readLegacyFeatureWorldSpace()))}return r.length>=e.sampleSize?r:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,W((()=>this._scheduleNextUpdate())))}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=this._doUpdate().finally((()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()})),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t)){const s=this._subscriptions.get(t);return void(s.paused&&(_("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.resume`),s.resume(),s.version=e.version,this._source.onResume(s)))}_("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const s=new N(this._tileInfoView,t),r=new ms(s,e.version);this._subscriptions.set(t,r),this._source.onSubscribe(r),this._processor.onSubscribe(r)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(_("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id),t.destroy())}_pauseSubscription(e){const t=this._subscriptions.get(e);t&&(_("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.pause`),t.pause())}async _doUpdate(){if(_("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const e=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const t of e)this._doUpdateSubscriptions(t)}const e=this._updateSchemaState;if(this._updateSchemaState=null,null!=e){const{schema:t,version:s}=e;await this._doUpdateSchema(t,s)}const t=this._editState;if(this._editState=null,null!=t){_("esri-2d-update-debug")&&console.debug("Pipeline.applyEditOverride",t.edit);const e=await this._source.getOverride(t.edit);await this._processor.applyOverride(e),_("esri-2d-update-debug")&&console.debug("Pipeline.endEditOverride",t.edit)}if(this._updateHighlightRequests.length){const e=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const t of e)this._processor.updateHighlight(t)}const s=this._source.cleanupRemovedChunks();this._processor.removeChunks(s);try{this._subscriptions.size&&(_("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),_("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(ms){g(ms)}null!=t&&t.resolver.resolve(),null!=e&&e.resolver.resolve(),this._updateRequested?(_("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0})):(_("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){if(_("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e}),!this._tileInfoView){const t=B.fromJSON(e.source.tileInfoJSON);this._tileInfoView=new V(t)}const s={tileInfo:this._tileInfoView?.tileInfo};try{const r=await this._source.update(e,t),i=Array.from(this._subscriptions.values());await this._processor.update(e,t,s,r,i)}catch(cs){console.error(cs)}_("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`)}_doUpdateSubscriptions(e){if(_("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e),!this._tileInfoView){const t=B.fromJSON(e.tileInfoJSON);this._tileInfoView=new V(t)}for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t);if(_("featurelayer-query-pausing-enabled"))for(const t of e.pause)this._pauseSubscription(t)}})}}}));
