System.register(["./index-legacy.js","./BitmapContainer-legacy.js","./LayerView-legacy.js","./ExportStrategy-legacy.js","./RefreshableLayerView-legacy.js","./ExportWMSImageParameters-legacy.js","./WGLContainer-legacy.js","./definitions-legacy.js","./LabelMetric-legacy.js","./enums-legacy.js","./enums-legacy2.js","./Texture-legacy.js","./Program-legacy.js","./VertexElementDescriptor-legacy.js","./ProgramTemplate-legacy.js","./Container-legacy.js","./highlightReasons-legacy.js","./StyleDefinition-legacy.js","./config-legacy.js","./earcut-legacy.js","./featureConversionUtils-legacy.js","./OptimizedGeometry-legacy.js","./OptimizedFeatureSet-legacy.js","./Bitmap-legacy.js"],(function(e,t){"use strict";var a,r,i,s,n,o,l,h,u,p,c,y,g,m,d,x,w;return{setters:[e=>{a=e.x,r=e.y,i=e.bl,s=e.z,n=e.K,o=e.s,l=e.at,h=e.o,u=e.w,p=e.C,c=e.aQ},e=>{y=e.a},e=>{g=e.m,m=e.u},e=>{d=e.v},e=>{x=e.i},e=>{w=e.a},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){const t=e=>{let t=class extends e{initialize(){this.exportImageParameters=new w({layer:this.layer})}destroy(){this.exportImageParameters=n(this.exportImageParameters)}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}async fetchPopupFeaturesAtLocation(e,t){const{layer:a}=this;if(!e)throw new o("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a});const{popupEnabled:r}=a;if(!r)throw new o("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:r});const i=this.createFetchPopupFeaturesQuery(e);if(!i)return[];const{extent:s,width:n,height:h,x:u,y:p}=i;if(!(s&&n&&h))throw new o("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:s,width:n,height:h});const c=await a.fetchFeatureInfo(s,n,h,u,p);return l(t),c}};return a([r()],t.prototype,"exportImageParameters",void 0),a([r({readOnly:!0})],t.prototype,"exportImageVersion",null),a([r()],t.prototype,"layer",void 0),a([r(i)],t.prototype,"timeExtent",void 0),t=a([s("esri.layers.mixins.WMSLayerView")],t),t};let f=class extends(t(x(g(m)))){constructor(){super(...arguments),this.bitmapContainer=new y}supportsSpatialReference(e){return this.layer.serviceSupportsSpatialReference(e)}update(e){this.strategy.update(e).catch((e=>{h(e)||u.getLogger(this).error(e)}))}attach(){const{layer:e}=this,{imageMaxHeight:t,imageMaxWidth:a}=e;this.bitmapContainer=new y,this.container.addChild(this.bitmapContainer),this.strategy=new d({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:a,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(p((()=>this.exportImageVersion),(()=>this.requestUpdate())))}detach(){this.strategy=n(this.strategy),this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(e){const{view:t,bitmapContainer:a}=this,{x:r,y:i}=e,{spatialReference:s}=t;let n,o=0,l=0;if(a.children.some((e=>{const{width:t,height:a,resolution:h,x:u,y:p}=e,y=u+h*t,g=p-h*a;return r>=u&&r<=y&&i<=p&&i>=g&&(n=new c({xmin:u,ymin:g,xmax:y,ymax:p,spatialReference:s}),o=t,l=a,!0)})),!n)return null;const h=n.width/o,u=Math.round((r-n.xmin)/h),p=Math.round((n.ymax-i)/h);return{extent:n,width:o,height:l,x:u,y:p}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,a,r){return this.layer.fetchImageBitmap(e,t,a,{timeExtent:this.timeExtent,...r})}};a([r()],f.prototype,"strategy",void 0),a([r()],f.prototype,"updating",void 0),f=a([s("esri.views.2d.layers.WMSLayerView2D")],f),e("default",f)}}}));
