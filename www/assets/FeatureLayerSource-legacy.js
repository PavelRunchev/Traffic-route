System.register(["./index-legacy.js","./meshVertexSpaceUtils-legacy.js","./External-legacy.js","./editingSupport-legacy.js","./clientSideDefaults-legacy.js","./QueryTask-legacy.js","./infoFor3D-legacy.js","./executeQueryJSON-legacy.js","./MeshLocalVertexSpace-legacy.js","./vec3-legacy.js","./QueryEngineCapabilities-legacy.js","./executeForIds-legacy.js","./query-legacy.js","./pbfQueryUtils-legacy.js","./pbf-legacy.js","./OptimizedGeometry-legacy.js","./OptimizedFeatureSet-legacy.js","./executeQueryPBF-legacy.js","./featureConversionUtils-legacy.js"],(function(e,t){"use strict";var a,s,r,n,i,o,l,u,c,d,p,y,h,g,f,m,w,b,R,S,q,F,I,O,A,E,x,_,v,j,T,M,N,J,U,k,C,Q,D,L,P,G,$,V,z,B;return{setters:[e=>{a=e.G,s=e.aJ,r=e.ac,n=e.eu,i=e.ev,o=e.ew,l=e.w,u=e.s,c=e.M,d=e.ec,p=e.c5,y=e.x,h=e.y,g=e.ex,f=e.A,m=e.ai,w=e.ey,b=e.X,R=e.q,S=e.ez,q=e.eA,F=e.eB,I=e.eC,O=e.eD,A=e.aQ,E=e.dJ,x=e.dZ,_=e.bG,v=e._,j=e.eE,T=e.dV,M=e.bx,N=e.aF,J=e.bc,U=e.az,k=e.z,C=e.be},e=>{Q=e.g,D=e.a},e=>{L=e.v},e=>{P=e.isFeatureIdentifierArrayWithGlobalId,G=e.isFeatureIdentifierArrayWithObjectId},e=>{$=e.o},e=>{V=e.x},e=>{z=e.F},e=>{B=e.s},null,null,null,null,null,null,null,null,null,null,null],execute:function(){async function H(e,t,o){const{geometry:l}=t,u={...t.attributes};if(null!=o&&"mesh"===l?.type){const{transformFieldRoles:t}=o,{origin:c,spatialReference:d,transform:p,vertexSpace:y}=l,h="local"===y.type,g=e.spatialReference,f=g.isGeographic,m=a(g,d),w=m||s(g)&&(s(d)||r(d));if(!(h&&f&&w||!h&&!f&&m))return null;const b=n(c,d,g);if(null==b)return null;if(u[t.originX]=b.x,u[t.originY]=b.y,u[t.originZ]=b.z??0,null!=p){const{translation:e,scale:a,rotation:s}=p,r=h?1:i(d)/i(g);u[t.translationX]=e[0]*r,u[t.translationY]=e[2]*r,u[t.translationZ]=-e[1]*r,u[t.scaleX]=a[0],u[t.scaleY]=a[2],u[t.scaleZ]=a[1],u[t.rotationX]=s[0],u[t.rotationY]=s[2],u[t.rotationZ]=-s[1],u[t.rotationDeg]=s[3]}return{attributes:u}}return null==l?{attributes:u}:"mesh"===l.type||"extent"===l.type?null:{geometry:l.toJSON(),attributes:u}}async function X(e,t){const a=await Promise.all((t.addAttachments??[]).map((t=>Z(e,t)))),s=await Promise.all((t.updateAttachments??[]).map((t=>Z(e,t)))),r=t.deleteAttachments??[];return a.length||s.length||r.length?{adds:a,updates:s,deletes:[...r]}:null}async function Z(e,t){const{feature:a,attachment:s}=t,{globalId:r,name:n,contentType:i,data:l,uploadId:u}=s,c={globalId:r};if(a&&("attributes"in a?c.parentGlobalId=a.attributes?.[e.globalIdField]:a.globalId&&(c.parentGlobalId=a.globalId)),u)c.uploadId=u;else if(l){const e=await o(l);e&&(c.contentType=e.mediaType,c.data=e.data),l instanceof File&&(c.name=l.name)}return n&&(c.name=n),i&&(c.contentType=i),c}function Y(e){const t=!0===e.success?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new u("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}function W(e,t){return new c({attributes:e.attributes,geometry:d({...e.geometry,spatialReference:t})})}function K(e,t){return{adds:e?.adds?.map((e=>W(e,t)))||[],updates:e?.updates?.map((e=>({original:W(e[0],t),current:W(e[1],t)})))||[],deletes:e?.deletes?.map((e=>W(e,t)))||[],spatialReference:t}}const ee=new p({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),te=new Set(["Feature Layer","Oriented Imagery Layer","Table","Catalog Layer"]),ae=new p({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let se=class extends g{constructor(){super(...arguments),this.type="feature-layer",this.refresh=f((async()=>{await this.load();const e=this.sourceJSON.editingInfo?.lastEditDate;if(null==e)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const t=e!==this.sourceJSON.editingInfo?.lastEditDate;return{dataChanged:t,updates:t?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}})),this._ongoingAssetUploads=new Map}load(e){const t=this.layer.sourceJSON,a=this._fetchService(t,{...e}).then((()=>this.layer.setUserPrivileges(this.sourceJSON.serviceItemId,e))).then((()=>this._ensureLatestMetadata(e)));return this.addResolvingPromise(a),Promise.resolve(this)}get queryTask(){const{capabilities:e,parsedUrl:t,dynamicDataSource:a,infoFor3D:s,gdbVersion:r,spatialReference:n,fieldsIndex:i}=this.layer,o=m("featurelayer-pbf")&&e?.query.supportsFormatPBF&&null==s,l=e?.operations?.supportsQueryAttachments??!1;return new V({url:t.path,pbfSupported:o,fieldsIndex:i,infoFor3D:s,dynamicDataSource:a,gdbVersion:r,sourceSpatialReference:n,queryAttachmentsSupported:l})}async addAttachment(e,t){await this.load();const{layer:a}=this;await w(a,"editing");const s=e.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/addAttachment",n=this._getLayerRequestOptions(),i=this._getFormDataForAttachment(t,n.query);try{return Y((await b(r,{body:i})).data.addAttachmentResult)}catch(o){throw this._createAttachmentErrorResult(s,o)}}async updateAttachment(e,t,a){await this.load();const{layer:s}=this;await w(s,"editing");const r=e.attributes[s.objectIdField],n=s.parsedUrl.path+"/"+r+"/updateAttachment",i=this._getLayerRequestOptions({query:{attachmentId:t}}),o=this._getFormDataForAttachment(a,i.query);try{return Y((await b(n,{body:o})).data.updateAttachmentResult)}catch(l){throw this._createAttachmentErrorResult(r,l)}}async applyEdits(e,t){await this.load();const{layer:a}=this;await w(a,"editing");const s=a.infoFor3D,r=null!=s,n=r||(t?.globalIdUsed??!1),i=r?await this._uploadMeshesAndGetAssetMapEditsJSON(e):null,o=e.addFeatures?.map((e=>H(this.layer,e,s)))??[],l=(await Promise.all(o)).filter(R),c=e.updateFeatures?.map((e=>H(this.layer,e,s)))??[],d=(await Promise.all(c)).filter(R),p=function(e,t,a){if(!t||0===t.length)return[];if(a&&P(t))return t.map((e=>e.globalId));if(G(t))return t.map((e=>e.objectId));const s=a?e.globalIdField:e.objectIdField;return s?t.map((e=>e.getAttribute(s))):[]}(this.layer,e.deleteFeatures,n);S(l,d,a.spatialReference);const y=await X(this.layer,e),h=a.capabilities.editing.supportsAsyncApplyEdits&&r,g=t?.gdbVersion||a.gdbVersion,f={gdbVersion:g,rollbackOnFailure:t?.rollbackOnFailureEnabled,useGlobalIds:n,returnEditMoment:t?.returnEditMoment,usePreviousEditMoment:t?.usePreviousEditMoment,async:h};await q(this.layer.url,g,!0);const m=F(this.layer.url,g||null);if(await I(a.url,g,a.historicMoment))throw new u("feature-layer-source:historic-version","Editing a historic version is not allowed");t?.returnServiceEditsOption?(f.edits=JSON.stringify([{id:a.layerId,adds:l,updates:d,deletes:p,attachments:y,assetMaps:i}]),f.returnServiceEditsOption=ee.toJSON(t?.returnServiceEditsOption),f.returnServiceEditsInSourceSR=t?.returnServiceEditsInSourceSR):(f.adds=l.length?JSON.stringify(l):null,f.updates=d.length?JSON.stringify(d):null,f.deletes=p.length?n?JSON.stringify(p):p.join(","):null,f.attachments=y&&JSON.stringify(y),f.assetMaps=null!=i?JSON.stringify(i):void 0);const A=this._getLayerRequestOptions({method:"post",query:f});m&&(A.authMode="immediate",A.query.returnEditMoment=!0,A.query.sessionId=O);const E=t?.returnServiceEditsOption?a.url:a.parsedUrl.path;let x;try{x=h?await this._asyncApplyEdits(E+"/applyEdits",A):await b(E+"/applyEdits",A)}catch(V){if(!function(e){const t=e.details.raw,a=+t.code,s=+t.extendedCode;return 500===a&&(-2147217144===s||-2147467261===s)}(V))throw V;A.authMode="immediate",x=h?await this._asyncApplyEdits(E+"/applyEdits",A):await b(E+"/applyEdits",A)}if(!a.capabilities.operations?.supportsEditing&&a.effectiveCapabilities?.operations?.supportsEditing){const e=C?.findCredential(a.url);await(e?.refreshToken())}return this._createEditsResult(x)}async deleteAttachments(e,t){await this.load();const{layer:a}=this;await w(a,"editing");const s=e.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/deleteAttachments";try{return(await b(r,this._getLayerRequestOptions({query:{attachmentIds:t.join(",")},method:"post"}))).data.deleteAttachmentResults.map(Y)}catch($){throw this._createAttachmentErrorResult(s,$)}}fetchRecomputedExtents(e={}){const t=e.signal;return this.load({signal:t}).then((async()=>{const t=this._getLayerRequestOptions({...e,query:{returnUpdates:!0}}),{layerId:a,url:s}=this.layer,{data:r}=await b(`${s}/${a}`,t),{id:n,extent:i,fullExtent:o,timeExtent:l}=r,u=i||o;return{id:n,fullExtent:u&&A.fromJSON(u),timeExtent:l&&E.fromJSON({start:l[0],end:l[1]})}}))}async queryAttachments(e,t={}){await this.load();const a=this._getLayerRequestOptions(t);return this.queryTask.executeAttachmentQuery(e,a)}async queryFeatures(e,t){await this.load();const a=await this.queryTask.execute(e,{...t,query:this._createRequestQueryOptions(t)});return e.outStatistics?.length&&a.features.length&&a.features.forEach((t=>{const a=t.attributes;e.outStatistics?.forEach((({outStatisticFieldName:e})=>{if(e){const t=e.toLowerCase();t&&t in a&&e!==t&&(a[e]=a[t],delete a[t])}}))})),a}async queryFeaturesJSON(e,t){return await this.load(),this.queryTask.executeJSON(e,{...t,query:this._createRequestQueryOptions(t)})}async queryObjectIds(e,t){return await this.load(),this.queryTask.executeForIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryFeatureCount(e,t){return await this.load(),this.queryTask.executeForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryExtent(e,t){return await this.load(),this.queryTask.executeForExtent(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeatures(e,t){return await this.load(),this.queryTask.executeRelationshipQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeaturesCount(e,t){return await this.load(),this.queryTask.executeRelationshipQueryForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopFeatures(e,t){return await this.load(),this.queryTask.executeTopFeaturesQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopObjectIds(e,t){return await this.load(),this.queryTask.executeForTopIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopExtents(e,t){return await this.load(),this.queryTask.executeForTopExtents(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopCount(e,t){return await this.load(),this.queryTask.executeForTopCount(e,{...t,query:this._createRequestQueryOptions(t)})}async fetchPublishingStatus(){if(!x(this.layer.url))return"unavailable";const e=_(this.layer.url,"status"),t=await b(e,{query:{f:"json"}});return ae.fromJSON(t.data.status)}async uploadAssets(e,a){const{uploadAssets:s}=await v((()=>t.import("./uploadAssets-legacy.js")),void 0,t.meta.url);return s(e,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},a)}async _asyncApplyEdits(e,t){const a=(await b(e,t)).data.statusUrl;for(;;){const e=(await b(a,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return b(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new u("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new u("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await j(re)}}_createRequestQueryOptions(e){const t={...this.layer.customParameters,token:this.layer.apiKey,...e?.query};return this.layer.datesInUnknownTimezone&&(t.timeReferenceUnknownClient=!0),t}async _fetchService(e,t){if(!e){const a={};m("featurelayer-advanced-symbols")&&(a.returnAdvancedSymbols=!0),t?.cacheBust&&(a._ts=Date.now());const{data:s}=await b(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:a,signal:t?.signal}));e=s}this.sourceJSON=await this._patchServiceJSON(e,t?.signal);const a=e.type;if(!te.has(a))throw new u("feature-layer-source:unsupported-type",`Source type "${a}" is not supported`)}async _patchServiceJSON(e,t){if("Table"!==e.type&&e.geometryType&&!e?.drawingInfo?.renderer&&!e.defaultSymbol){const t=$(e.geometryType).renderer;T("drawingInfo.renderer",t,e)}if("esriGeometryMultiPatch"===e.geometryType&&e.infoFor3D&&(e.geometryType="mesh"),null==e.extent)try{const{data:a}=await b(this.layer.url,this._getLayerRequestOptions({signal:t}));a.spatialReference&&(e.extent={xmin:0,ymin:0,xmax:0,ymax:0,spatialReference:a.spatialReference})}catch(N){M(N)}return e}async _ensureLatestMetadata(e){if(this.layer.userHasUpdateItemPrivileges&&this.sourceJSON.cacheMaxAge>0)return this._fetchService(null,{...e,cacheBust:!0})}async _uploadMeshesAndGetAssetMapEditsJSON(e){const{addAssetFeatures:t}=e;if(!t?.length)return null;const a=await this._filterRedundantAssetMaps(t);if(!t?.length)return null;const s=new Array,r=new Map;for(const n of a){const{geometry:e}=n,{vertexSpace:t}=e;if(Q(t))s.push(e);else{const t=D(e);r.set(t,e),n.geometry=t,s.push(t)}}await this.uploadAssets(s);for(const[n,i]of r)i.addExternalSources(n.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(a),updates:[],deletes:[]}}_getAssetMapEditsJSON(e){const t=new Array,a=this.layer.globalIdField,s=this.layer.parsedUrl;for(const r of e){const e=r.geometry,{metadata:n}=e,i=n.getExternalSourcesOnService(s),o=r.getAttribute(a);if(0===i.length){l.getLogger(this).error(`Skipping feature ${o}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:u}=i.find(L)??i[0];for(const a of u)1===a.parts.length?t.push({globalId:N(),parentGlobalId:o,assetName:a.assetName,assetHash:a.parts[0].partHash,flags:[]}):l.getLogger(this).error(`Skipping asset ${a.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return t}_createEditsResult(e){const t=e.data,{layerId:a}=this.layer,s=[];let r=null;if(Array.isArray(t))for(const i of t)s.push({id:i.id,editedFeatures:i.editedFeatures}),i.id===a&&(r={addResults:i.addResults??[],updateResults:i.updateResults??[],deleteResults:i.deleteResults??[],attachments:i.attachments,editMoment:i.editMoment});else r=t;const n=function(e){const t=e?.assetMaps;if(t){for(const e of t.addResults)e.success||l.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${e.globalId}.`);for(const e of t.updateResults)e.success||l.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${e.globalId}.`)}const a=e?.attachments,s={addFeatureResults:e?.addResults?.map(Y)??[],updateFeatureResults:e?.updateResults?.map(Y)??[],deleteFeatureResults:e?.deleteResults?.map(Y)??[],addAttachmentResults:a?.addResults?a.addResults.map(Y):[],updateAttachmentResults:a?.updateResults?a.updateResults.map(Y):[],deleteAttachmentResults:a?.deleteResults?a.deleteResults.map(Y):[]};return e?.editMoment&&(s.editMoment=e.editMoment),s}(r);if(s.length>0){n.editedFeatureResults=[];for(const e of s){const{editedFeatures:t}=e,a=t?.spatialReference?new J(t.spatialReference):null;n.editedFeatureResults.push({layerId:e.id,editedFeatures:K(t,a)})}}return n}_createAttachmentErrorResult(e,t){const a=t.details.messages?.[0]||t.message,s=t.details.httpStatus||t.details.messageCode;return{objectId:e,globalId:null,error:new u("feature-layer-source:attachment-failure",a,{code:s})}}_getFormDataForAttachment(e,t){const a=e instanceof FormData?e:e&&e.elements?new FormData(e):null;if(a)for(const s in t){const e=t[s];null!=e&&(a.set?a.set(s,e):a.append(s,e))}return a}_getLayerRequestOptions(e={}){const{parsedUrl:t,gdbVersion:a,dynamicDataSource:s}=this.layer;return{...e,query:{gdbVersion:a,layer:s?JSON.stringify({source:s}):void 0,...t.query,f:"json",...this._createRequestQueryOptions(e)},responseType:"json"}}async _filterRedundantAssetMaps(e){const{layer:t}=this,{globalIdField:a,infoFor3D:s,parsedUrl:r}=t;if(null==s||null==a)return e;const n=z(s);if(null==n)return e;const i=_(r.path,`../${n.id}`),o=new Array,l=new Array;for(const g of e)g.geometry.metadata.getExternalSourcesOnService(r).length>0?l.push(g):o.push(g);const u=l.map((e=>e.getAttribute(a))).filter(R);if(0===u.length)return e;const{assetMapFieldRoles:{parentGlobalId:c,assetHash:d}}=s,p=new U;p.where=`${c} IN (${u.map((e=>`'${e}'`))})`,p.outFields=[d,c],p.returnGeometry=!1;const y=await B(i,p),{features:h}=y;return 0===h.length?e:[...o,...l.filter((e=>{const t=e.getAttribute(a);if(!t)return!0;const{metadata:s}=e.geometry,n=h.filter((e=>e.getAttribute(c)===t));if(0===n.length)return!0;const i=n.map((e=>e.getAttribute(d)));return s.getExternalSourcesOnService(r).flatMap((({source:e})=>e.flatMap((e=>e.parts.map((e=>e.partHash)))))).some((e=>i.every((t=>e!==t))))}))]}};y([h()],se.prototype,"type",void 0),y([h({constructOnly:!0})],se.prototype,"layer",void 0),y([h({readOnly:!0})],se.prototype,"queryTask",null),se=y([k("esri.layers.graphics.sources.FeatureLayerSource")],se);const re=1e3;e("default",se)}}}));
