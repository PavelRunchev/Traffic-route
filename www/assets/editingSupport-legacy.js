System.register(["./index-legacy.js","./infoFor3D-legacy.js"],(function(e,t){"use strict";var a,r,s,i,n,o,d,l,u,p,c,h,y,f,m,g,b,w,F,A;return{setters:[e=>{a=e.aA,r=e.aB,s=e.aC,i=e.ax,n=e.s,o=e.aD,d=e.aE,l=e.w,u=e.U,p=e.aF,c=e.aG,h=e.V,y=e.M,f=e.aH,m=e.aI,g=e.G,b=e.aJ,w=e.ac},e=>{F=e.u,A=e.i}],execute:function(){function t(e){return null!=e?.applyEdits}function I(e){return"object"==typeof e&&null!=e&&"objectId"in e&&!!e.objectId}function v(e){return"object"==typeof e&&null!=e&&"globalId"in e&&!!e.globalId}async function $(e,a,r,s){if(await e.load(),!t(a))throw new n(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!o(e))throw new n(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const{edits:i,options:d}=await E(e,r,s);return i.addFeatures?.length||i.updateFeatures?.length||i.deleteFeatures?.length||i.addAttachments?.length||i.updateAttachments?.length||i.deleteAttachments?.length?{edits:i,results:await a.applyEdits(i,d)}:{edits:i,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}async function E(e,t,a){const r=d(e),s=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),i=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments),o=null!=e.infoFor3D;if(G(t,r,a,!!s,!!i,`${e.type}-layer`),!r.data.isVersioned&&a?.gdbVersion)throw new n(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!r.editing.supportsRollbackOnFailure&&a?.rollbackOnFailureEnabled)throw new n(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");const u={...a};if(null!=u.rollbackOnFailureEnabled||r.editing.supportsRollbackOnFailure||(u.rollbackOnFailureEnabled=!0),u.rollbackOnFailureEnabled||"original-and-current-features"!==u.returnServiceEditsOption||(!1===u.rollbackOnFailureEnabled&&l.getLogger("esri.layers.graphics.editingSupport").warn(`${e.type}-layer:invalid-parameter`,"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true, but 'rollBackOnFailure' was set to false. 'rollBackOnFailure' has been overwritten and set to true."),u.rollbackOnFailureEnabled=!0),!r.editing.supportsReturnServiceEditsInSourceSpatialReference&&u.returnServiceEditsInSourceSR)throw new n(`${e.type}-layer:invalid-parameter`,"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");if(u.returnServiceEditsInSourceSR&&"original-and-current-features"!==u.returnServiceEditsOption)throw new n(`${e.type}-layer:invalid-parameter`,"'returnServiceEditsInSourceSR' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");const p=j(t,r,`${e.type}-layer`),c=a?.globalIdUsed||o,h=e.fields.filter((e=>"big-integer"===e.type||"oid"===e.type&&(e.length||0)>=8));if(c){const{globalIdField:t}=e;if(null==t)throw new n(`${e.type}-layer:invalid-parameter`,"Layer does not specify a global id field.");p.addFeatures.forEach((e=>k(e,t)))}return p.addFeatures.forEach((t=>function(e,t,a,r){S(e,t,a,r),R(e,t)}(t,e,c,h))),p.updateFeatures.forEach((t=>function(e,t,a,r){S(e,t,a,r),R(e,t);const s=d(t);if("geometry"in e&&null!=e.geometry&&!s?.editing.supportsGeometryUpdate)throw new n(`${t.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}(t,e,c,h))),p.deleteFeatures.forEach((t=>function(e,t,a,r){S(e,t,a,r)}(t,e,c,h))),p.addAttachments.forEach((t=>O(t,e))),p.updateAttachments.forEach((t=>O(t,e))),o&&await D(p,e),{edits:await L(p),options:u}}function S(e,t,a,r){if(a){if("attributes"in e&&!e.attributes[t.globalIdField])throw new n(`${t.type}-layer:invalid-parameter`,`Feature should have '${t.globalIdField}' when 'globalIdUsed' is true`);if(!("attributes"in e)&&!e.globalId)throw new n(`${t.type}-layer:invalid-parameter`,"`'globalId' of the feature should be passed when 'globalIdUsed' is true")}if(r.length&&"attributes"in e)for(const s of r){const a=e.attributes[s.name];if(void 0!==a&&!f(s,a))throw new n(`${t.type}-layer:invalid-parameter`,`Big-integer field '${s.name}' of the feature must be less than ${Number.MAX_SAFE_INTEGER}`,{feature:e})}if("geometry"in e&&null!=e.geometry){if(e.geometry.hasZ&&!1===t.capabilities?.data.supportsZ)throw new n(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&!1===t.capabilities?.data.supportsM)throw new n(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function R(e,t){if("geometry"in e&&"mesh"===e.geometry?.type&&null!=t.infoFor3D&&null!=t.spatialReference){const{geometry:a}=e,{spatialReference:r,vertexSpace:s}=a,i=t.spatialReference,o="local"===s.type,d=m(i),l=g(i,r),u=l||b(i)&&(b(r)||w(r));if(!(o&&d&&u||!o&&!d&&l))throw new n(`${t.type}-layer:mesh-unsupported`,`Uploading a mesh with a ${s.type} vertex space and a spatial reference wkid:${r.wkid} to a layer with a spatial reference wkid:${i.wkid} is not supported.`)}}function O(e,t){const{feature:a,attachment:r}=e;if(!a||"attributes"in a&&!a.attributes[t.globalIdField])throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in a)&&!a.globalId)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!r.globalId)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!r.data&&!r.uploadId)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(r.data instanceof File&&r.data.name||r.name))throw new n(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities?.editing.supportsUploadWithItemId&&r.uploadId)throw new n(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"==typeof r.data){const e=u(r.data);if(e&&!e.isBase64)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}function k(e,t){const{attributes:a}=e;null==a[t]&&(a[t]=p())}async function L(e){const t=e.addFeatures??[],a=e.updateFeatures??[],r=t.concat(a).map((e=>e.geometry)),s=await c(r),i=t.length,n=a.length;return s.slice(0,i).forEach(((e,a)=>t[a].geometry=e)),s.slice(i,i+n).forEach(((e,t)=>a[t].geometry=e)),e}function U(e){return{addFeatures:Array.from(e?.addFeatures??[]),updateFeatures:Array.from(e?.updateFeatures??[]),deleteFeatures:e&&h.isCollection(e.deleteFeatures)?e.deleteFeatures.toArray():e.deleteFeatures||[],addAttachments:e.addAttachments||[],updateAttachments:e.updateAttachments||[],deleteAttachments:e.deleteAttachments||[]}}function j(e,t,a){const r=U(e);if(r.addFeatures?.length&&!t.operations.supportsAdd)throw new n(`${a}:unsupported-operation`,"Layer does not support adding features.");if(r.updateFeatures?.length&&!t.operations.supportsUpdate)throw new n(`${a}:unsupported-operation`,"Layer does not support updating features.");if(r.deleteFeatures?.length&&!t.operations.supportsDelete)throw new n(`${a}:unsupported-operation`,"Layer does not support deleting features.");return r.addFeatures=r.addFeatures.map(B),r.updateFeatures=r.updateFeatures.map(B),r.addAssetFeatures=[],r}function G(e,t,a,r,s,i){if(!e||!r&&!s)throw new n(`${i}:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!t.editing.supportsGlobalId&&a?.globalIdUsed)throw new n(`${i}:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!t.editing.supportsGlobalId&&s)throw new n(`${i}:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if(!a?.globalIdUsed&&s)throw new n(`${i}:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true")}function B(e){const t=new y;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}async function D(e,t){if(null==t.infoFor3D)return;const{infoFor3D:a}=t,r=F("model/gltf-binary",a.supportedFormats)??A("glb",a.supportedFormats);if(!r||!a.editFormats.includes(r))throw new n(`${t.type}-layer:binary-gltf-asset-not-supported`,"3DObjectFeatureLayer requires binary glTF (.glb) support for updating mesh geometry.");e.addAssetFeatures??=[];const{addAssetFeatures:s}=e;for(const i of e.addFeatures??[])T(i)&&s.push(i);for(const i of e.updateFeatures??[])T(i)&&s.push(i)}function T(e){return"mesh"===e?.geometry?.type}e({applyEdits:async function(e,t,n,o={}){let d;const l="gdbVersion"in e?e.gdbVersion:null,u=o.gdbVersion??l;if(a(e)&&e.url)d=r(e.url,e.layerId,u,"original-and-current-features"===o.returnServiceEditsOption);else{d=s(),d.promise.then((t=>{(t.addedFeatures.length||t.updatedFeatures.length||t.deletedFeatures.length||t.addedAttachments.length||t.updatedAttachments.length||t.deletedAttachments.length)&&e.emit("edits",t)}));const t={result:d.promise};e.emit("apply-edits",t)}try{const{results:a,edits:r}=await $(e,t,n,o),s=e=>e.filter((e=>!e.error)).map(i),l={edits:r,addedFeatures:s(a.addFeatureResults),updatedFeatures:s(a.updateFeatureResults),deletedFeatures:s(a.deleteFeatureResults),addedAttachments:s(a.addAttachmentResults),updatedAttachments:s(a.updateAttachmentResults),deletedAttachments:s(a.deleteAttachmentResults),exceededTransferLimit:!1,historicMoment:a.editMoment?new Date(a.editMoment):null,globalIdToObjectId:o.globalIdToObjectId};return a.editedFeatureResults?.length&&(l.editedFeatures=a.editedFeatureResults),d.resolve(l),a}catch(p){throw d.reject(p),p}},checkEditingCapabilities:G,isFeatureIdentifierArrayWithGlobalId:function(e){return e.every(v)},isFeatureIdentifierArrayWithObjectId:function(e){return e.every(I)},isFeatureIdentifierWithGlobalId:v,isFeatureIdentifierWithObjectId:I,normalizeCollections:U,normalizeEdits:j,normalizeGeometries:L,shallowCloneFeature:B,uploadAssets:function(e,a,r,s){if(!t(a))throw new n(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!a.uploadAssets)throw new n(`${e.type}-layer:no-asset-upload-support`,"Layer source does not support uploadAssets capability",{layer:e});return a.uploadAssets(r,s)}})}}}));
