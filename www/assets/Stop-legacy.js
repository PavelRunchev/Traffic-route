System.register(["./index-legacy.js"],(function(e,t){"use strict";var i,a,l,r,o,s,n,p,u,d,m,b,c,y,T,v,h,f,g,S,O,N,C,D,F,I,x,A;return{setters:[e=>{i=e.db,a=e.j0,l=e.M,r=e.x,o=e.y,s=e.aO,n=e.F,p=e.ho,u=e.z,d=e.bX,m=e.j1,b=e.bD,c=e.ar,y=e.j2,T=e.j3,v=e.j4,h=e.j5,f=e.j6,g=e.j7,S=e.j8,O=e.j9,N=e.dN,C=e.ja,D=e.aN,F=e.jb,I=e.jc,x=e.jd,A=e.je}],execute:function(){var t;let w=t=class extends(i(d)){constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(e){return new t({directionLineType:a.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:e.attributes.FromLevel??null,geometry:e.geometry,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,symbol:e.symbol,toLevel:e.attributes.ToLevel??null})}toGraphic(){const e={ObjectID:this.objectId,DirectionLineType:null!=this.directionLineType?a.toJSON(this.directionLineType):null,DirectionPointID:this.directionPointId,Meters:this.distance,Minutes:this.duration};return null!=this.fromLevel&&(e.FromLevel=this.fromLevel),null!=this.toLevel&&(e.ToLevel=this.toLevel),new l({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};var j;w.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionsLineType",codedValues:[{name:"Unknown",code:0},{name:"Segment",code:1},{name:"Maneuver Segment",code:2},{name:"Restriction violation",code:3},{name:"Scale cost barrier crossing",code:4},{name:"Heavy Traffic",code:5},{name:"Slow Traffic",code:6},{name:"Moderate Traffic",code:7}]}},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"FromLevel",alias:"Start from 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"Meters",alias:"Length in Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"Minutes",alias:"Duration in Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"ToLevel",alias:"End at 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1}],w.popupInfo={title:"Direction Lines",fieldInfos:[{fieldName:"DirectionLineType",label:"Line Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Meters",label:"Length in Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Minutes",label:"Duration in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DirectionPointID",label:"Direction Point ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"FromLevel",label:"Start from 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ToLevel",label:"End at 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},r([o({type:a.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:a.read}}})],w.prototype,"directionLineType",void 0),r([o({json:{read:{source:"attributes.DirectionPointID"}}})],w.prototype,"directionPointId",void 0),r([o({json:{read:{source:"attributes.Meters"}}})],w.prototype,"distance",void 0),r([o({json:{read:{source:"attributes.Minutes"}}})],w.prototype,"duration",void 0),r([o({json:{read:{source:"attributes.FromLevel"}}})],w.prototype,"fromLevel",void 0),r([o({type:s})],w.prototype,"geometry",void 0),r([o({json:{read:{source:"attributes.ObjectID"}}})],w.prototype,"objectId",void 0),r([o({type:n})],w.prototype,"popupTemplate",void 0),r([o({types:p})],w.prototype,"symbol",void 0),r([o({json:{read:{source:"attributes.ToLevel"}}})],w.prototype,"toLevel",void 0),r([o({readOnly:!0,json:{read:!1}})],w.prototype,"type",void 0),w=t=r([u("esri.rest.support.DirectionLine")],w),e("m",w);let E=j=class extends(i(d)){constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(e,t){return null!=t.attributes.ArrivalTime?new Date(t.attributes.ArrivalTime):null}static fromGraphic(e){return new j({alternateName:e.attributes.AlternateName??null,arrivalTime:null!=e.attributes.ArrivalTime?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:e.attributes.ArrivalUTCOffset??null,azimuth:e.attributes.Azimuth??null,branchName:e.attributes.BranchName??null,directionPointType:m.fromJSON(e.attributes.DirectionPointType),displayText:e.attributes.DisplayText??null,exitName:e.attributes.ExitName??null,geometry:e.geometry,intersectingName:e.attributes.IntersectingName??null,level:e.attributes.Level??null,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,sequence:e.attributes.Sequence,shortVoiceInstruction:e.attributes.ShortVoiceInstruction??null,stopId:e.attributes.StopID??null,symbol:e.symbol,towardName:e.attributes.TowardName??null,voiceInstruction:e.attributes.VoiceInstruction??null})}toGraphic(){const e={ObjectID:this.objectId,DirectionPointType:null!=this.directionPointType?m.toJSON(this.directionPointType):null,Sequence:this.sequence,StopID:this.stopId};return null!=this.alternateName&&(e.AlternateName=this.alternateName),null!=this.arrivalTime&&(e.ArrivalTime=this.arrivalTime.getTime()),null!=this.arrivalTimeOffset&&(e.ArrivalUTCOffset=this.arrivalTimeOffset),null!=this.azimuth&&(e.Azimuth=this.azimuth),null!=this.branchName&&(e.BranchName=this.branchName),null!=this.displayText&&(e.DisplayText=this.displayText),null!=this.exitName&&(e.ExitName=this.exitName),null!=this.intersectingName&&(e.IntersectingName=this.intersectingName),null!=this.level&&(e.Level=this.level),null!=this.name&&(e.Name=this.name),null!=this.shortVoiceInstruction&&(e.ShortVoiceInstruction=this.shortVoiceInstruction),null!=this.towardName&&(e.TowardName=this.towardName),null!=this.voiceInstruction&&(e.VoiceInstruction=this.voiceInstruction),new l({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};var M;E.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AlternateName",alias:"Alternative Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ArrivalTime",alias:"Maneuver Starts at",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"BranchName",alias:"Signpost Branch Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"DirectionPointType",alias:"Directions Item Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionPointType",codedValues:[{name:"Unknown",code:0},{name:"",code:1},{name:"Arrive at stop",code:50},{name:"Depart at stop",code:51},{name:"Go straight",code:52},{name:"Take ferry",code:100},{name:"Take off ferry",code:101},{name:"Keep center at fork",code:102},{name:"Take roundabout",code:103},{name:"Make U-Turn",code:104},{name:"Pass the door",code:150},{name:"Take stairs",code:151},{name:"",code:152},{name:"Take escalator",code:153},{name:"Take pedestrian ramp",code:154},{name:"Keep left at fork",code:200},{name:"Ramp left",code:201},{name:"Take left-handed roundabout",code:202},{name:"Make left-handed U-Turn",code:203},{name:"Bear left",code:204},{name:"Turn left",code:205},{name:"Make sharp left",code:206},{name:"Turn left, followed by turn left",code:207},{name:"Turn left, followed by turn right",code:208},{name:"Keep right at fork",code:300},{name:"Ramp right",code:301},{name:"Take right-handed roundabout",code:302},{name:"Make right-handed U-Turn",code:303},{name:"Bear right",code:304},{name:"Turn right",code:305},{name:"Make sharp right",code:306},{name:"Turn right, followed by turn left",code:307},{name:"Turn right, followed by turn right",code:308},{name:"Indicates up direction of elevator",code:400},{name:"Indicates up direction of escalator",code:401},{name:"Take up-stairs",code:402},{name:"Indicates down direction of elevator",code:500},{name:"Indicates down direction of escalator",code:501},{name:"Take down-stairs",code:502},{name:"General event",code:1e3},{name:"Landmark",code:1001},{name:"Time zone change",code:1002},{name:"Heavy traffic segment",code:1003},{name:"Scale cost barrier crossing",code:1004},{name:"Administrative Border crossing",code:1005},{name:"Restriction violation",code:1006}]}},{name:"DisplayText",alias:"Text to Display",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ExitName",alias:"Highway Exit Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"IntersectingName",alias:"Intersecting Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Level",alias:"3D Logical Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Name",alias:"Primary Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ShortVoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TowardName",alias:"Signpost Toward Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"VoiceInstruction",alias:"Voice Full Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null}],E.popupInfo={title:"{DisplayText}",fieldInfos:[{fieldName:"DirectionPointType",label:"Directions Item Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"DisplayText",label:"Text to Display",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"StopID",label:"Stop ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Maneuver Starts at",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Azimuth",label:"Azimuth",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Name",label:"Primary Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AlternateName",label:"Alternative Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ExitName",label:"Highway Exit Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"IntersectingName",label:"Intersecting Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BranchName",label:"Signpost Branch Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TowardName",label:"Signpost Toward Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ShortVoiceInstruction",label:"Voice Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"VoiceInstruction",label:"Voice Full Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},r([o({json:{read:{source:"attributes.AlternateName"}}})],E.prototype,"alternateName",void 0),r([o()],E.prototype,"arrivalTime",void 0),r([b("arrivalTime",["attributes.ArrivalTime"])],E.prototype,"readArrivalTime",null),r([o({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],E.prototype,"arrivalTimeOffset",void 0),r([o({json:{read:{source:"attributes.Azimuth"}}})],E.prototype,"azimuth",void 0),r([o({json:{read:{source:"attributes.BranchName"}}})],E.prototype,"branchName",void 0),r([o({type:m.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:m.read}}})],E.prototype,"directionPointType",void 0),r([o({json:{read:{source:"attributes.DisplayText"}}})],E.prototype,"displayText",void 0),r([o({json:{read:{source:"attributes.ExitName"}}})],E.prototype,"exitName",void 0),r([o({type:c})],E.prototype,"geometry",void 0),r([o({json:{read:{source:"attributes.IntersectingName"}}})],E.prototype,"intersectingName",void 0),r([o()],E.prototype,"level",void 0),r([o({json:{read:{source:"attributes.Name"}}})],E.prototype,"name",void 0),r([o({json:{read:{source:"attributes.ObjectID"}}})],E.prototype,"objectId",void 0),r([o({type:n})],E.prototype,"popupTemplate",void 0),r([o({json:{read:{source:"attributes.Sequence"}}})],E.prototype,"sequence",void 0),r([o({json:{read:{source:"attributes.ShortVoiceInstruction"}}})],E.prototype,"shortVoiceInstruction",void 0),r([o({json:{read:{source:"attributes.StopID"}}})],E.prototype,"stopId",void 0),r([o({types:p})],E.prototype,"symbol",void 0),r([o({json:{read:{source:"attributes.TowardName"}}})],E.prototype,"towardName",void 0),r([o({readOnly:!0,json:{read:!1}})],E.prototype,"type",void 0),r([o({json:{read:{source:"attributes.VoiceInstruction"}}})],E.prototype,"voiceInstruction",void 0),E=j=r([u("esri.rest.support.DirectionPoint")],E),e("c",E);let L=M=class extends(i(d)){constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(e,t){return y(t.attributes,"Attr_")}writeCosts(e,t){T(e,t,"Attr_")}static fromGraphic(e){return new M({addedCost:e.attributes.AddedCost??null,barrierType:null!=e.attributes.BarrierType?v.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?h(JSON.parse(e.attributes.Costs)):null,curbApproach:null!=e.attributes.CurbApproach?f.fromJSON(e.attributes.CurbApproach):null,fullEdge:null!=e.attributes.FullEdge?g.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:null!=e.attributes.Status?S.fromJSON(e.attributes.Status):null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:null!=this.barrierType?v.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(O(this.costs)):null,CurbApproach:null!=this.curbApproach?f.toJSON(this.curbApproach):null,FullEdge:null!=this.fullEdge?g.toJSON(this.fullEdge):null,Name:this.name,Status:null!=this.status?S.toJSON(this.status):null};return new l({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};var W;L.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],L.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},r([o()],L.prototype,"addedCost",void 0),r([o({type:v.apiValues,json:{name:"attributes.BarrierType",read:{reader:v.read},write:{writer:v.write}}})],L.prototype,"barrierType",void 0),r([o()],L.prototype,"costs",void 0),r([b("costs",["attributes"])],L.prototype,"readCosts",null),r([N("costs")],L.prototype,"writeCosts",null),r([o({constructOnly:!0,type:f.apiValues,json:{read:{source:"attributes.CurbApproach",reader:f.read}}})],L.prototype,"curbApproach",void 0),r([o({type:g.apiValues,json:{name:"attributes.FullEdge",read:{reader:g.read},write:{writer:g.write}}})],L.prototype,"fullEdge",void 0),r([o({type:c,json:{write:!0}})],L.prototype,"geometry",void 0),r([o({json:{name:"attributes.Name"}})],L.prototype,"name",void 0),r([o({json:{name:"attributes.ObjectID"}})],L.prototype,"objectId",void 0),r([o({type:n})],L.prototype,"popupTemplate",void 0),r([o({type:C.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:C.read}}})],L.prototype,"sideOfEdge",void 0),r([o({json:{read:{source:"attributes.SourceID"}}})],L.prototype,"sourceId",void 0),r([o({json:{read:{source:"attributes.SourceOID"}}})],L.prototype,"sourceOid",void 0),r([o({type:S.apiValues,json:{read:{source:"attributes.Status",reader:S.read}}})],L.prototype,"status",void 0),r([o({types:p})],L.prototype,"symbol",void 0),r([o({readOnly:!0,json:{read:!1}})],L.prototype,"type",void 0),L=M=r([u("esri.rest.support.PointBarrier")],L),e("O",L);let V=W=class extends(i(d)){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(e,t){return y(t.attributes,"Attr_")}writeCosts(e,t){T(e,t,"Attr_")}static fromGraphic(e){return new W({barrierType:null!=e.attributes.BarrierType?v.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?h(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,BarrierType:null!=this.barrierType?v.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(O(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new l({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};var U;V.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],V.popupInfo={title:"Polygon Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},r([o({type:v.apiValues,json:{name:"attributes.BarrierType",read:{reader:v.read},write:{writer:v.write}}})],V.prototype,"barrierType",void 0),r([o()],V.prototype,"costs",void 0),r([b("costs",["attributes"])],V.prototype,"readCosts",null),r([N("costs")],V.prototype,"writeCosts",null),r([o({type:D,json:{write:!0}})],V.prototype,"geometry",void 0),r([o({json:{name:"attributes.Name"}})],V.prototype,"name",void 0),r([o({json:{name:"attributes.ObjectID"}})],V.prototype,"objectId",void 0),r([o({type:n})],V.prototype,"popupTemplate",void 0),r([o()],V.prototype,"scaleFactor",void 0),r([o({types:p})],V.prototype,"symbol",void 0),r([o({readOnly:!0,json:{read:!1}})],V.prototype,"type",void 0),V=W=r([u("esri.rest.support.PolygonBarrier")],V),e("f",V);let B=U=class extends(i(d)){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(e,t){return y(t.attributes,"Attr_")}static fromGraphic(e){return new U({barrierType:null!=e.attributes.BarrierType?v.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?h(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,BarrierType:null!=this.barrierType?v.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(O(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new l({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};B.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],B.popupInfo={title:"Line Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},r([o({type:v.apiValues,json:{read:{source:"attributes.BarrierType",reader:v.read}}})],B.prototype,"barrierType",void 0),r([o()],B.prototype,"costs",void 0),r([b("costs",["attributes"])],B.prototype,"readCosts",null),r([o({type:s,json:{write:!0}})],B.prototype,"geometry",void 0),r([o({json:{name:"attributes.Name"}})],B.prototype,"name",void 0),r([o({json:{name:"attributes.ObjectID"}})],B.prototype,"objectId",void 0),r([o({type:n})],B.prototype,"popupTemplate",void 0),r([o()],B.prototype,"scaleFactor",void 0),r([o({types:p})],B.prototype,"symbol",void 0),r([o({readOnly:!0,json:{read:!1}})],B.prototype,"type",void 0),B=U=r([u("esri.rest.support.PolylineBarrier")],B),e("j",B);let J=class extends d{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(e){return null==e?null:e.map((e=>I.fromJSON(e)))}writeAccumulateAttributes(e,t,i){e?.length&&(t[i]=e.map((e=>I.toJSON(e))))}};r([o({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],J.prototype,"accumulateAttributes",void 0),r([b("accumulateAttributes")],J.prototype,"readAccumulateAttributes",null),r([N("accumulateAttributes")],J.prototype,"writeAccumulateAttributes",null),r([o({type:String,json:{write:!0}})],J.prototype,"directionsLanguage",void 0),r([o({type:Boolean,json:{write:!0}})],J.prototype,"findBestSequence",void 0),r([o({type:Boolean,json:{write:!0}})],J.prototype,"preserveFirstStop",void 0),r([o({type:Boolean,json:{write:!0}})],J.prototype,"preserveLastStop",void 0),r([o({type:Boolean,json:{write:!0}})],J.prototype,"startTimeIsUTC",void 0),r([o({type:Boolean,json:{write:!0}})],J.prototype,"timeWindowsAreUTC",void 0),r([o({type:F,json:{write:!0}})],J.prototype,"travelMode",void 0),J=r([u("esri.layers.support.RouteSettings")],J);const P=e("b",J);var k;let _=k=class extends(i(d)){constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(e,t){return null!=t.attributes.EndTimeUTC?new Date(t.attributes.EndTimeUTC):null}readEndTimeOffset(e,t){return x(t.attributes.EndTime,t.attributes.EndTimeUTC)}readStartTime(e,t){return null!=t.attributes.StartTimeUTC?new Date(t.attributes.StartTimeUTC):null}readStartTimeOffset(e,t){return x(t.attributes.StartTime,t.attributes.StartTimeUTC)}readTotalCosts(e,t){return y(t.attributes,"Total_")}readTotalViolations(e,t){return y(t.attributes,"TotalViolation_")}readTotalWait(e,t){return y(t.attributes,"TotalWait_")}static fromGraphic(e){return new k({analysisSettings:null!=e.attributes.AnalysisSettings?P.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:null!=e.attributes.EndTime?new Date(e.attributes.EndTime):null,endTimeOffset:e.attributes.EndUTCOffset??null,geometry:e.geometry,messages:null!=e.attributes.Messages?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,startTime:null!=e.attributes.StartTime?new Date(e.attributes.StartTime):null,startTimeOffset:e.attributes.StartUTCOffset??null,symbol:e.symbol,totalCosts:null!=e.attributes.TotalCosts?h(JSON.parse(e.attributes.TotalCosts)):null,totalDistance:e.attributes.TotalMeters??null,totalDuration:e.attributes.TotalMinutes??null,totalLateDuration:e.attributes.TotalLateMinutes??null,totalWaitDuration:e.attributes.TotalWaitMinutes??null,version:e.attributes.Version})}toGraphic(){const e={ObjectID:this.objectId,AnalysisSettings:null!=this.analysisSettings?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:null!=this.endTime?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:null!=this.messages?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:null!=this.startTime?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:null!=this.totalCosts?JSON.stringify(O(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new l({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};var R;_.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"EndUTCOffset",alias:"End Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Messages",alias:"Analysis Messages",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:1024,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"StartUTCOffset",alias:"Start Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Version",alias:"Version",type:"esriFieldTypeString",length:16,editable:!0,nullable:!0,visible:!0,domain:null}],_.popupInfo={title:"Route Details",fieldInfos:[{fieldName:"RouteName",label:"Route Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TotalMinutes",label:"Total Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalMeters",label:"Total Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalLateMinutes",label:"Total Late Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalWaitMinutes",label:"Total Wait Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalCosts",label:"Total Costs",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"StartTime",label:"Start Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"StartUTCOffset",label:"Start Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"EndTime",label:"End Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"EndUTCOffset",label:"End Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Messages",label:"Analysis Messages",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"AnalysisSettings",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"Version",label:"Version",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},r([o()],_.prototype,"analysisSettings",void 0),r([o()],_.prototype,"endTime",void 0),r([b("endTime",["attributes.EndTimeUTC"])],_.prototype,"readEndTime",null),r([o()],_.prototype,"endTimeOffset",void 0),r([b("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],_.prototype,"readEndTimeOffset",null),r([o({json:{read:{source:"attributes.FirstStopID"}}})],_.prototype,"firstStopId",void 0),r([o({type:s})],_.prototype,"geometry",void 0),r([o({json:{read:{source:"attributes.LastStopID"}}})],_.prototype,"lastStopId",void 0),r([o()],_.prototype,"messages",void 0),r([o({json:{read:{source:"attributes.Name"}}})],_.prototype,"name",void 0),r([o({json:{read:{source:"attributes.ObjectID"}}})],_.prototype,"objectId",void 0),r([o({type:n})],_.prototype,"popupTemplate",void 0),r([o()],_.prototype,"startTime",void 0),r([b("startTime",["attributes.StartTimeUTC"])],_.prototype,"readStartTime",null),r([o()],_.prototype,"startTimeOffset",void 0),r([b("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],_.prototype,"readStartTimeOffset",null),r([o({json:{read:{source:"attributes.StopCount"}}})],_.prototype,"stopCount",void 0),r([o({types:p})],_.prototype,"symbol",void 0),r([o()],_.prototype,"totalCosts",void 0),r([b("totalCosts",["attributes"])],_.prototype,"readTotalCosts",null),r([o()],_.prototype,"totalDistance",void 0),r([o()],_.prototype,"totalDuration",void 0),r([o()],_.prototype,"totalLateDuration",void 0),r([o()],_.prototype,"totalViolations",void 0),r([b("totalViolations",["attributes"])],_.prototype,"readTotalViolations",null),r([o()],_.prototype,"totalWait",void 0),r([b("totalWait",["attributes"])],_.prototype,"readTotalWait",null),r([o()],_.prototype,"totalWaitDuration",void 0),r([o({readOnly:!0,json:{read:!1}})],_.prototype,"type",void 0),r([o()],_.prototype,"version",void 0),_=k=r([u("esri.rest.support.RouteInfo")],_),e("g",_);let q=R=class extends(i(d)){constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,t){return x(t.attributes.ArriveTime,t.attributes.ArriveTimeUTC)}readCumulativeCosts(e,t){return y(t.attributes,"Cumul_")}readDepartTimeOffset(e,t){return x(t.attributes.DepartTime,t.attributes.DepartTimeUTC)}readServiceCosts(e,t){return y(t.attributes,"Attr_")}writeServiceCosts(e,t){T(e,t,"Attr_")}writeTimeWindowEnd(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowStart=e.getTime())}readViolations(e,t){return y(t.attributes,"Violation_")}readWait(e,t){return y(t.attributes,"Wait_")}static fromGraphic(e){return new R({arriveCurbApproach:null!=e.attributes.ArrivalCurbApproach?f.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:null!=e.attributes.ArrivalTime?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:null!=e.attributes.CumulativeCosts?h(JSON.parse(e.attributes.CumulativeCosts)):null,cumulativeDistance:e.attributes.CumulativeMeters??null,cumulativeDuration:e.attributes.CumulativeMinutes??null,curbApproach:null!=e.attributes.CurbApproach?f.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:null!=e.attributes.DepartureCurbApproach?f.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:null!=e.attributes.DepartureTime?new Date(e.attributes.DepartureTime):null,departTimeOffset:e.attributes.DepartureUTCOffset??null,geometry:e.geometry,lateDuration:e.attributes.LateMinutes??null,locationType:null!=e.attributes.LocationType?A.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,routeName:e.attributes.RouteName,sequence:e.attributes.Sequence??null,serviceCosts:null!=e.attributes.ServiceCosts?h(JSON.parse(e.attributes.ServiceCosts)):null,serviceDistance:e.attributes.ServiceMeters??null,serviceDuration:e.attributes.ServiceMinutes??null,status:null!=e.attributes.Status?S.fromJSON(e.attributes.Status):null,symbol:e.symbol,timeWindowEnd:null!=e.attributes.TimeWindowEnd?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:e.attributes.TimeWindowEndUTCOffset??null,timeWindowStart:null!=e.attributes.TimeWindowStart?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:e.attributes.TimeWindowStartUTCOffset??null,waitDuration:e.attributes.WaitMinutes??null})}toGraphic(){const e={ObjectID:this.objectId,ArrivalCurbApproach:null!=this.arriveCurbApproach?f.toJSON(this.arriveCurbApproach):null,ArrivalTime:null!=this.arriveTime?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:null!=this.cumulativeCosts?JSON.stringify(O(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:null!=this.curbApproach?f.toJSON(this.curbApproach):null,DepartureCurbApproach:null!=this.departCurbApproach?f.toJSON(this.departCurbApproach):null,DepartureTime:null!=this.departTime?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:null!=this.locationType?A.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:null!=this.serviceCosts?JSON.stringify(O(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:null!=this.status?S.toJSON(this.status):null,TimeWindowEnd:null!=this.timeWindowEnd?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:null!=this.timeWindowStart?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:this.timeWindowStartOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new l({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};q.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}],q.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},r([o({type:f.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:f.read}}})],q.prototype,"arriveCurbApproach",void 0),r([o({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],q.prototype,"arriveTime",void 0),r([o()],q.prototype,"arriveTimeOffset",void 0),r([b("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],q.prototype,"readArriveTimeOffset",null),r([o({json:{name:"attributes.Bearing",read:!1,write:!0}})],q.prototype,"bearing",void 0),r([o({json:{name:"attributes.BearingTol",read:!1,write:!0}})],q.prototype,"bearingTol",void 0),r([o()],q.prototype,"cumulativeCosts",void 0),r([b("cumulativeCosts",["attributes"])],q.prototype,"readCumulativeCosts",null),r([o()],q.prototype,"cumulativeDistance",void 0),r([o()],q.prototype,"cumulativeDuration",void 0),r([o({type:f.apiValues,json:{name:"attributes.CurbApproach",read:{reader:f.read},write:{writer:f.write}}})],q.prototype,"curbApproach",void 0),r([o({type:f.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:f.read}}})],q.prototype,"departCurbApproach",void 0),r([o({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],q.prototype,"departTime",void 0),r([o()],q.prototype,"departTimeOffset",void 0),r([b("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],q.prototype,"readDepartTimeOffset",null),r([o({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],q.prototype,"distanceToNetworkInMeters",void 0),r([o({type:c,json:{write:!0}})],q.prototype,"geometry",void 0),r([o()],q.prototype,"lateDuration",void 0),r([o({type:A.apiValues,json:{name:"attributes.LocationType",read:{reader:A.read},write:{writer:A.write}}})],q.prototype,"locationType",void 0),r([o({json:{name:"attributes.Name"}})],q.prototype,"name",void 0),r([o({json:{name:"attributes.NavLatency",read:!1,write:!0}})],q.prototype,"navLatency",void 0),r([o({json:{name:"attributes.ObjectID"}})],q.prototype,"objectId",void 0),r([o({type:n})],q.prototype,"popupTemplate",void 0),r([o({json:{read:{source:"attributes.PosAlong"}}})],q.prototype,"posAlong",void 0),r([o({json:{name:"attributes.RouteName"}})],q.prototype,"routeName",void 0),r([o()],q.prototype,"serviceCosts",void 0),r([b("serviceCosts",["attributes"])],q.prototype,"readServiceCosts",null),r([N("serviceCosts")],q.prototype,"writeServiceCosts",null),r([o()],q.prototype,"serviceDistance",void 0),r([o()],q.prototype,"serviceDuration",void 0),r([o({json:{name:"attributes.Sequence"}})],q.prototype,"sequence",void 0),r([o({type:C.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:C.read}}})],q.prototype,"sideOfEdge",void 0),r([o({json:{read:{source:"attributes.SnapX"}}})],q.prototype,"snapX",void 0),r([o({json:{read:{source:"attributes.SnapY"}}})],q.prototype,"snapY",void 0),r([o({json:{read:{source:"attributes.SnapZ"}}})],q.prototype,"snapZ",void 0),r([o({json:{read:{source:"attributes.SourceID"}}})],q.prototype,"sourceId",void 0),r([o({json:{read:{source:"attributes.SourceOID"}}})],q.prototype,"sourceOid",void 0),r([o({type:S.apiValues,json:{read:{source:"attributes.Status",reader:S.read}}})],q.prototype,"status",void 0),r([o({types:p})],q.prototype,"symbol",void 0),r([o({type:Date,json:{name:"attributes.TimeWindowEnd"}})],q.prototype,"timeWindowEnd",void 0),r([N("timeWindowEnd")],q.prototype,"writeTimeWindowEnd",null),r([o()],q.prototype,"timeWindowEndOffset",void 0),r([o({type:Date,json:{name:"attributes.TimeWindowStart"}})],q.prototype,"timeWindowStart",void 0),r([N("timeWindowStart")],q.prototype,"writeTimeWindowStart",null),r([o()],q.prototype,"timeWindowStartOffset",void 0),r([o({readOnly:!0,json:{read:!1}})],q.prototype,"type",void 0),r([o()],q.prototype,"violations",void 0),r([b("violations",["attributes"])],q.prototype,"readViolations",null),r([o()],q.prototype,"waitDuration",void 0),r([o()],q.prototype,"wait",void 0),r([b("wait",["attributes"])],q.prototype,"readWait",null),q=R=r([u("esri.rest.support.Stop")],q),e("a",q)}}}));
