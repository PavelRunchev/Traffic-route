System.register(["./index-legacy.js","./enums-legacy.js","./Texture-legacy.js","./Program-legacy.js"],(function(e,t){"use strict";var r,i,s,n,l,h;return{setters:[e=>{r=e.ge,i=e.g6,s=e.w},e=>{n=e.V},e=>{l=e.E},e=>{h=e.r}],execute:function(){e("a",(function(e,t,r=""){return new h(e,r+t.shaders.vertexShader,r+t.shaders.fragmentShader,t.attributes)})),e("e",class{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this._read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const i=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let s=i.exec(r);const n=[];for(;null!=s;)n.push({path:s[1],start:s.index,length:s[0].length}),s=i.exec(r);let l=0,h="";return n.forEach((e=>{h+=r.slice(l,e.start),h+=t.has(e.path)?"":this._resolve(e.path,t),l=e.start+e.length})),h+=r.slice(l),t.set(e,h),h}_read(e){return this._readFile(e)}});const t=()=>s.getLogger("esri.views.webgl.VertexArrayObject");e("o",class{constructor(e,t,r,i,s=null){this._context=e,this._locations=t,this._layout=r,this._buffers=i,this._indexBuffer=s,this._glName=null,this._initialized=!1}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get byteSize(){return Object.keys(this._buffers).reduce(((e,t)=>e+this._buffers[t].usedMemory),null!=this._indexBuffer?this._indexBuffer.usedMemory:0)}get layout(){return this._layout}get locations(){return this._locations}get usedMemory(){return this.byteSize+(Object.keys(this._buffers).length+(this._indexBuffer?1:0))*r}dispose(){if(this._context){this._context.getBoundVAO()===this&&this._context.bindVAO(null);for(const e in this._buffers)this._buffers[e]?.dispose(),delete this._buffers[e];this._indexBuffer=i(this._indexBuffer),this.disposeVAOOnly()}else(this._glName||Object.getOwnPropertyNames(this._buffers).length>0)&&t().warn("Leaked WebGL VAO")}disposeVAOOnly(){this._glName&&(this._context.gl.deleteVertexArray(this._glName),this._glName=null,this._context.instanceCounter.decrement(n.VertexArrayObject,this)),this._context=null}initialize(){if(this._initialized)return;const{gl:e}=this._context,t=e.createVertexArray();e.bindVertexArray(t),this._bindLayout(),e.bindVertexArray(null),this._glName=t,this._context.instanceCounter.increment(n.VertexArrayObject,this),this._initialized=!0}bind(){this.initialize(),this._context.gl.bindVertexArray(this.glName)}_bindLayout(){const{_buffers:e,_layout:r,_indexBuffer:i}=this;e||t().error("Vertex buffer dictionary is empty!");const s=this._context.gl;for(const n in e){const i=e[n];i||t().error("Vertex buffer is uninitialized!");const s=r[n];s||t().error("Vertex element descriptor is empty!"),l(this._context,this._locations,i,s)}null!=i&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,i.glName)}unbind(){this.initialize(),this._context.gl.bindVertexArray(null)}})}}}));
