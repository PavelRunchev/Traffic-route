System.register(["./index-legacy.js","./imageUtils-legacy.js","./LayerView-legacy.js","./RefreshableLayerView-legacy.js","./Bitmap-legacy.js","./Container-legacy.js","./highlightReasons-legacy.js","./definitions-legacy.js","./enums-legacy.js","./Texture-legacy.js","./WGLContainer-legacy.js","./LabelMetric-legacy.js","./enums-legacy2.js","./Program-legacy.js","./VertexElementDescriptor-legacy.js","./ProgramTemplate-legacy.js","./StyleDefinition-legacy.js","./config-legacy.js","./earcut-legacy.js","./featureConversionUtils-legacy.js","./OptimizedGeometry-legacy.js","./OptimizedFeatureSet-legacy.js","./TileContainer-legacy.js"],(function(e,t){"use strict";var i,l,s,a,r,n,h,c,u,o,y,f,d,g,p;return{setters:[e=>{i=e.k,l=e.m,s=e.r,a=e.G,r=e.v,n=e.o,h=e.w,c=e.x,u=e.y,o=e.z},e=>{y=e.r,f=e.n},e=>{d=e.m,g=e.u},e=>{p=e.i},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){const t=new Set([102113,102100,3857,3785,900913]),_=[0,0];let m=class extends(p(y(d(g)))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}get tileMatrixSet(){const e=this._getTileMatrixSetBySpatialReference(this.layer.activeLayer);return e?(e.id!==this.layer.activeLayer.tileMatrixSetId&&(this.layer.activeLayer.tileMatrixSetId=e.id),e):null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume()}attach(){const e=this.tileMatrixSet?.tileInfo;e&&(this._tileInfoView=new i(e),this._fetchQueue=new l({tileInfoView:this._tileInfoView,concurrency:16,process:(e,t)=>this.fetchTile(e,t)}),this._tileStrategy=new s({cachePolicy:"keep",resampling:!0,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.addAttachHandles(this._updatingHandles.add((()=>[this.layer?.activeLayer?.styleId,this.tileMatrixSet]),(()=>this.doRefresh()))),super.attach())}detach(){super.detach(),this._tileStrategy?.destroy(),this._fetchQueue?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){return this.layer.activeLayer.tileMatrixSets?.some((t=>a(t.tileInfo?.spatialReference,e)))??!1}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh((e=>this._updatingHandles.addPromise(this._enqueueTileFetch(e))))}}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(_,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate()}async fetchTile(e,t={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:l,resamplingLevel:s=0}=t;if(!i)return this._fetchImage(e,l);const a=new r(0,0,0,0);let h;try{await i.fetchAvailabilityUpsample(e.level,e.row,e.col,a,{signal:l}),h=await this._fetchImage(a,l)}catch(c){if(n(c))throw c;if(s<3){const i=this._tileInfoView.getTileParentId(e.id);if(i){const l=new r(i),a=await this.fetchTile(l,{...t,resamplingLevel:s+1});return f(this._tileInfoView,a,l,e)}}throw c}return f(this._tileInfoView,h,a,e)}canResume(){const e=super.canResume();return e?null!==this.tileMatrixSet:e}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",(()=>this.requestUpdate()))}catch(t){n(t)||h.getLogger(this).error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}_getTileMatrixSetBySpatialReference(e){const i=this.view.spatialReference;if(!e.tileMatrixSets)return null;let l=e.tileMatrixSets.find((e=>a(e.tileInfo?.spatialReference,i)));return!l&&i.isWebMercator&&(l=e.tileMatrixSets.find((e=>t.has(e.tileInfo?.spatialReference.wkid??-1)))),l}};c([u({readOnly:!0})],m.prototype,"tileMatrixSet",null),m=c([o("esri.views.2d.layers.WMTSLayerView2D")],m),e("default",m)}}}));
