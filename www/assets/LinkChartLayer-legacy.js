System.register(["./index-legacy.js","./geohashUtils-legacy.js","./featureConversionUtils-legacy.js","./OptimizedGeometry-legacy.js","./knowledgeGraphService-legacy.js","./GraphQueryStreaming-legacy.js","./FeatureStore-legacy.js","./QueryEngine-legacy.js","./clientSideDefaults-legacy.js","./timeSupport-legacy.js","./json-legacy.js","./OptimizedFeatureSet-legacy.js","./BoundsStore-legacy.js","./PooledRBush-legacy.js","./WhereClause-legacy.js","./TimeOnly-legacy.js","./QueryEngineCapabilities-legacy.js","./utils-legacy4.js","./utils-legacy3.js","./utils-legacy5.js","./ClassBreaksDefinition-legacy.js","./RenderState-legacy.js"],(function(e,t){"use strict";var a,i,n,s,o,r,l,h,p,d,y,u,c,m,g,f,T,b,L,k,w,C,M,E,x,D,I,N,R,v,_,S,A,G,j,F,O,q,P,Q,$,U,B,H,J,z,Y,V,W,Z;return{setters:[e=>{a=e.ec,i=e.s,n=e.x,s=e.y,o=e.z,r=e.bm,l=e.w,h=e.e7,p=e.az,d=e.d1,y=e.cw,u=e.b4,c=e.aQ,m=e.jv,g=e.aN,f=e.fk,T=e.f7,b=e.bs,L=e.bt,k=e.dd,w=e.jw,C=e.d3,M=e.d2,E=e.I,x=e.f9,D=e.fa,I=e.E,N=e.aO,R=e.ff,v=e.F,_=e.fg,S=e.bw,A=e._,G=e.h8,j=e.V,F=e.at,O=e.ar},e=>{q=e.z},e=>{P=e.o},e=>{Q=e.t,$=e.e},e=>{U=e.G,B=e.p,H=e.t,J=e.T},e=>{z=e.a},e=>{Y=e.m},e=>{V=e.$},e=>{W=e.l,Z=e.o},null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){let K=class e{constructor(){this._featureLookup=new Map}static getInstance(){return e.instance||(e.instance=new e),e.instance}static resetInstance(){e.instance&&(e.instance=null)}deleteFromStore(e){e.forEach((e=>{this._featureLookup.delete(e)}))}readFromStoreByList(e){const t=[];return e.forEach((e=>{const a=this.readFromStoreById(e);a&&t.push(a)})),t}readFromStoreById(e){return this._featureLookup.get(e)??null}writeToStore(e,t,i){const n=[];return e.forEach((e=>{if(!e?.id)return;e.properties||(e.properties=[]);let s,o=null;if(i&&e.properties[i]&&(o=P(e.properties[i])),"originId"in e&&"destinationId"in e&&(e.properties.ESRI__ORIGIN_ID=e.originId,e.properties.ESRI__DESTINATION_ID=e.destinationId),e.properties[t]=e.id,e.id&&this._featureLookup.has(e.id)&&this._featureLookup.get(e.id).attributes){const n=this._featureLookup.get(e.id),r=JSON.parse(JSON.stringify(Object.assign(n.attributes,e.properties)));i&&e.properties[i]&&(r[i]=a(e.properties[i])),s=new Q(o?JSON.parse(JSON.stringify(o)):n?.geometry?JSON.parse(JSON.stringify(n.geometry)):null,r,null,e.properties[t])}else s=new Q(o?JSON.parse(JSON.stringify(o)):null,e.properties,null,e.properties[t]);this._featureLookup.set(e.id,s),n.push(s)})),n}};var X,ee,te,ae,ie,ne,se;function oe(e){if(!e.spatialReference.isWGS84)throw new i("knowledge-graph:layer-support-utils","The extentToInBoundsRings function only supports WGS84 spatial references.");let t;return t=e.xmax>180&&e.xmin<180?[[[e.xmin,e.ymin],[e.xmin,e.ymax],[180,e.ymax],[180,e.ymin],[e.xmin,e.ymin]],[[-180,e.ymin],[-180,e.ymax],[e.xmax-360,e.ymax],[e.xmax-360,e.ymin],[-180,e.ymin]]]:e.xmax>180&&e.xmin>180?[[[e.xmin-360,e.ymin],[e.xmin-360,e.ymax],[e.xmax-360,e.ymax],[e.xmax-360,e.ymin],[e.xmin-360,e.ymin]]]:e.xmax>-180&&e.xmin<-180?[[[e.xmin+360,e.ymin],[e.xmin+360,e.ymax],[180,e.ymax],[180,e.ymin],[e.xmin+360,e.ymin]],[[-180,e.ymin],[-180,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[-180,e.ymin]]]:e.xmax<-180&&e.xmin<-180?[[[e.xmin+360,e.ymin],[e.xmin+360,e.ymax],[e.xmax+360,e.ymax],[e.xmax+360,e.ymin],[e.xmin+360,e.ymin]]]:[[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]],t}async function re(e,t){const a=[],i=new Map,n=[];if(t.dataModel?.relationshipTypes)for(const s of t.dataModel.relationshipTypes)s.name&&i.set(s.name,[]);for(const s of e)i.has(s.typeName)&&i.get(s.typeName)?.push(s.id);for(const[s,o]of i){if(o.length<1)continue;const e=new z({openCypherQuery:`MATCH (n)-[r:${s}]->(m) WHERE id(r) in $ids RETURN id(n), labels(n)[0], id(m), labels(m)[0]`,bindParameters:{ids:o}});n.push(U(t,e).then((async e=>{const t=e.resultRowsStream.getReader();for(;;){const{done:e,value:i}=await t.read();if(e)break;for(const t of i)a.push({id:t[0],typeName:t[1]}),a.push({id:t[2],typeName:t[3]})}})))}return await Promise.all(n),a}!function(e){e.ELEMENTUID="ELEMENTUID",e.TYPENAME="TYPENAME"}(X||(X={})),X.ELEMENTUID,X.TYPENAME,function(e){e[e.ELEMENTUID=0]="ELEMENTUID",e[e.TYPENAME=1]="TYPENAME"}(ee||(ee={})),function(e){e[e.ELEMENTUID=0]="ELEMENTUID",e[e.TYPENAME=1]="TYPENAME",e[e.FROMUID=2]="FROMUID",e[e.TOUID=3]="TOUID"}(te||(te={})),function(e){e[e.featureResult=0]="featureResult",e[e.countResult=1]="countResult",e[e.idsResult=2]="idsResult"}(ae||(ae={})),function(e){e[e.upperLeft=0]="upperLeft",e[e.lowerLeft=1]="lowerLeft"}(ie||(ie={})),function(e){e[e.sqlTypeBigInt=0]="sqlTypeBigInt",e[e.sqlTypeBinary=1]="sqlTypeBinary",e[e.sqlTypeBit=2]="sqlTypeBit",e[e.sqlTypeChar=3]="sqlTypeChar",e[e.sqlTypeDate=4]="sqlTypeDate",e[e.sqlTypeDecimal=5]="sqlTypeDecimal",e[e.sqlTypeDouble=6]="sqlTypeDouble",e[e.sqlTypeFloat=7]="sqlTypeFloat",e[e.sqlTypeGeometry=8]="sqlTypeGeometry",e[e.sqlTypeGUID=9]="sqlTypeGUID",e[e.sqlTypeInteger=10]="sqlTypeInteger",e[e.sqlTypeLongNVarchar=11]="sqlTypeLongNVarchar",e[e.sqlTypeLongVarbinary=12]="sqlTypeLongVarbinary",e[e.sqlTypeLongVarchar=13]="sqlTypeLongVarchar",e[e.sqlTypeNChar=14]="sqlTypeNChar",e[e.sqlTypeNVarChar=15]="sqlTypeNVarChar",e[e.sqlTypeOther=16]="sqlTypeOther",e[e.sqlTypeReal=17]="sqlTypeReal",e[e.sqlTypeSmallInt=18]="sqlTypeSmallInt",e[e.sqlTypeSqlXml=19]="sqlTypeSqlXml",e[e.sqlTypeTime=20]="sqlTypeTime",e[e.sqlTypeTimestamp=21]="sqlTypeTimestamp",e[e.sqlTypeTimestamp2=22]="sqlTypeTimestamp2",e[e.sqlTypeTinyInt=23]="sqlTypeTinyInt",e[e.sqlTypeVarbinary=24]="sqlTypeVarbinary",e[e.sqlTypeVarchar=25]="sqlTypeVarchar"}(ne||(ne={})),function(e){e[e.OID_ARRAY=0]="OID_ARRAY",e[e.GLOBALID_ARRAY=1]="GLOBALID_ARRAY",e[e.STRING_ARRAY=2]="STRING_ARRAY",e[e.IDENTIFIER_ARRAY=3]="IDENTIFIER_ARRAY"}(se||(se={}));const le="ESRI__ID",he="ESRI__ORIGIN_ID",pe="ESRI__DESTINATION_ID",de="ESRI__LAYOUT_GEOMETRY",ye="ESRI__AGGREGATION_COUNT",ue=12;let ce=class extends r{constructor(e){super(e),this._processingCacheUpdatesLookup=new Map,this.knowledgeGraph=null,this.inclusionModeDefinition={generateAllSublayers:!0,namedTypeDefinitions:new Map},this.entityTypeNames=new Set,this.relationshipTypeNames=new Set,this.geographicLookup=new Map,this.sublayerCaches=new Map,this.nodeConnectionsLookup=new Map,this.relationshipConnectionsLookup=new Map,this.memberIdTypeLookup=new Map;const t=new Map;e.knowledgeGraph.dataModel.entityTypes?.forEach((a=>{a.name&&(t.set(a.name,"entity"),this._processingCacheUpdatesLookup.set(a.name,[]),e.inclusionModeDefinition&&!e.inclusionModeDefinition?.generateAllSublayers||this.entityTypeNames.add(a.name),a.properties?.forEach((e=>{e.geometryType&&"esriGeometryNull"!==e.geometryType&&this.geographicLookup.set(a.name,{name:e.name??"",geometryType:e.geometryType})})))})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((a=>{a.name&&(t.set(a.name,"relationship"),this._processingCacheUpdatesLookup.set(a.name,[]),e.inclusionModeDefinition&&!e.inclusionModeDefinition?.generateAllSublayers||this.relationshipTypeNames.add(a.name),a.properties?.forEach((e=>{e.geometryType&&"esriGeometryNull"!==e.geometryType&&this.geographicLookup.set(a.name,{name:e.name??"",geometryType:e.geometryType})})))})),e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((a,i)=>{if("entity"===t.get(i))this.entityTypeNames.add(i);else{if("relationship"!==t.get(i))return l.getLogger(this).warn(`A named type, ${i}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(i);this.relationshipTypeNames.add(i)}const n=new Map;a.members?.forEach((e=>{h(this.memberIdTypeLookup,e.id,(()=>new Set)).add(i);const t=this.getById(e.id);t&&n.set(e.id,t)})),this.sublayerCaches.set(i,n)}))}addToLayer(e){e.forEach((({typeName:e,id:t})=>{if(!this.inclusionModeDefinition)throw new i("knowledge-graph:layer-data-manager","You cannot add to a layer's exclusion list if it was not created with an exclusion list originally");if(this.inclusionModeDefinition.namedTypeDefinitions.has(e)){if(this.inclusionModeDefinition.namedTypeDefinitions.has(e)){const a=this.inclusionModeDefinition.namedTypeDefinitions.get(e);a.members||(a.members=new Map),a.members.set(t,{id:t}),h(this.memberIdTypeLookup,t,(()=>new Set)).add(e)}}else{const a=new Map;a.set(t,{id:t}),this.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!1,members:a}),h(this.memberIdTypeLookup,t,(()=>new Set)).add(e)}}))}getById(e){return K.getInstance().readFromStoreById(e)}async getData(e,t,a){if(t.objectType.name&&this.inclusionModeDefinition?.namedTypeDefinitions&&this.inclusionModeDefinition.namedTypeDefinitions.size>0&&!this.inclusionModeDefinition.namedTypeDefinitions.has(t.objectType.name))return[];let i;if(i=e||new p({where:"1=1",outFields:["*"]}),"link-chart"===t.parentCompositeLayer.type){const e=t.parentCompositeLayer,a=this._processingCacheUpdatesLookup.get(t.objectType.name??""),n=i.outFields,s=i.geometry;let o="",r="";s&&s.extent&&(o=q(s.extent.ymin,s.extent.xmin,ue),r=q(s.extent.ymax,s.extent.xmax,ue)),n&&1===n.length&&n[0]===le&&"1=1"===i.where||await Promise.all(a??[]);const l=this.sublayerCaches.has(t.objectType.name??"")?Array.from(this.sublayerCaches.get(t.objectType.name)?.values()):[],h=[];return l.forEach((a=>{if(this.relationshipTypeNames.has(t.objectType.name)?a.geometry=e.relationshipLinkChartDiagramLookup.get(a.attributes[t.objectIdField]):a.geometry=e.entityLinkChartDiagramLookup.get(a.attributes[t.objectIdField]),a.attributes[de]=a.geometry,o&&r){const i=e.linkChartGeohashLookup.get(a.attributes[t.objectIdField]);i?i>=o&&i<=r&&h.push(a):h.push(a)}else h.push(a)})),h}return this.retrieveDataFromService(i,t,a)}async getConnectedRecordIds(e,t){const a=[];let i="";const n=[],s=new Map;if(e.forEach((e=>{if(this.memberIdTypeLookup.has(e))for(const t of this.memberIdTypeLookup.get(e)){if(!this.entityTypeNames.has(t))return;s.has(t)?s.get(t)?.push(e):s.set(t,[e])}})),t&&0!==t?.length){for(const e of t)i=i+e+"|";i=i.slice(0,-1)}return s.forEach(((e,s)=>{let o;o=t&&0!==t?.length?`MATCH (n:${s})-[r:${i}]-(m) WHERE id(n) IN $ids RETURN id(r), type(r), id(m), labels(m)[0]`:`MATCH (n:${s})-[r]-(m) WHERE id(n) IN $ids RETURN id(r), type(r), id(m), labels(m)[0]`;const r=new Promise((t=>{(async()=>{const t=(await U(this.knowledgeGraph,new z({openCypherQuery:o,bindParameters:{ids:e}}))).resultRowsStream.getReader();try{for(;;){const{done:e,value:i}=await t.read();if(e)break;for(let t=0;t<i.length;t++){const e=i[t];a.push({id:e[0],typeName:e[1]}),a.push({id:e[2],typeName:e[3]})}}}catch(i){if("AbortError"!==i.name)throw i;l.getLogger(this).info("Request aborted as expected")}})().then((()=>{t()}))}));n.push(r)})),this.refreshCacheContent(),await Promise.all(n),a}async refreshCacheContent(e,t,a,n=!0){const s=K.getInstance(),o=[],r=new Map,l=new Map;this.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&l.set(e.name,e)})),this.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&l.set(e.name,e)})),e||this.inclusionModeDefinition?e?e.forEach((e=>{if(this.memberIdTypeLookup.has(e))for(const t of this.memberIdTypeLookup.get(e))r.has(t)?r.get(t)?.push(e):r.set(t,[e])})):this.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e.useAllData?r.set(t,null):e.members&&e.members.forEach((e=>{r.has(t)&&null!==r.get(t)?r.get(t)?.push(e.id):r.set(t,[e.id])}))})):(this.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&r.set(e.name,null)})),this.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&r.set(e.name,null)})));for(const[p,d]of r){const e=new Promise((e=>{(async()=>{const e=new Set,o=[];let r,y="",u=!1;if(t||l.get(p)?.properties?.forEach((t=>{t.name&&e.add(t.name)})),a&&this.geographicLookup.has(p)){const t=this.geographicLookup.get(p)?.name;t&&e.add(t)}if(this.entityTypeNames.has(p))y=`MATCH (n:${p}) ${d?"WHERE id(n) IN $ids ":""}return ID(n)`,e.forEach((e=>{y+=`, n.${e}`,o.push(e)}));else{if(!this.relationshipTypeNames.has(p))throw new i("knowledge-graph:layer-data-manager",`The graph type of ${p} could not be determined. Was this type set in the KG data model and inclusion definition?`);u=!0,y=`MATCH ()-[n:${p}]->() ${d?"WHERE id(n) IN $ids ":""}return ID(n), id(startNode(n)), id(endNode(n))`,e.forEach((e=>{y+=`, n.${e}`,o.push(e)}))}r=new z(d?{openCypherQuery:y,bindParameters:{ids:d}}:{openCypherQuery:y});const c=(await U(this.knowledgeGraph,r)).resultRowsStream.getReader();for(;;){const{done:e,value:t}=await c.read();if(e)break;const a=[];for(let n=0;n<t.length;n++){const e=t[n];let i=0,s=0;const r={properties:{}};for(r.id=e[i],i++,s++,u&&(r.originId=e[i],i++,s++,r.destinationId=e[i],i++,s++,h(this.nodeConnectionsLookup,r.originId,(()=>new Set)).add(r.id),h(this.nodeConnectionsLookup,r.destinationId,(()=>new Set)).add(r.id),h(this.relationshipConnectionsLookup,r.id,(()=>[r.originId,r.destinationId])));i<e.length;i++)r.properties[o[i-s]]=e[i];a.push(r)}const i=s.writeToStore(a,le,this.geographicLookup.get(p)?.name);this.sublayerCaches.has(p)||this.sublayerCaches.set(p,new Map),n&&!this.inclusionModeDefinition?.namedTypeDefinitions.has(p)&&this.inclusionModeDefinition?.namedTypeDefinitions.set(p,{useAllData:!1,members:new Map}),n&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(p).members&&(this.inclusionModeDefinition.namedTypeDefinitions.get(p).members=new Map);const r=this.sublayerCaches.get(p);i.forEach((e=>{r?.set(e.attributes[le],e),n&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(p).members.has(e.attributes[le])&&(this.inclusionModeDefinition?.namedTypeDefinitions.get(p).members.set(e.attributes[le],{id:e.attributes[le]}),h(this.memberIdTypeLookup,e.attributes[le],(()=>new Set)).add(p))}))}})().then((()=>{e(null)}))}));o.push(e),this._processingCacheUpdatesLookup.get(p)?.push(e)}await Promise.all(o)}removeFromLayer(e){const t=new Set,a=new Set(e.map((e=>e.id)));for(const i of e)t.add(i.typeName),1===this.memberIdTypeLookup.get(i.id)?.size?this.memberIdTypeLookup.delete(i.id):this.memberIdTypeLookup.get(i.id)?.delete(i.typeName),this.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{t===i.typeName&&e.members?.has(i.id)&&e.members.delete(i.id)}));t.forEach((e=>{this.sublayerCaches.get(e)?.forEach(((t,i)=>{a.has(i)&&this.sublayerCaches.get(e)?.delete(i)}))}))}async retrieveDataFromService(e,t,a){const n=K.getInstance(),s=new Set,o=[];let r,l="",h=[];const p="relationship"===t.graphType,f=this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData,T=t.parentCompositeLayer.sublayerIdsCache.get(t.objectType.name);let b=!f&&T?Array.from(T).sort():null;if(this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData)this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData&&null!=e.objectIds&&(b=e.objectIds);else if(null!=e.objectIds&&b&&b.length>0){const t=e.objectIds;e.objectIds=b.filter((e=>t.includes(e)))}else if(null!=e.objectIds)b=e.objectIds;else{if(this.inclusionModeDefinition?.namedTypeDefinitions.has(t.objectType.name)&&(!this.inclusionModeDefinition.namedTypeDefinitions.get(t.objectType.name)?.members||this.inclusionModeDefinition.namedTypeDefinitions.get(t.objectType.name)?.members?.size<1))return e.objectIds=[],[];e.objectIds=b}if(null!=e.outFields){const a=e.outFields;a.includes("*")?t.fields.forEach((e=>{s.add(e.name)})):a.forEach((e=>{e!==le&&e!==t.geometryFieldName&&s.add(e)}))}if(null!=e.geometry){const a=e.geometry;let n;const h=t.parentCompositeLayer.dataManager.knowledgeGraph.serviceDefinition,f=h?.spatialReference,T=h?.serviceCapabilities?.geometryCapabilities;let b=T?.geometryMaxBoundingRectangleSizeX,L=T?.geometryMaxBoundingRectangleSizeY;if(a?.extent?.spatialReference&&!a.spatialReference?.isWGS84?(await d(a.extent.spatialReference,y),n=u(a.extent,y)):n=a.extent,b&&L&&f){if(4326!==f.wkid){const e=new c({spatialReference:f,xmax:b,ymax:L}),t=u(e,y);b=t.xmax,L=t.ymax}if(n.xmax-n.xmin>b)throw new i("knowledge-graph:layer-data-manager",`Extent x bounds should be within ${b}° latitude, limit exceeded`);if(n.ymax-n.ymin>L)throw new i("knowledge-graph:layer-data-manager",`Extent y bounds should be within ${L}° longitude, limit exceeded`)}if(null!=e.where&&"1=1"!==e.where){const a=await m(e.where.toUpperCase(),t.fieldsIndex);t.fields.forEach((e=>{a.fieldNames.includes(e.name)&&s.add(e.name)}))}l=p?`Match ()-[n:${t.objectType.name}]->() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))`:`Match (n:${t.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t.geometryFieldName}) return ID(n)`,t.geometryFieldName&&s.add(t.geometryFieldName),s.forEach((e=>{l+=`, n.${e}`,o.push(e)})),r=new z({openCypherQuery:l,bindParameters:{param_filter_geom:new g({rings:oe(n)})}})}else{let a="";if(null!=e.where&&"1=1"!==e.where){const i=await m(e.where,t.fieldsIndex);t.fields.forEach((e=>{i.fieldNames.includes(e.name)&&s.add(e.name)}));const n=new Set(["column-reference","string","number","binary-expression"]),o=new Set(["=","<","<=","<>",">",">=","AND","OR","LIKE"]);let r=!1;const l=e=>{if("column-reference"===e.type)return`n.${e.column}`;if("string"===e.type)return`'${e.value}'`;if("number"===e.type)return`${e.value}`;if("binary-expression"===e.type&&n.has(e.left.type)&&n.has(e.right.type)&&o.has(e.operator))return`${l(e.left)} ${e.operator} ${l(e.right)}`;if("binary-expression"===e.type&&"LIKE"===e.operator){let t="";if("function"===e.left.type&&"column-reference"===e.left.args.value[0].type)t+=`lower(n.${e.left.args.value[0].column})`;else{if("column-reference"!==e.left.type)return r=!0,"";t+=`lower(n.${e.left.column})`}if(t+=" CONTAINS (","string"!==e.right.type)return r=!0,"";{let a=e.right.value;"%"===a.charAt(0)&&(a=a.slice(1)),"%"===a.charAt(a.length-1)&&(a=a.slice(0,-1)),t+=`'${a.toLowerCase()}')`}return t}return r=!0,""};a=l(i.parseTree),r&&(a="")}let i="";i=p?`Match ()-[n:${t.objectType.name}]->()`:`Match (n:${t.objectType.name})`;let n=!1;b&&(n=!0,i+=" WHERE ID(n) IN $ids"),a&&(i+=n?" AND":" WHERE",i+=` ${a}`),i+=" return ID(n)",p&&(i+=", id(startNode(n)), id(endNode(n))"),e.returnGeometry&&t.geometryFieldName&&s.add(t.geometryFieldName),s.forEach((e=>{i+=`, n.${e}`,o.push(e)})),r=new z(b?{openCypherQuery:i,bindParameters:{ids:b}}:{openCypherQuery:i})}const L=(await U(t.parentCompositeLayer.dataManager.knowledgeGraph,r,a)).resultRowsStream.getReader();for(;;){const{done:e,value:a}=await L.read();if(e)break;const i=[];for(let t=0;t<a.length;t++){const e=a[t];let n=0,s=0;const r={properties:{}};for(r.id=e[n],n++,s++,p&&(r.originId=e[n],n++,s++,r.destinationId=e[n],n++,s++);n<e.length;n++)r.properties[o[n-s]]=e[n];i.push(r)}h=h.concat(n.writeToStore(i,le,t.parentCompositeLayer.dataManager.geographicLookup.get(t.objectType.name)?.name))}return h}};n([s()],ce.prototype,"knowledgeGraph",void 0),n([s()],ce.prototype,"inclusionModeDefinition",void 0),n([s()],ce.prototype,"entityTypeNames",void 0),n([s()],ce.prototype,"relationshipTypeNames",void 0),n([s()],ce.prototype,"geographicLookup",void 0),n([s()],ce.prototype,"sublayerCaches",void 0),n([s()],ce.prototype,"nodeConnectionsLookup",void 0),n([s()],ce.prototype,"relationshipConnectionsLookup",void 0),n([s()],ce.prototype,"memberIdTypeLookup",void 0),ce=n([o("esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager")],ce);const me=f(),ge=e=>{let t=class extends e{constructor(){super(...arguments),this.fields=[],this.fieldsIndex=null}};return n([s(me.fields)],t.prototype,"fields",void 0),n([s(me.fieldsIndex)],t.prototype,"fieldsIndex",void 0),t=n([o("esri.layers.knowledgeGraphLayer.KnowledgeGraphSublayerBase")],t),t};let fe=class extends(T(ge(b(L(k(S)))))){constructor(e){if(super(e),this.capabilities=W(!1,!1),this.definitionExpression="",this.displayField="",this.elevationInfo=null,this.geometryType=null,this.geometryFieldName=null,this.graphType=null,this.hasM=!1,this.hasZ=!1,this.labelsVisible=null,this.labelingInfo=null,this.objectIdField=le,this.objectType=null,this.parentCompositeLayer=null,this.popupEnabled=!0,this.popupTemplate=null,this.source={openPorts:()=>this.load().then((()=>{const e=new MessageChannel;return new w(e.port1,{channel:e,client:{queryFeatures:(e,t={})=>{const a=p.fromJSON(e);return this.queryFeaturesJSON(a,t)}}}),[e.port2]}))},this.type="knowledge-graph-sublayer","link-chart"===e.parentCompositeLayer.type)"relationship"===e.graphType?this.geometryType="polyline":this.geometryType="point",this.geometryFieldName=de;else if(e.parentCompositeLayer.dataManager.geographicLookup.get(e.objectType.name)?.geometryType&&"esriGeometryNull"!==e.parentCompositeLayer.dataManager.geographicLookup.get(e.objectType.name)?.geometryType){const t=e.parentCompositeLayer.dataManager.geographicLookup.get(e.objectType.name);this.geometryFieldName=t?.name??null,this.geometryType=t?.geometryType?C.fromJSON(t.geometryType):null;const a=t?.name,i=a?e.objectType.properties?.[a]:null;i?(this.hasM=i.hasM??!1,this.hasZ=i.hasZ??!1):(this.hasM=!1,this.hasZ=!1)}else this.geometryType=null;e.objectType.properties?.forEach((e=>{let t=e.fieldType;"esriFieldTypeOID"===t&&(t="esriFieldTypeInteger"),this.fields.push(M.fromJSON({name:e.name,type:t,alias:e.alias,defaultValue:null,editable:e.editable,nullable:e.nullable}))})),this.fields.push(M.fromJSON({name:this.objectIdField,type:"esriFieldTypeString",alias:this.objectIdField,editable:!1})),this.fields.push(M.fromJSON({name:ye,type:"esriFieldTypeInteger",alias:ye,editable:!1})),this._set("fields",[...this.fields]),e.parentCompositeLayer.dataManager.knowledgeGraph.dataModel?.spatialReference&&(this.spatialReference=e.parentCompositeLayer.dataManager.knowledgeGraph.dataModel.spatialReference),"link-chart"===e.parentCompositeLayer.type?"relationship"===e.graphType?this.renderer=E(Z(C.toJSON("polyline")).renderer):this.renderer=E(Z(C.toJSON("point")).renderer):this.renderer=E(Z(C.toJSON(this.geometryType)).renderer)}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){x(e,this.fieldsIndex),this._set("renderer",e)}createPopupTemplate(e){return D(this,e)}createQuery(){return new p({where:"1=1",outFields:["*"]})}getField(e){for(let t=0;t<this.fields.length;t++)if(this.fields[t].name===e)return this.fields[t];return null}getFieldDomain(e,t){return null}async queryFeatures(e,t){const{resolvedQuery:a,queryEngine:i}=await this._setupQueryObjects(e),n=I.fromJSON(await i.executeQuery(a.toJSON(),t?.signal));return n.features.forEach((e=>{e.sourceLayer=this})),n}async queryFeaturesJSON(e,t){const{resolvedQuery:a,queryEngine:i}=await this._setupQueryObjects(e);return await i.executeQuery(a.toJSON(),t?.signal)}async queryFeatureCount(e,t){const{resolvedQuery:a,queryEngine:i}=await this._setupQueryObjects(e);return i.executeQueryForCount(a.toJSON(),t?.signal)}async queryExtent(e={},t){const a={...e,returnGeometry:!0},{resolvedQuery:i,queryEngine:n}=await this._setupQueryObjects(a),s=await n.executeQueryForExtent(i.toJSON(),t?.signal);let o;return o=null!=s.extent?.xmin&&null!=s.extent?.xmax&&null!=s.extent?.ymin&&null!=s.extent?.ymax?new c(s.extent):new c,{count:s.count,extent:o}}async queryObjectIds(e,t){const a=p.from(e);let i;if("link-chart"===this.parentCompositeLayer.type&&this._cachedQueryEngine)i=this._cachedQueryEngine;else{const e=await this.parentCompositeLayer.dataManager.getData(a,this,t);i=this.loadQueryEngine(e)}return i.executeQueryForIds(a.toJSON(),t?.signal)}loadQueryEngine(e){const t=new Y({geometryType:C.toJSON(this.geometryType),hasM:this.hasM,hasZ:this.hasZ}),a=new V({fieldsIndex:this.fieldsIndex.toJSON(),geometryType:C.toJSON(this.geometryType),hasM:this.hasM,hasZ:this.hasZ,objectIdField:this.objectIdField,spatialReference:this.spatialReference.toJSON(),timeInfo:null,featureStore:t});return a.featureStore.addMany(e),a}async refreshCachedQueryEngine(){const e=await this.parentCompositeLayer.dataManager.getData(new p({where:"1=1",outFields:[le]}),this);this._cachedQueryEngine=this.loadQueryEngine(e)}async _setupQueryObjects(e,t){const a=p.from(e),i=a.geometry;let n;if(i&&!i.spatialReference?.isWGS84&&(await d(i.spatialReference,y),a.geometry=u(i instanceof g||i instanceof N?i:i.extent,y)),"link-chart"===this.parentCompositeLayer.type&&this._cachedQueryEngine)n=this._cachedQueryEngine;else{const e=await this.parentCompositeLayer.dataManager.getData(a,this,t);n=this.loadQueryEngine(e)}return{resolvedQuery:a,queryEngine:n}}};n([s()],fe.prototype,"capabilities",void 0),n([s({readOnly:!0})],fe.prototype,"defaultPopupTemplate",null),n([s()],fe.prototype,"definitionExpression",void 0),n([s()],fe.prototype,"displayField",void 0),n([s()],fe.prototype,"elevationInfo",void 0),n([s()],fe.prototype,"geometryType",void 0),n([s()],fe.prototype,"geometryFieldName",void 0),n([s()],fe.prototype,"graphType",void 0),n([s()],fe.prototype,"hasM",void 0),n([s()],fe.prototype,"hasZ",void 0),n([s()],fe.prototype,"labelsVisible",void 0),n([s()],fe.prototype,"labelingInfo",void 0),n([s()],fe.prototype,"objectIdField",void 0),n([s()],fe.prototype,"objectType",void 0),n([s()],fe.prototype,"parentCompositeLayer",void 0),n([s(R)],fe.prototype,"popupEnabled",void 0),n([s({type:v,json:{name:"popupInfo",write:!0}})],fe.prototype,"popupTemplate",void 0),n([s({types:_,json:{write:{target:"layerDefinition.drawingInfo.renderer"}}})],fe.prototype,"renderer",null),n([s()],fe.prototype,"source",void 0),n([s({json:{read:!1}})],fe.prototype,"type",void 0),fe=n([o("esri.layers.knowledgeGraph.KnowledgeGraphSublayer")],fe);const Te=fe;let be,Le=null;function ke(){return be||(be=A((()=>t.import("./lclayout-legacy.js")),void 0,t.meta.url).then((e=>e.l)).then((({default:e})=>e({locateFile:e=>G(`esri/libs/linkchartlayout/${e}`)}))).then((e=>{!function(e){Le=e}(e)})),be)}var we,Ce,Me,Ee,xe,De,Ie,Ne,Re,ve;function _e(e,t,a,i,n,s){const o=a.length,r=n.length,l=Float64Array.BYTES_PER_ELEMENT,h=Uint32Array.BYTES_PER_ELEMENT,p=Uint8Array.BYTES_PER_ELEMENT,d=15+o*(p+2*l)+r*(2*h),y=Le._malloc(d);try{const p=y+16-y%16,d=p+o*l,u=d+o*l,c=u+r*h,m=c+r*h,g=()=>[Le.HEAPF64.subarray(p>>3,(p>>3)+o),Le.HEAPF64.subarray(d>>3,(d>>3)+o),Le.HEAPU32.subarray(u>>2,(u>>2)+r),Le.HEAPU32.subarray(c>>2,(c>>2)+r),Le.HEAPU8.subarray(m,m+o)],[f,T,b,L,k]=g();f.set(a),T.set(i),b.set(n),L.set(s),k.set(t);let w=e(o,m,p,d,r,u,c),C=null;if(w){const e=Le.getLayoutLinksTypes(),t=Le.getLayoutLinksVerticesEndIndices(),a=Le.getLayoutLinksVertices(),i=Le.countLayoutLinksVertices();!r||e&&t?i&&!a?w=!1:C={types:new Uint8Array(Le.HEAPU8.subarray(e,e+r)),vertexEndIndex:new Uint32Array(Le.HEAPU32.subarray(t>>2,(t>>2)+r)),vertices:new Float64Array(Le.HEAPF64.subarray(a>>3,(a>>3)+2*i))}:w=!1}const[M,E,x,D,I]=g();return a.set(M),i.set(E),n.set(x),s.set(D),t.set(I),{success:w,links:C}}finally{Le._free(y),Le.cleanupLayout()}}!function(e){e[e.None=0]="None",e[e.IsMovable=1]="IsMovable",e[e.IsGeographic=2]="IsGeographic",e[e.IsRoot=4]="IsRoot"}(we||(we={})),function(e){e[e.Regular=0]="Regular",e[e.Orthogonal=1]="Orthogonal",e[e.Curved=2]="Curved",e[e.Recursive=3]="Recursive"}(Ce||(Ce={})),function(e){e.getMinIdealEdgeLength=function(){return Le.getMinIdealEdgeLength()},e.apply=function(e,t,a,i,n,s=2,o=1,r=-1){return _e(((e,t,a,i,n,l,h)=>Le.applyForceDirectedLayout(e,t,a,i,n,l,h,s,o,r)),e,t,a,i,n)}}(Me||(Me={})),function(e){e.apply=function(e,t,a,i,n,s=2,o=1,r=-1){return _e(((e,t,a,i,n,l,h)=>Le.applyCommunityLayout(e,t,a,i,n,l,h,s,o,r)),e,t,a,i,n)}}(Ee||(Ee={})),function(e){e.apply=function(e,t,a,i,n){return _e(Le.applySimpleLayout,e,t,a,i,n)}}(xe||(xe={})),function(e){e.apply=function(e,t,a,i,n){return _e(Le.applyHierarchicalLayout,e,t,a,i,n)}}(De||(De={})),function(e){e.apply=function(e,t,a,i,n){return _e(Le.applyRadialTreeLayout,e,t,a,i,n)}}(Ie||(Ie={})),function(e){e.apply=function(e,t,a,i,n){return _e(Le.applySmartTreeLayout,e,t,a,i,n)}}(Ne||(Ne={})),function(e){e[e.Undirected=0]="Undirected",e[e.Directed=1]="Directed",e[e.Reversed=2]="Reversed"}(Re||(Re={})),function(e){e[e.ByCC_Raw=0]="ByCC_Raw",e[e.ByCC_NormalizeGlobally=1]="ByCC_NormalizeGlobally",e[e.ByCC_NormalizeByCC=2]="ByCC_NormalizeByCC"}(ve||(ve={}));let Se=class extends(b(L(S))){constructor(e){if(super(e),this.dataPreloadedInLocalCache=!1,this.defaultLinkChartConfig=null,this._currentLinkChartConfig={layoutMode:"RADIAL_TREE"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new j,this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new c({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.linkChartGeohashLookup=new Map,this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.sublayerIdsCache=new Map,this.tables=new j,this.type="link-chart",this._originalInclusionList=e.inclusionModeDefinition,e.dataPreloadedInLocalCache&&!e.inclusionModeDefinition)throw new i("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it")}normalizeCtorArgs(e){return{url:e.url,title:e.title,dataPreloadedInLocalCache:e.dataPreloadedInLocalCache,defaultLinkChartConfig:e.defaultLinkChartConfig}}_initializeLayerProperties(e){if(!this.title&&this.url){const e=this.url.split("/");this.title=e[e.length-2]}const t=new Set;let a=[],n=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new i("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.inclusionModeDefinition?.generateAllSublayers?(a=e.knowledgeGraph.dataModel.entityTypes??[],n=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((i,s)=>{if(!this._graphTypeLookup.get(s))return l.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(s);this._graphTypeLookup.get(s)instanceof B||"strictOrigin"in this._graphTypeLookup.get(s)?t.has(s)||(t.add(s),n.push(this._graphTypeLookup.get(s))):this._graphTypeLookup.get(s)instanceof H||"properties"in this._graphTypeLookup.get(s)?t.has(s)||(t.add(s),a.push(this._graphTypeLookup.get(s))):(l.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(s))})):(a=e.knowledgeGraph.dataModel.entityTypes??[],n=e.knowledgeGraph.dataModel.relationshipTypes??[]);const s=new ce({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=a,this.memberRelationshipTypes=n,this.dataManager=s}load(e){return this.addResolvingPromise(new Promise((t=>{J(this.url).then((a=>{if(this._initializeLayerProperties({knowledgeGraph:a,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})})),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})}))),this.dataPreloadedInLocalCache)this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((e=>{e.useAllData=!1,e.members?.forEach((e=>{let t;t=e.linkChartLocation instanceof $?e.linkChartLocation:e.linkChartLocation?P(e.linkChartLocation):null,t&&2===t.coords.length&&0===t.lengths.length?(this.linkChartGeohashLookup.set(e.id,q(t.coords[1],t.coords[0],ue)),this.entityLinkChartDiagramLookup.set(e.id,t)):(this.linkChartGeohashLookup.set(e.id,""),this.relationshipLinkChartDiagramLookup.set(e.id,t))})),this.addResolvingPromise(this._initializeDiagram().then((async()=>{this.layers.forEach((async e=>{await e.refreshCachedQueryEngine()})),this.tables.forEach((async e=>{await e.refreshCachedQueryEngine()}))})))}));else{const t="GEOGRAPHIC"===this.defaultLinkChartConfig?.layoutMode;this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,t,!0).then((async()=>{F(e);const t=[],a=[];this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1,this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach((e=>{e.useAllData=!1}))),await this._initializeDiagram(),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine()),t.push(new Promise((t=>{e.on("layerview-create",(()=>{t(null)}))})))})),this.tables.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),await Promise.all(a)})))}t(null)}))}))),Promise.resolve(this)}async addRecords(e,t){let a=[];t?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(a=await re(e,this.dataManager.knowledgeGraph));const i=e.concat(a).filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));await this._handleNewRecords(i)}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:a=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1}){let i=[];for(const s of e)!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(s.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(s.typeName)?.members?.has(s.id)&&i.push(s);if(t){const e=new Set,t=[];for(const a of i)if(this.dataManager.nodeConnectionsLookup.has(a.id))for(const t of this.dataManager.nodeConnectionsLookup.get(a.id))e.add(t);for(const a of e)if(this.dataManager.memberIdTypeLookup.has(a))for(const e of this.dataManager.memberIdTypeLookup.get(a))this.dataManager.relationshipTypeNames.has(e)&&t.push({id:a,typeName:e});i=i.concat(t)}this.dataManager.removeFromLayer(i);for(const s of i)this.sublayerIdsCache.get(s.typeName)?.delete(s.id),this.dataManager.relationshipTypeNames.has(s.typeName)?this.relationshipLinkChartDiagramLookup.delete(s.id):this.entityLinkChartDiagramLookup.delete(s.id);a&&await this.calculateLinkChartLayout(this._currentLinkChartConfig.layoutMode,{});const n=[];return this.layers.forEach((e=>{n.push(e.refreshCachedQueryEngine())})),await Promise.all(n),this._refreshNamedTypes(),i}async expand(e,t){const a=await this.dataManager.getConnectedRecordIds(e,t),i=a.filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));return await this._handleNewRecords(a),{records:i}}loadLayerAssumingLocalCache(){this.memberRelationshipTypes.forEach((e=>{const t=new Te({objectType:e,parentCompositeLayer:this,graphType:"relationship",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.memberEntityTypes.forEach((e=>{const t=new Te({objectType:e,parentCompositeLayer:this,graphType:"entity",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{const a=((e,t,a)=>(e.has(t)||e.set(t,a()),e.get(t)))(this.sublayerIdsCache,t,(()=>new Set));e.members?.forEach((e=>{if(a.add(e.id),e.linkChartLocation)if(e.linkChartLocation instanceof $)this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e.id,e.linkChartLocation):this.entityLinkChartDiagramLookup.set(e.id,e.linkChartLocation),2===e.linkChartLocation.coords.length&&0===e.linkChartLocation.lengths.length?this.linkChartGeohashLookup.set(e.id,q(e.linkChartLocation.coords[1],e.linkChartLocation.coords[0],ue)):this.linkChartGeohashLookup.set(e.id,"");else{const a=P(e.linkChartLocation);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e.id,e.linkChartLocation?a:null):this.entityLinkChartDiagramLookup.set(e.id,e.linkChartLocation?a:null),"x"in e.linkChartLocation&&"y"in e.linkChartLocation?this.linkChartGeohashLookup.set(e.id,q(e.linkChartLocation.x,e.linkChartLocation.y,ue)):this.linkChartGeohashLookup.set(e.id,"")}}))}))}async calculateLinkChartLayout(e="RADIAL_TREE",t){const a=[],n=[],s=[];this.dataManager.sublayerCaches.forEach(((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach((e=>{a.push({typeName:t,feature:e})})):this.dataManager.relationshipTypeNames.has(t)&&e.forEach((e=>{n.push({typeName:t,feature:e})}))})),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const o=new Map,r=new Map,h=new Map,p=new Map,d=new Uint8Array(a.length),y=new Float64Array(a.length),u=new Float64Array(a.length),m=new Uint32Array(n.length),g=new Uint32Array(n.length),f=[],T=new c({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let b,L="FORCE_DIRECTED",k=0,w=0;switch(L="GEOGRAPHIC"===e?"FORCE_DIRECTED":e,L){case"FORCE_DIRECTED":b=Me.apply;break;case"COMMUNITY":b=Ee.apply;break;case"HIERARCHICAL":b=De.apply;break;case"RADIAL_TREE":b=Ie.apply;break;case"SMART_TREE":b=Ne.apply;break;default:b=xe.apply}a.forEach((({typeName:a,feature:i})=>{if(t?.lockedNodeLocations?.has(i.attributes[le])){"GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(a)?d[k]=we.IsGeographic:d[k]=we.None;const n=t.lockedNodeLocations.get(i.attributes[le]);y[k]=n.x,u[k]=n.y}else if("GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(a)){d[k]=we.IsGeographic;let e=null;const t=i.attributes[this.dataManager.geographicLookup.get(a).name],n=this.dataManager.geographicLookup.get(a)?.geometryType;switch(n){case"esriGeometryPoint":y[k]=t?.x,u[k]=t?.y;break;case"esriGeometryPolygon":e=t?.centroid,null!=e?.x&&null!=e?.y?(y[k]=e.x,u[k]=e.y):d[k]=we.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":e=t?.extent?.center,null!=e?.x&&null!=e?.y?(y[k]=e.x,u[k]=e.y):d[k]=we.IsMovable;break;default:d[k]=we.IsMovable}(null==y[k]||null==u[k]||Number.isNaN(y[k])||Number.isNaN(u[k]))&&(d[k]=we.IsMovable,y[k]=0,u[k]=0)}else d[k]=we.IsMovable,y[k]=0,u[k]=0;p.set(i.attributes[le],k),f[k]={feature:i,typeName:a},k++}));let C=!1;const M=new Map;n.forEach((e=>{const t=e.feature.attributes[he],a=e.feature.attributes[pe],i=p.get(t),n=p.get(a);if(void 0!==i&&void 0!==n){const o=t+"-"+a,r=M.get(o),l=r?.has(e.typeName);l||(m[w]=i,g[w]=n,void 0===r?M.set(o,new Map([[e.typeName,w]])):r.set(e.typeName,w),w++),s.push(e)}else C=!0,this.relationshipLinkChartDiagramLookup.set(t,null),this.linkChartGeohashLookup.set(t,null)})),C&&l.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null"),await ke();const{success:E,links:x}=b(d,y,u,m.subarray(0,w),g.subarray(0,w));if(!E)throw new i("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(let i=0;i<f.length;i++){if(u[i]>84.9999?u[i]=84.9999:u[i]<-84.9999&&(u[i]=-84.9999),y[i]>179.9999?y[i]=179.9999:y[i]<-179.9999&&(y[i]=-179.9999),f[i].feature.attributes[de]=new O(y[i],u[i]),o.has(f[i].typeName)){const e=o.get(f[i].typeName);e?.set(f[i].feature.attributes[le],f[i].feature)}else{const e=new Map;e.set(f[i].feature.attributes[le],f[i].feature),o.set(f[i].typeName,e)}h.set(f[i].feature.attributes[le],f[i].feature);const e=P(f[i].feature.attributes[de]);this.entityLinkChartDiagramLookup.set(f[i].feature.attributes[le],f[i].feature.attributes[de]?e:null),this.linkChartGeohashLookup.set(f[i].feature.attributes[le],q(f[i].feature.attributes[de].y,f[i].feature.attributes[de].x,ue)),f[i].feature.attributes[de].x<T.xmin&&(T.xmin=f[i].feature.attributes[de].x),f[i].feature.attributes[de].x>T.xmax&&(T.xmax=f[i].feature.attributes[de].x),f[i].feature.attributes[de].y<T.ymin&&(T.ymin=f[i].feature.attributes[de].y),f[i].feature.attributes[de].y>T.ymax&&(T.ymax=f[i].feature.attributes[de].y)}if(this.linkChartExtent.xmin=T.xmin,this.linkChartExtent.xmax=T.xmax,this.linkChartExtent.ymin=T.ymin,this.linkChartExtent.ymax=T.ymax,!x)throw new i("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const D=new Map,I=new Map,R=new Map,v=new Set;for(let i=0;i<s.length;i++){const e=[],t=s[i],a=t.feature.attributes[he],n=t.feature.attributes[pe],o=a+"-"+n,d=M.get(o).get(t.typeName),y=0===d?0:x?.vertexEndIndex[d-1];if(!v.has(d)){if(v.add(d),x.types[d]===Ce.Recursive){const t=[x.vertices[2*y],x.vertices[2*y+1]],a=[x.vertices[2*(y+1)],x.vertices[2*(y+1)+1]],i=[.5*(t[0]+a[0]),.5*(t[1]+a[1])],n=[i[0]-t[0],i[1]-t[1]],s=[i[0]+n[1],i[1]-n[0]],o=[i[0]-n[1],i[1]+n[0]];e.push(t),e.push(s),e.push(a),e.push(o),e.push(t)}else{if(x.types[d]!==Ce.Regular){l.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let t=y;t<x.vertexEndIndex[d];t++)e.push([x.vertices[2*t],x.vertices[2*t+1]])}const t=f[p.get(a)]?.feature.attributes[de],i=f[p.get(n)]?.feature.attributes[de];e[0][0]===t.x&&e[0][1]===t.y||(e[0]=[t.x,t.y]),e[e.length-1][0]===i.x&&e[e.length-1][1]===i.y||(e[e.length-1]=[i.x,i.y]);for(let a=1;a<e.length-1;a++)e[a][1]>85.5?e[a][1]=85.5:e[a][1]<-85.5&&(e[a][1]=-85.5),e[a][0]>179.9999?e[a][0]=179.9999:e[a][0]<-179.9999&&(e[a][0]=-179.9999);D.has(o)?D.get(o).push(e):D.set(o,[e])}const u=D.get(o);I.has(o)||(I.set(o,new Map),R.set(o,new Map));const c=I.get(o),m=R.get(o);c.has(t.typeName)||(c.set(t.typeName,u.shift()),m.set(t.typeName,0));const g=c.get(t.typeName);m.set(t.typeName,m.get(t.typeName)+1);const T=new N({paths:g});if(t.feature.attributes[de]=T,r.has(t.typeName)){const e=r.get(t.typeName);e?.set(t.feature.attributes[le],t.feature)}else{const e=new Map;e.set(t.feature.attributes[le],t.feature),r.set(t.typeName,e)}h.set(t.feature.attributes[le],t.feature);const b=P(t.feature.attributes[de]);this.relationshipLinkChartDiagramLookup.set(t.feature.attributes[le],t.feature.attributes[de]?b:null),this.linkChartGeohashLookup.set(t.feature.attributes[le],"")}for(const i of s)i.feature.attributes[ye]=R.get(i.feature.attributes[he]+"-"+i.feature.attributes[pe])?.get(i.typeName)??null;return this._currentLinkChartConfig={layoutMode:e},{nodes:o,links:r,idMap:h}}async applyNewLinkChartLayout(e="RADIAL_TREE",t){const a=[];await this.calculateLinkChartLayout(e,t),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),await Promise.all(a),this._refreshNamedTypes()}getCurrentNodeLocations(){const e=new Map;return this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((t=>{t?.members?.forEach((t=>{const a=t.linkChartLocation;let i;const n=t.id;a&&(i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]},e.set(n,new O({x:i.x,y:i.y})))}))})),e}async synchronizeInclusionListWithCache(){return new Promise((e=>{this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{if(e.useAllData=!1,e.members&&e.members.size>0){if(!this.dataManager.sublayerCaches.get(t))return;const a=new Set(Array.from(this.dataManager.sublayerCaches.get(t).keys()));Array.from(e.members.keys()).filter((e=>!a.has(e))).forEach((t=>{e.members?.delete(t)}))}})),e()}))}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t),this._refreshNamedTypes()}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const a of e)this.sublayerIdsCache.has(a.typeName)||(this.sublayerIdsCache.set(a.typeName,new Set),t.push(a.typeName)),this.sublayerIdsCache.get(a.typeName).add(a.id);for(const a of t)if(this._graphTypeLookup.has(a)){const e=this._graphTypeLookup.get(a),t="endPoints"in e?"relationship":"entity",i=new Te({objectType:e,parentCompositeLayer:this,graphType:t,title:a});"entity"===t?this.dataManager.entityTypeNames.add(a):this.dataManager.relationshipTypeNames.add(a),i.geometryType?this.layers.push(i):this.tables.push(i),this.dataManager.sublayerCaches.set(a,new Map)}await this.dataManager.refreshCacheContent(e.map((e=>e.id))),await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode)}async _initializeDiagram(){this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e?.members?.forEach((e=>{const a=e.linkChartLocation;let i;const n=e.id;if(!a)return;i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]};const s=P(i);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(n,s):this.entityLinkChartDiagramLookup.set(n,s),this.linkChartGeohashLookup.set(n,q(i.x,i.y,ue)),this.linkChartExtent.xmin>i.x&&(this.linkChartExtent.xmin=i.x),this.linkChartExtent.xmax<i.x&&(this.linkChartExtent.xmax=i.x),this.linkChartExtent.ymin>i.y&&(this.linkChartExtent.ymin=i.y),this.linkChartExtent.ymax<i.y&&(this.linkChartExtent.ymax=i.y)}))})),this.memberRelationshipTypes.forEach((e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach((e=>{const t=this.relationshipLinkChartDiagramLookup.get(e.attributes[he]),a=this.relationshipLinkChartDiagramLookup.get(e.attributes[pe]);if(t&&a){const i=P(new N({paths:[[t.coords[0],t.coords[1]],[a.coords[0],a.coords[1]]]}));this.relationshipLinkChartDiagramLookup.set(e.attributes[le],i)}else this.relationshipLinkChartDiagramLookup.set(e.attributes[le],null);this.linkChartGeohashLookup.set(e.attributes[le],"")}))}))):await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations()}):await this.calculateLinkChartLayout("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}};n([s()],Se.prototype,"dataPreloadedInLocalCache",void 0),n([s()],Se.prototype,"defaultLinkChartConfig",void 0),n([s()],Se.prototype,"dataManager",void 0),n([s()],Se.prototype,"knowledgeGraph",void 0),n([s()],Se.prototype,"layers",void 0),n([s()],Se.prototype,"entityLinkChartDiagramLookup",void 0),n([s()],Se.prototype,"relationshipLinkChartDiagramLookup",void 0),n([s()],Se.prototype,"linkChartExtent",void 0),n([s()],Se.prototype,"linkChartGeohashLookup",void 0),n([s()],Se.prototype,"memberEntityTypes",void 0),n([s()],Se.prototype,"memberRelationshipTypes",void 0),n([s()],Se.prototype,"sublayerIdsCache",void 0),n([s()],Se.prototype,"tables",void 0),n([s({json:{read:!1}})],Se.prototype,"type",void 0),Se=n([o("esri.layers.LinkChartLayer")],Se),e("default",Se)}}}));
