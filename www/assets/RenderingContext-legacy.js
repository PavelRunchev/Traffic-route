System.register(["./WGLContainer-legacy.js","./programUtils-legacy.js","./index-legacy.js","./Texture-legacy.js","./enums-legacy.js","./OrderIndependentTransparency-legacy.js","./Program-legacy.js","./testSVGPremultipliedAlpha-legacy.js","./floatRGBA-legacy.js","./doublePrecisionUtils-legacy.js","./ProgramTemplate-legacy.js","./VertexElementDescriptor-legacy.js"],(function(t,e){"use strict";var s,i,r,n,a,l,o,h,_,u,c,f,d,g,E,p,b,F,R,B,m,T,A,x,S,C,O,P,v,U,M,w,N,I,y,D,k,G,L,X,W,V,Y,q,z,j,H,K,$,Z,Q;return{setters:[t=>{s=t.c},t=>{i=t.n,r=t.e},t=>{n=t.ai,a=t.g6,l=t.cu,o=t.w,h=t.eE,_=t.S},t=>{u=t.e,c=t.m,f=t.c,d=t.u,g=t.o},t=>{E=t.R,p=t.T,b=t.N,F=t.S,R=t.O,B=t.I,m=t.V,T=t.F,A=t.A,x=t.E,S=t.C,C=t.D,O=t.L,P=t.G,v=t.U,U=t.P,M=t.f,w=t.X,N=t.Y,I=t._,y=t.n,D=t.r,k=t.i,G=t.M},t=>{L=t.o,X=t.S,W=t.s,V=t.G},t=>{Y=t.h,q=t.x},t=>{z=t.t,j=t.f,H=t.a},t=>{K=t.r},t=>{$=t.t},t=>{Z=t.o},t=>{Q=t.t}],execute:function(){const e=t=>{let e="";e+=t[0].toUpperCase();for(let s=1;s<t.length;s++){const i=t[s];i===i.toUpperCase()?(e+="_",e+=i):e+=i.toUpperCase()}return e};t("o",((t,r,n,a)=>{const l=t+t.substring(t.lastIndexOf("/")),o=r+r.substring(r.lastIndexOf("/")),h=(t=>{const s={};for(const i in t)s[e(i)]=t[i];return i(s)})(a);return{attributes:n,shaders:{vertexShader:h+s(`${l}.vert`),fragmentShader:h+s(`${o}.frag`)}}}));let J=class{constructor(){this.blend=!1,this.blendColor={r:0,g:0,b:0,a:0},this.blendFunction={srcRGB:E.ONE,dstRGB:E.ZERO,srcAlpha:E.ONE,dstAlpha:E.ZERO},this.blendEquation={mode:p.ADD,modeAlpha:p.ADD},this.colorMask={r:!0,g:!0,b:!0,a:!0},this.faceCulling=!1,this.cullFace=b.BACK,this.frontFace=F.CCW,this.scissorTest=!1,this.scissorRect={x:0,y:0,width:0,height:0},this.depthTest=!1,this.depthFunction=R.LESS,this.clearDepth=1,this.depthWrite=!0,this.depthRange={zNear:0,zFar:1},this.viewport=null,this.stencilTest=!1,this.polygonOffsetFill=!1,this.polygonOffset=[0,0],this.stencilFunction={face:b.FRONT_AND_BACK,func:R.ALWAYS,ref:0,mask:1},this.clearStencil=0,this.stencilWriteMask=1,this.stencilOperation={face:b.FRONT_AND_BACK,fail:B.KEEP,zFail:B.KEEP,zPass:B.KEEP},this.clearColor={r:0,g:0,b:0,a:0},this.program=null,this.vertexBuffer=null,this.indexBuffer=null,this.uniformBuffer=null,this.pixelPackBuffer=null,this.pixelUnpackBuffer=null,this.copyReadBuffer=null,this.copyWriteBuffer=null,this.transformFeedbackBuffer=null,this.uniformBufferBindingPoints=new Array,this.transformBufferBindingPoints=new Array,this.readFramebuffer=null,this.drawFramebuffer=null,this.renderbuffer=null,this.activeTexture=0,this.textureUnitMap=new Array,this.vertexArrayObject=null}},tt=class{constructor(){for(this._current=new Array,this._allocations=null;this._current.length<m.COUNT;)this._current.push(0)}increment(t,e,s=1){this._current[t]+=s,this._allocations?.add(e)}decrement(t,e,s=1){this._current[t]-=s,this._allocations?.remove(e)}get current(){return this._current}get total(){return this.current.reduce(((t,e,s)=>t+(s<m.UNCOUNTED?e:0)),0)}get resourceInformation(){let t="";if(this.total>0){t+="Live objects:\n";for(let e=0;e<m.COUNT;++e){const s=this._current[e];s>0&&(t+=`${m[e]}: ${s}\n`)}}return t+=this._allocations?.resetLog(),t}},et=class{constructor(t,e,s){const i=e.textureFilterAnisotropic,r=s.maxAnisotropy??1/0;this.versionString=t.getParameter(t.VERSION),this.maxVertexTextureImageUnits=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxVertexAttributes=t.getParameter(t.MAX_VERTEX_ATTRIBS),this.maxMaxAnisotropy=i?Math.min(t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY),r):1,this.maxTextureImageUnits=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE),this.maxRenderbufferSize=t.getParameter(t.MAX_RENDERBUFFER_SIZE),this.maxViewportDims=t.getParameter(t.MAX_VIEWPORT_DIMS),this.maxUniformBufferBindings=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS),this.maxVertexUniformBlocks=t.getParameter(t.MAX_VERTEX_UNIFORM_BLOCKS),this.maxFragmentUniformBlocks=t.getParameter(t.MAX_FRAGMENT_UNIFORM_BLOCKS),this.maxUniformBlockSize=t.getParameter(t.MAX_UNIFORM_BLOCK_SIZE),this.uniformBufferOffsetAlignment=t.getParameter(t.UNIFORM_BUFFER_OFFSET_ALIGNMENT),this.maxArrayTextureLayers=t.getParameter(t.MAX_ARRAY_TEXTURE_LAYERS),this.maxSamples=t.getParameter(t.MAX_SAMPLES)}};class st{constructor(t){this._rctx=t,this._indexBuffer=this._createIndexbuffer(),this._program=this._createHelperProgram()}static getShaderSources(){return{vertex:"#version 300 es\n    precision highp float;\n\n    void main(void) {\n      gl_Position = vec4(0.0, 0.0, float(gl_VertexID)-2.0, 1.0);\n    }",fragment:"#version 300 es\n    precision highp float;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }"}}_createHelperProgram(){const t=st.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}_createIndexbuffer(){return Y.createIndex(this._rctx,T.STATIC_DRAW,new Uint32Array([0]))}run(){this._program.compiled&&this._indexBuffer&&(this._rctx.bindVAO(null),this._rctx.useProgram(this._program),this._rctx.bindBuffer(this._indexBuffer,A.ELEMENT_ARRAY_BUFFER),this._rctx.drawElements(x.POINTS,1,S.UNSIGNED_INT,0))}dispose(){this._program.dispose(),this._indexBuffer.dispose()}get test(){return{cachedWebGLObjects:this._indexBuffer?.glName?1:0}}}class it extends z{constructor(t){super(),this._rctx=t,this._helperProgram=null,n("mac")&&n("chrome")&&(this._program=this._prepareProgram(),this._helperProgram=this._prepareHelperProgram())}dispose(){super.dispose(),this._helperProgram?.dispose(),this._helperProgram=null}_test(t){const e=this._rctx,s=e.getBoundFramebufferObject(),{x:i,y:r,width:n,height:a}=e.getViewport();e.resetState();const l=new u(1);l.wrapMode=C.CLAMP_TO_EDGE,l.samplingMode=O.NEAREST;const o=new q(e,l),h=Y.createIndex(this._rctx,T.STATIC_DRAW,new Uint8Array([0]));e.bindFramebuffer(o),e.setViewport(0,0,1,1),e.useProgram(this._helperProgram),e.bindBuffer(h,A.ELEMENT_ARRAY_BUFFER),e.drawElements(x.POINTS,1,S.UNSIGNED_BYTE,0),e.useProgram(t),e.bindVAO(null),e.drawArrays(x.TRIANGLES,0,258);const _=new Uint8Array(4);return o.readPixels(0,0,1,1,P.RGBA,v.UNSIGNED_BYTE,_),e.setViewport(i,r,n,a),e.bindFramebuffer(s),o.dispose(),h.dispose(),255===_[0]}_prepareProgram(){const t=`#version 300 es\n    precision highp float;\n\n    out float triangleId;\n\n    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));\n\n    void main(void) {\n      triangleId = floor(float(gl_VertexID)/3.0);\n\n      vec3 position = triangleVertices[gl_VertexID % 3];\n      float offset = triangleId / ${L.float(85)};\n      position.z = 0.5 - offset;\n\n      gl_Position = vec4(position, 1.0);\n    }\n    `,e=`#version 300 es\n    precision highp float;\n\n    in float triangleId;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = triangleId == ${L.float(85)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);\n    }\n    `;return this._rctx.programCache.acquire(t,e,new Map([]))}_prepareHelperProgram(){const t=st.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}}let rt=class extends z{constructor(t){super(),this._rctx=t,this._program=nt(this._rctx,!1),this._obfuscated=nt(this._rctx,!0)}dispose(){super.dispose(),this._obfuscated=a(this._obfuscated)}_test(t){if(n("force-double-precision-obfuscation"))return!0;if(null==this._obfuscated)return!1;const e=this._rctx,s=e.getBoundFramebufferObject(),{x:i,y:r,width:a,height:l}=e.getViewport(),o=this._runProgram(t),h=this._runProgram(this._obfuscated);return e.setViewport(i,r,a,l),e.bindFramebuffer(s),0!==o&&(0===h||o/h>5)}_runProgram(t){const e=this._rctx;e.resetState();const s=new u(1);s.wrapMode=C.CLAMP_TO_EDGE,s.samplingMode=O.NEAREST;const i=new q(e,s),r=Y.createVertex(e,T.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),n=new Z(e,new Map([["position",0]]),{geometry:[new Q("position",2,S.UNSIGNED_SHORT,0,4)]},{geometry:r}),a=l(5633261.287538229,2626832.878767164,1434988.0495278358),o=l(5633271.46742708,2626873.6381334523,1434963.231608387),h=new Float32Array(6);$(a,h,3);const _=new Float32Array(6);$(o,_,3),e.useProgram(t),t.setUniform3f("u_highA",h[0],h[2],h[4]),t.setUniform3f("u_lowA",h[1],h[3],h[5]),t.setUniform3f("u_highB",_[0],_[2],_[4]),t.setUniform3f("u_lowB",_[1],_[3],_[5]),e.bindFramebuffer(i),e.setViewport(0,0,1,1),e.bindVAO(n),e.drawArrays(x.TRIANGLE_STRIP,0,4);const c=new Uint8Array(4);i.readPixels(0,0,1,1,P.RGBA,v.UNSIGNED_BYTE,c),n.dispose(),i.dispose();const f=(a[2]-o[2])/25,d=K(c);return Math.abs(f-d)}};function nt(t,e){const s=`\n\n  precision highp float;\n\n  attribute vec2 position;\n\n  uniform vec3 u_highA;\n  uniform vec3 u_lowA;\n  uniform vec3 u_highB;\n  uniform vec3 u_lowB;\n\n  varying vec4 v_color;\n\n  ${e?"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION":""}\n\n  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION\n\n  vec3 dpPlusFrc(vec3 a, vec3 b) {\n    return mix(a, a + b, vec3(notEqual(b, vec3(0))));\n  }\n\n  vec3 dpMinusFrc(vec3 a, vec3 b) {\n    return mix(vec3(0), a - b, vec3(notEqual(a, b)));\n  }\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = dpPlusFrc(hiA, hiB);\n    vec3 e = dpMinusFrc(t1, hiA);\n    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;\n    return t1 + t2;\n  }\n\n  #else\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = hiA + hiB;\n    vec3 e = t1 - hiA;\n    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;\n    return t1 + t2;\n  }\n\n  #endif\n\n  const float MAX_RGBA_FLOAT =\n    255.0 / 256.0 +\n    255.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 / 256.0;\n\n  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);\n\n  vec4 float2rgba(const float value) {\n    // Make sure value is in the domain we can represent\n    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);\n\n    // Decompose value in 32bit fixed point parts represented as\n    // uint8 rgba components. Decomposition uses the fractional part after multiplying\n    // by a power of 256 (this removes the bits that are represented in the previous\n    // component) and then converts the fractional part to 8bits.\n    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);\n\n    // Convert uint8 values (from 0 to 255) to floating point representation for\n    // the shader\n    const float toU8AsFloat = 1.0 / 255.0;\n\n    return fixedPointU8 * toU8AsFloat;\n  }\n\n  void main() {\n    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);\n\n    v_color = float2rgba(val.z / 25.0);\n\n    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);\n  }\n  `;return t.programCache.acquire(s,"\n  precision highp float;\n\n  varying vec4 v_color;\n\n  void main() {\n    gl_FragColor = v_color;\n  }\n  ",new Map([["position",0]]))}let at=class extends z{constructor(t){super(),this._rctx=t,t.gl&&t.capabilities.colorBufferFloat?.textureFloat&&t.capabilities.colorBufferFloat?.floatBlend&&(this._program=t.programCache.acquire("\n    precision highp float;\n    attribute vec2 a_pos;\n\n    void main() {\n      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ","\n     precision highp float;\n\n     void main() {\n      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);\n     }\n    ",new Map([["a_pos",0]])))}_test(t){const e=this._rctx,s=new u(1);s.wrapMode=C.CLAMP_TO_EDGE,s.dataType=v.FLOAT,s.internalFormat=U.RGBA32F,s.samplingMode=O.NEAREST;const i=new q(e,s),r=Y.createVertex(e,T.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),n=new Z(e,new Map([["a_pos",0]]),{geometry:[new Q("a_pos",2,S.UNSIGNED_SHORT,0,4)]},{geometry:r});e.useProgram(t);const a=e.getBoundFramebufferObject(),{x:l,y:o,width:h,height:_}=e.getViewport();e.bindFramebuffer(i),e.setViewport(0,0,1,1),e.bindVAO(n),e.drawArrays(x.TRIANGLE_STRIP,0,4);const c=X({blending:W});e.setPipelineState(c),e.drawArrays(x.TRIANGLE_STRIP,0,4);const f=e.gl.getError();return e.setViewport(l,o,h,_),e.bindFramebuffer(a),n.dispose(),i.dispose(),1282!==f||(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1)}};class lt extends z{constructor(t){super(),this._rctx=t,this._program=t.programCache.acquire("\n      precision highp float;\n      attribute vec2 a_pos;\n      uniform highp sampler2D u_texture;\n      varying vec4 v_color;\n\n      float getBit(in float bitset, in int bitIndex) {\n        float offset = pow(2.0, float(bitIndex));\n        return mod(floor(bitset / offset), 2.0);\n      }\n\n      void main() {\n        vec4 value = texture2D(u_texture, vec2(0.0));\n        float bit = getBit(value.x * 255.0, 1);\n\n        v_color = bit * vec4(1.0);\n        gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n      }\n      ","\n      precision highp float;\n      varying vec4 v_color;\n\n      void main() {\n        gl_FragColor = v_color;\n      }\n      ",new Map([["a_pos",0]]))}_test(t){const e=this._rctx,s=new u(1);s.wrapMode=C.CLAMP_TO_EDGE,s.samplingMode=O.NEAREST;const i=new q(e,s),r=new Uint8Array(4),n=Y.createVertex(e,T.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),a=new Z(e,new Map([["a_position",0]]),{geometry:[new Q("a_position",2,S.SHORT,0,4)]},{geometry:n});e.useProgram(t);const l=new c(e,s,new Uint8Array([2,255,0,0]));t.setUniform1i("u_texture",0),e.bindTexture(l,0);const h=e.getBoundFramebufferObject();e.bindFramebuffer(i),e.useProgram(t);const{x:_,y:f,width:d,height:g}=e.getViewport();e.setViewport(0,0,1,1),e.bindVAO(a),e.drawArrays(x.TRIANGLE_STRIP,0,4),e.setViewport(_,f,d,g),i.readPixels(0,0,1,1,P.RGBA,v.UNSIGNED_BYTE,r),a.dispose(),i.dispose();const E=255!==r[0]||255!==r[1]||255!==r[2]||255!==r[3];return E&&o.getLogger("esri.views.webgl.testSamplerPrecision").warn(`A problem was detected with your graphics driver. Your driver does not appear to honor sampler precision specifiers, which may result in rendering issues due to numerical instability. We recommend ensuring that your drivers have been updated to the latest version. Applying lowp sampler workaround. [${r[0]}.${r[1]}.${r[2]}.${r[3]}]`),e.bindFramebuffer(h),E}}class ot{constructor(t){this.rctx=t,this.floatBufferBlend=new at(t),this.svgPremultipliesAlpha=new j(t),this.doublePrecisionRequiresObfuscation=new rt(t),this.ignoresSamplerPrecision=new lt(t),this.drawArraysRequiresIndicesTypeReset=new it(t)}dispose(){this.ignoresSamplerPrecision.dispose(),this.doublePrecisionRequiresObfuscation.dispose(),this.svgPremultipliesAlpha.dispose(),this.floatBufferBlend.dispose(),this.drawArraysRequiresIndicesTypeReset.dispose()}}function ht(t,e,s,i,r){if(i)return!0;if(e[s])return!1;for(const n of r)if(t.getExtension(n))return!0;return!1}class _t{constructor(t,e){this._gl=t,this._compressedTextureETC=null,this._compressedTextureS3TC=null,this._textureFilterAnisotropic=null,this._textureFloat=null,this._colorBufferFloat=null,this._loseContext=null,this._textureNorm16=null,this._depthTexture=null,this._textureFloatLinear=null,this._disabledExtensions=e.disabledExtensions||{},this._debugWebGLExtensions=e.debugWebGLExtensions||{}}get compressedTextureETC(){return this._compressedTextureETC||(this._compressedTextureETC=function(t,e){if(e.compressedTextureETC)return null;const s=t.getExtension("WEBGL_compressed_texture_etc");return s?{COMPRESSED_R11_EAC:s.COMPRESSED_R11_EAC,COMPRESSED_SIGNED_R11_EAC:s.COMPRESSED_SIGNED_R11_EAC,COMPRESSED_RG11_EAC:s.COMPRESSED_RG11_EAC,COMPRESSED_SIGNED_RG11_EAC:s.COMPRESSED_SIGNED_RG11_EAC,COMPRESSED_RGB8_ETC2:s.COMPRESSED_RGB8_ETC2,COMPRESSED_SRGB8_ETC2:s.COMPRESSED_SRGB8_ETC2,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:s.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:s.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_RGBA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC}:null}(this._gl,this._disabledExtensions)),this._compressedTextureETC}get compressedTextureS3TC(){return this._compressedTextureS3TC||(this._compressedTextureS3TC=function(t,e){if(e.compressedTextureS3TC)return null;const s=t.getExtension("WEBGL_compressed_texture_s3tc");return s?{COMPRESSED_RGB_S3TC_DXT1:s.COMPRESSED_RGB_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT1:s.COMPRESSED_RGBA_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT3:s.COMPRESSED_RGBA_S3TC_DXT3_EXT,COMPRESSED_RGBA_S3TC_DXT5:s.COMPRESSED_RGBA_S3TC_DXT5_EXT}:null}(this._gl,this._disabledExtensions)),this._compressedTextureS3TC}get textureFilterAnisotropic(){return this._textureFilterAnisotropic||(this._textureFilterAnisotropic=function(t,e){if(e.textureFilterAnisotropic)return null;const s=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");return s?{MAX_TEXTURE_MAX_ANISOTROPY:s.MAX_TEXTURE_MAX_ANISOTROPY_EXT,TEXTURE_MAX_ANISOTROPY:s.TEXTURE_MAX_ANISOTROPY_EXT}:null}(this._gl,this._disabledExtensions)),this._textureFilterAnisotropic}get disjointTimerQuery(){return this._disjointTimerQuery||(this._disjointTimerQuery=H(this._gl,this._disabledExtensions)),this._disjointTimerQuery}get textureFloat(){if(!this._textureFloat){const{textureFloatLinear:t}=this._disabledExtensions;this._textureFloat={textureFloatLinear:!t&&!!this._gl.getExtension("OES_texture_float_linear")}}return this._textureFloat}get colorBufferFloat(){return this._colorBufferFloat||(this._colorBufferFloat=function(t,e){const s=!e.colorBufferHalfFloat&&t.getExtension("EXT_color_buffer_half_float")||!e.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),i=!e.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),r=!e.floatBlend&&!e.colorBufferFloat&&t.getExtension("EXT_float_blend");return s||i||r?{textureFloat:!!i,textureHalfFloat:!!s,floatBlend:!!r,R16F:t.R16F,RG16F:t.RG16F,RGBA16F:t.RGBA16F,R32F:t.R32F,RG32F:t.RG32F,RGBA32F:t.RGBA32F,R11F_G11F_B10F:t.R11F_G11F_B10F,RGB16F:t.RGB16F}:null}(this._gl,this._disabledExtensions)),this._colorBufferFloat}get depthTexture(){return null===this._depthTexture&&(this._depthTexture=ht(this._gl,this._disabledExtensions,"depthTexture",!0,["WEBGL_depth_texture","MOZ_WEBGL_depth_texture","WEBKIT_WEBGL_depth_texture"])),this._depthTexture}get loseContext(){return this._loseContext||(this._loseContext=function(t,e){const s=e.loseContext&&t.getExtension("WEBGL_lose_context");return s?{loseRenderingContext:()=>s.loseContext()}:null}(this._gl,this._debugWebGLExtensions)),this._loseContext}get textureNorm16(){return this._textureNorm16||(this._textureNorm16=function(t,e){if(e.textureNorm16)return null;const s=t.getExtension("EXT_texture_norm16");return s?{R16:s.R16_EXT,RG16:s.RG16_EXT,RGB16:s.RGB16_EXT,RGBA16:s.RGBA16_EXT,R16_SNORM:s.R16_SNORM_EXT,RG16_SNORM:s.RG16_SNORM_EXT,RGB16_SNORM:s.RGB16_SNORM_EXT,RGBA16_SNORM:s.RGBA16_SNORM_EXT}:null}(this._gl,this._disabledExtensions)),this._textureNorm16}get textureFloatLinear(){return null===this._textureFloatLinear&&(this._textureFloatLinear=ht(this._gl,this._disabledExtensions,"textureFloatLinear",!1,["OES_texture_float_linear"])),this._textureFloatLinear}enable(t){return this[t]}}function ut(t,e,s,i){return e?i!==e&&t.bindBuffer(s,e.glName):t.bindBuffer(s,null),e}function ct(t,e){switch(t){case x.POINTS:return 2*e;case x.TRIANGLES:return e/3;case x.TRIANGLE_STRIP:case x.TRIANGLE_FAN:return e-2;default:return 0}}t("w",class{constructor(t,e){this.gl=t,this.instanceCounter=new tt,this.programCache=new r(this),this._transformFeedbackRequestInfo=null,this._state=new J,this._numOfDrawCalls=0,this._numOfTriangles=0,this._loadExtensions(),this.configure(e)}configure(t){this._capabilities=new _t(this.gl,t),this._parameters=new et(this.gl,this._capabilities,t),c.TEXTURE_UNIT_FOR_UPDATES=this._parameters.maxTextureImageUnits-1;const e=this.gl.getParameter(this.gl.VIEWPORT);this._state=new J,this._state.viewport={x:e[0],y:e[1],width:e[2],height:e[3]},this._stateTracker=new V({setBlending:t=>{if(t){this.setBlendingEnabled(!0),this.setBlendEquationSeparate(t.opRgb,t.opAlpha),this.setBlendFunctionSeparate(t.srcRgb,t.dstRgb,t.srcAlpha,t.dstAlpha);const e=t.color;this.setBlendColor(e.r,e.g,e.b,e.a)}else this.setBlendingEnabled(!1)},setCulling:t=>{t?(this.setFaceCullingEnabled(!0),this.setCullFace(t.face),this.setFrontFace(t.mode)):this.setFaceCullingEnabled(!1)},setPolygonOffset:t=>{t?(this.setPolygonOffsetFillEnabled(!0),this.setPolygonOffset(t.factor,t.units)):this.setPolygonOffsetFillEnabled(!1)},setDepthTest:t=>{t?(this.setDepthTestEnabled(!0),this.setDepthFunction(t.func)):this.setDepthTestEnabled(!1)},setStencilTest:t=>{if(t){this.setStencilTestEnabled(!0);const e=t.function;this.setStencilFunction(e.func,e.ref,e.mask);const s=t.operation;this.setStencilOp(s.fail,s.zFail,s.zPass)}else this.setStencilTestEnabled(!1)},setDepthWrite:t=>{t?(this.setDepthWriteEnabled(!0),this.setDepthRange(t.zNear,t.zFar)):this.setDepthWriteEnabled(!1)},setColorWrite:t=>{t?this.setColorMask(t.r,t.g,t.b,t.a):this.setColorMask(!1,!1,!1,!1)},setStencilWrite:t=>{t?this.setStencilWriteMask(t.mask):this.setStencilWriteMask(0)},setDrawBuffers:t=>{const{gl:e}=this;if(t)e.drawBuffers(t.buffers);else{const{drawFramebuffer:t}=this._state;null===t||0===t.colorAttachments.length?e.drawBuffers([M.BACK]):e.drawBuffers([w.COLOR_ATTACHMENT0])}}}),this.enforceState(),a(this._driverTest),this._driverTest=new ot(this)}dispose(){a(this._driverTest),this.programCache.dispose(),this.bindVAO(null),this.unbindBuffer(A.ARRAY_BUFFER),this.unbindBuffer(A.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(A.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(A.PIXEL_PACK_BUFFER),this.unbindBuffer(A.PIXEL_UNPACK_BUFFER),this.unbindBuffer(A.COPY_READ_BUFFER),this.unbindBuffer(A.COPY_WRITE_BUFFER),this._state.textureUnitMap.length=0,f()&&console.log(this.instanceCounter.resourceInformation)}get driverTest(){return this._driverTest}get contextAttributes(){return this.gl.getContextAttributes()}get parameters(){return this._parameters}setPipelineState(t){this._stateTracker.setPipeline(t)}setBlendingEnabled(t){this._state.blend!==t&&(!0===t?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND),this._state.blend=t,this._stateTracker.invalidateBlending())}externalProgramUpdate(){this._state.program?.stop(),this._state.program=null}externalTextureUnitUpdate(t,e){for(let s=0;s<t.length;++s)this._state.textureUnitMap[t[s]]=null;e>=0&&(this._state.activeTexture=e)}externalVertexArrayObjectUpdate(){this.gl.bindVertexArray(null),this._state.vertexArrayObject=null,this._state.vertexBuffer=null,this._state.indexBuffer=null}externalVertexBufferUpdate(){this._state.vertexBuffer=null}externalIndexBufferUpdate(){this._state.indexBuffer=null}setBlendColor(t,e,s,i){t===this._state.blendColor.r&&e===this._state.blendColor.g&&s===this._state.blendColor.b&&i===this._state.blendColor.a||(this.gl.blendColor(t,e,s,i),this._state.blendColor.r=t,this._state.blendColor.g=e,this._state.blendColor.b=s,this._state.blendColor.a=i,this._stateTracker.invalidateBlending())}setBlendFunction(t,e){t===this._state.blendFunction.srcRGB&&e===this._state.blendFunction.dstRGB||(this.gl.blendFunc(t,e),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=t,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=e,this._stateTracker.invalidateBlending())}setBlendFunctionSeparate(t,e,s,i){this._state.blendFunction.srcRGB===t&&this._state.blendFunction.srcAlpha===s&&this._state.blendFunction.dstRGB===e&&this._state.blendFunction.dstAlpha===i||(this.gl.blendFuncSeparate(t,e,s,i),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=s,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=i,this._stateTracker.invalidateBlending())}setBlendEquation(t){this._state.blendEquation.mode!==t&&(this.gl.blendEquation(t),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=t,this._stateTracker.invalidateBlending())}setBlendEquationSeparate(t,e){this._state.blendEquation.mode===t&&this._state.blendEquation.modeAlpha===e||(this.gl.blendEquationSeparate(t,e),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=e,this._stateTracker.invalidateBlending())}setColorMask(t,e,s,i){this._state.colorMask.r===t&&this._state.colorMask.g===e&&this._state.colorMask.b===s&&this._state.colorMask.a===i||(this.gl.colorMask(t,e,s,i),this._state.colorMask.r=t,this._state.colorMask.g=e,this._state.colorMask.b=s,this._state.colorMask.a=i,this._stateTracker.invalidateColorWrite())}setClearColor(t,e,s,i){this._state.clearColor.r===t&&this._state.clearColor.g===e&&this._state.clearColor.b===s&&this._state.clearColor.a===i||(this.gl.clearColor(t,e,s,i),this._state.clearColor.r=t,this._state.clearColor.g=e,this._state.clearColor.b=s,this._state.clearColor.a=i)}setFaceCullingEnabled(t){this._state.faceCulling!==t&&(!0===t?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this._state.faceCulling=t,this._stateTracker.invalidateCulling())}setPolygonOffsetFillEnabled(t){this._state.polygonOffsetFill!==t&&(!0===t?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL),this._state.polygonOffsetFill=t,this._stateTracker.invalidatePolygonOffset())}setPolygonOffset(t,e){this._state.polygonOffset[0]===t&&this._state.polygonOffset[1]===e||(this._state.polygonOffset[0]=t,this._state.polygonOffset[1]=e,this.gl.polygonOffset(t,e),this._stateTracker.invalidatePolygonOffset())}setCullFace(t){this._state.cullFace!==t&&(this.gl.cullFace(t),this._state.cullFace=t,this._stateTracker.invalidateCulling())}setFrontFace(t){this._state.frontFace!==t&&(this.gl.frontFace(t),this._state.frontFace=t,this._stateTracker.invalidateCulling())}setScissorTestEnabled(t){this._state.scissorTest!==t&&(!0===t?this.gl.enable(this.gl.SCISSOR_TEST):this.gl.disable(this.gl.SCISSOR_TEST),this._state.scissorTest=t)}setScissorRect(t,e,s,i){this._state.scissorRect.x===t&&this._state.scissorRect.y===e&&this._state.scissorRect.width===s&&this._state.scissorRect.height===i||(this.gl.scissor(t,e,s,i),this._state.scissorRect.x=t,this._state.scissorRect.y=e,this._state.scissorRect.width=s,this._state.scissorRect.height=i)}setDepthTestEnabled(t){this._state.depthTest!==t&&(!0===t?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST),this._state.depthTest=t,this._stateTracker.invalidateDepthTest())}setClearDepth(t){this._state.clearDepth!==t&&(this.gl.clearDepth(t),this._state.clearDepth=t)}setDepthFunction(t){this._state.depthFunction!==t&&(this.gl.depthFunc(t),this._state.depthFunction=t,this._stateTracker.invalidateDepthTest())}setDepthWriteEnabled(t){this._state.depthWrite!==t&&(this.gl.depthMask(t),this._state.depthWrite=t,this._stateTracker.invalidateDepthWrite())}setDepthRange(t,e){this._state.depthRange.zNear===t&&this._state.depthRange.zFar===e||(this.gl.depthRange(t,e),this._state.depthRange.zNear=t,this._state.depthRange.zFar=e,this._stateTracker.invalidateDepthWrite())}setStencilTestEnabled(t){this._state.stencilTest!==t&&(!0===t?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST),this._state.stencilTest=t,this._stateTracker.invalidateStencilTest())}setClearStencil(t){t!==this._state.clearStencil&&(this.gl.clearStencil(t),this._state.clearStencil=t)}setStencilFunction(t,e,s){this._state.stencilFunction.func===t&&this._state.stencilFunction.ref===e&&this._state.stencilFunction.mask===s||(this.gl.stencilFunc(t,e,s),this._state.stencilFunction.face=b.FRONT_AND_BACK,this._state.stencilFunction.func=t,this._state.stencilFunction.ref=e,this._state.stencilFunction.mask=s,this._stateTracker.invalidateStencilTest())}setStencilFunctionSeparate(t,e,s,i){this._state.stencilFunction.face===t&&this._state.stencilFunction.func===e&&this._state.stencilFunction.ref===s&&this._state.stencilFunction.mask===i||(this.gl.stencilFuncSeparate(t,e,s,i),this._state.stencilFunction.face=t,this._state.stencilFunction.func=e,this._state.stencilFunction.ref=s,this._state.stencilFunction.mask=i,this._stateTracker.invalidateStencilTest())}setStencilWriteMask(t){this._state.stencilWriteMask!==t&&(this.gl.stencilMask(t),this._state.stencilWriteMask=t,this._stateTracker.invalidateStencilWrite())}setStencilOp(t,e,s){this._state.stencilOperation.face===b.FRONT_AND_BACK&&this._state.stencilOperation.fail===t&&this._state.stencilOperation.zFail===e&&this._state.stencilOperation.zPass===s||(this.gl.stencilOp(t,e,s),this._state.stencilOperation.face=b.FRONT_AND_BACK,this._state.stencilOperation.fail=t,this._state.stencilOperation.zFail=e,this._state.stencilOperation.zPass=s,this._stateTracker.invalidateStencilTest())}setStencilOpSeparate(t,e,s,i){this._state.stencilOperation.face===t&&this._state.stencilOperation.fail===e&&this._state.stencilOperation.zFail===s&&this._state.stencilOperation.zPass===i||(this.gl.stencilOpSeparate(t,e,s,i),this._state.stencilOperation.face=t,this._state.stencilOperation.fail=e,this._state.stencilOperation.zFail=s,this._state.stencilOperation.zPass=i,this._stateTracker.invalidateStencilTest())}setActiveTexture(t,e=!1){const s=this._state.activeTexture;return t>=0&&(e||t!==this._state.activeTexture)&&(this.gl.activeTexture(N+t),this._state.activeTexture=t),s}clear(t){t&&this.gl.clear(t)}clearSafe(t,e=255){t&&(t&I.COLOR_BUFFER_BIT&&this.setColorMask(!0,!0,!0,!0),t&I.DEPTH_BUFFER_BIT&&this.setDepthWriteEnabled(!0),t&I.STENCIL_BUFFER_BIT&&this.setStencilWriteMask(e),this.gl.clear(t))}clearFramebuffer(t,e=!1,s=!1){let i=0;if(t){const e=1e-13,s=Math.max(e,t[3]);this.setClearColor(t[0],t[1],t[2],s),i|=I.COLOR_BUFFER_BIT}e&&(i|=I.DEPTH_BUFFER_BIT),!1===s?s=0:(!0===s&&(s=255),i|=I.STENCIL_BUFFER_BIT),i&&this.clearSafe(i,s)}drawArrays(t,e,s){if(this._transformFeedbackRequestInfo){if(t!==this._transformFeedbackRequestInfo.primitiveType)throw new Error("DrawArrays called during transform feedback, but primitiveType does not match that of the current transform feedback request");if(null==this._state.program?.hasTransformFeedbackVaryings)throw new Error("DrawArrays called during transform feedback, but the shader program was not linked with a transform feedback varying")}if(f()){this._numOfDrawCalls++,this._numOfTriangles+=ct(t,s);const e=this._state.textureUnitMap;for(let t=0;t<e.length;t++){const s=e[t];if(null!=s&&s===this._state.drawFramebuffer?.colorTexture)throw new Error(`Detected readWrite. Texture already bound at index ${t}`)}}this.gl.drawArrays(t,e,s),d(this.gl)}drawArraysInstanced(t,e,s,i){this.gl.drawArraysInstanced(t,e,s,i),d(this.gl)}drawElements(t,e,s,i){if(this._transformFeedbackRequestInfo)throw new Error("Cannot called drawElements during a transform feedback request");if(f()&&(this._numOfDrawCalls++,this._numOfTriangles+=ct(t,e)),this.gl.drawElements(t,e,s,i),f()){const r=g(this);if(r){const n=this.getBoundVAO(),a=n?.indexBuffer,l=n?.vertexBuffers,o={indexBuffer:a,vertexBuffers:l},h={mode:t,count:e,type:s,offset:i},_=a?.size??0,u=i+e,c=_<u?`. Buffer is too small. Attempted to draw index ${u} of ${_}`:"";console.error(`drawElements: ${r}${c}`,{args:h,vao:o})}}}logInfo(){f()&&console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`)}resetInfo(){f()&&(this._numOfDrawCalls=0,this._numOfTriangles=0)}get capabilities(){return this._capabilities}setViewport(t,e,s,i){s=Math.max(Math.round(s),1),i=Math.max(Math.round(i),1);const r=this._state.viewport;r.x===t&&r.y===e&&r.width===s&&r.height===i||(r.x=t,r.y=e,r.width=s,r.height=i,this.gl.viewport(t,e,s,i))}setViewport4fv(t){this.setViewport(t[0],t[1],t[2],t[3])}restoreViewport({x:t,y:e,width:s,height:i}){this.setViewport(t,e,s,i)}getViewport(){const t=this._state.viewport;return{x:t.x,y:t.y,width:t.width,height:t.height}}useProgram(t){this._state.program!==t&&(this._state.program?.stop(),this._state.program=t,this.gl.useProgram(t?.glName??null))}bindTexture(t,e,s=!1){(e>=this.parameters.maxTextureImageUnits||e<0)&&console.error("Input texture unit is out of range of available units!");const i=this._state.textureUnitMap[e];return null==t?.glName?(null!=i&&(this.setActiveTexture(e,s),this.gl.bindTexture(i.descriptor.target,null)),this._state.textureUnitMap[e]=null,i):s||i!==t?(this.setActiveTexture(e,s),this.gl.bindTexture(t.descriptor.target,t.glName),t.applyChanges(),this._state.textureUnitMap[e]=t,i):(t.isDirty&&(this.setActiveTexture(e,s),t.applyChanges()),i)}unbindTexture(t){if(null!=t)for(let e=0;e<this.parameters.maxTextureImageUnits;e++)this._state.textureUnitMap[e]===t&&(this.bindTexture(null,e),this._state.textureUnitMap[e]=null)}bindFramebuffer(t,e=!1){if(e||this._state.readFramebuffer!==t||this._state.drawFramebuffer!==t){if(this._stateTracker.invalidateDrawBuffers(),null==t)return this.gl.bindFramebuffer(y.FRAMEBUFFER,null),void(this._state.readFramebuffer=this._state.drawFramebuffer=null);t.initializeAndBind(y.FRAMEBUFFER),this._state.readFramebuffer=t,this._state.drawFramebuffer=t}}bindFramebufferSeparate(t,e,s=!1){const i=e===y.READ_FRAMEBUFFER,r=i?this._state.readFramebuffer:this._state.drawFramebuffer;(s||r!==t)&&(null==t?this.gl.bindFramebuffer(e,null):t.initializeAndBind(e),i?this._state.readFramebuffer=t??null:this._state.drawFramebuffer=t??null)}blitFramebuffer(t,e,s=0,i=0,r=t.width,n=t.height,a=0,l=0,o=e.width,h=e.height,_=I.COLOR_BUFFER_BIT,u=O.NEAREST){this.bindFramebufferSeparate(t,y.READ_FRAMEBUFFER),this.bindFramebufferSeparate(e,y.DRAW_FRAMEBUFFER),this.gl.blitFramebuffer(s,i,r,n,a,l,o,h,_,u)}bindBuffer(t,e){if(t)switch(e??=t.bufferType,e){case A.ARRAY_BUFFER:this._state.vertexBuffer=ut(this.gl,t,e,this._state.vertexBuffer);break;case A.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=ut(this.gl,t,e,this._state.indexBuffer);break;case A.UNIFORM_BUFFER:this._state.uniformBuffer=ut(this.gl,t,e,this._state.uniformBuffer);break;case A.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=ut(this.gl,t,e,this._state.pixelPackBuffer);break;case A.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=ut(this.gl,t,e,this._state.pixelUnpackBuffer);break;case A.COPY_READ_BUFFER:this._state.copyReadBuffer=ut(this.gl,t,e,this._state.copyReadBuffer);break;case A.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=ut(this.gl,t,e,this._state.copyWriteBuffer);break;case A.TRANSFORM_FEEDBACK_BUFFER:this._state.transformFeedbackBuffer=ut(this.gl,t,e,this._state.transformFeedbackBuffer)}}bindRenderbuffer(t){const e=this.gl;t||(e.bindRenderbuffer(e.RENDERBUFFER,null),this._state.renderbuffer=null),this._state.renderbuffer!==t&&(e.bindRenderbuffer(e.RENDERBUFFER,t.glName),this._state.renderbuffer=t)}_getBufferBinding(t,e){if(e>=this.parameters.maxUniformBufferBindings||e<0)return console.error("Uniform buffer binding point is out of range!"),null;const s=t===A.UNIFORM_BUFFER?this._state.uniformBufferBindingPoints:this._state.transformBufferBindingPoints;let i=s[e];return null==i&&(i={buffer:null,offset:0,size:0},s[e]=i),i}bindBufferBase(t,e,s){const i=this._getBufferBinding(t,e);null!=i&&(i.buffer===s&&0===i.offset&&0===i.size||(this.gl.bindBufferBase(t,e,s?s.glName:null),i.buffer=s,i.offset=0,i.size=0))}bindBufferRange(t,e,s,i,r){const n=this._getBufferBinding(t,e);null!=n&&(n.buffer===s&&n.offset===i&&n.size===r||(i%this._parameters.uniformBufferOffsetAlignment==0?(this.gl.bindBufferRange(t,e,s.glName,i,r),n.buffer=s,n.offset=i,n.size=r):console.error("Uniform buffer binding offset is not a multiple of the context offset alignment")))}bindUBO(t,e,s,i){null!=e?(f()&&(i??e.byteLength)>this._parameters.maxUniformBlockSize&&console.error("Attempting to bind more data than the maximum uniform block size"),e.initialize(),void 0!==s&&void 0!==i?this.bindBufferRange(A.UNIFORM_BUFFER,t,e.buffer,s,i):this.bindBufferBase(A.UNIFORM_BUFFER,t,e.buffer)):this.bindBufferBase(A.UNIFORM_BUFFER,t,null)}unbindUBO(t){for(let e=0,s=this._state.uniformBufferBindingPoints.length;e<s;e++){const s=this._state.uniformBufferBindingPoints[e];null!=s&&s.buffer===t.buffer&&this.bindBufferBase(A.UNIFORM_BUFFER,e,null)}}unbindBuffer(t){switch(t){case A.ARRAY_BUFFER:this._state.vertexBuffer=ut(this.gl,null,t,this._state.vertexBuffer);break;case A.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=ut(this.gl,null,t,this._state.indexBuffer);break;case A.UNIFORM_BUFFER:this._state.uniformBuffer=ut(this.gl,null,t,this._state.uniformBuffer);break;case A.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=ut(this.gl,null,t,this._state.pixelPackBuffer);break;case A.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=ut(this.gl,null,t,this._state.pixelUnpackBuffer);break;case A.COPY_READ_BUFFER:this._state.copyReadBuffer=ut(this.gl,null,t,this._state.copyReadBuffer);break;case A.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=ut(this.gl,null,t,this._state.copyWriteBuffer)}}bindVAO(t=null){null!=t?this._state.vertexArrayObject!==t&&(t.bind(),this._state.vertexArrayObject=t):this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null)}bindTransformFeedback(t){const{gl:e}=this;e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,t.glName)}beginTransformFeedback(t,e){if(this._transformFeedbackRequestInfo)throw new Error("Already in a transform feedback request");const{gl:s}=this;s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,t.glName),s.beginTransformFeedback(e),this._transformFeedbackRequestInfo={primitiveType:e}}endTransformFeedback(){if(!this._transformFeedbackRequestInfo)throw new Error("Not in a transform feedback request");const{gl:t}=this;t.endTransformFeedback(),t.bindTransformFeedback(t.TRANSFORM_FEEDBACK,null),this._transformFeedbackRequestInfo=null}async clientWaitAsync(t=_(10)){const{gl:e}=this,s=e.fenceSync(D.SYNC_GPU_COMMANDS_COMPLETE,0);if(!s)throw new Error("Client wait failed, could not create sync object");let i;this.instanceCounter.increment(m.Sync,s),e.flush();do{await h(t),i=e.clientWaitSync(s,0,0)}while(i===k.TIMEOUT_EXPIRED);if(this.instanceCounter.decrement(m.Sync,s),e.deleteSync(s),i===k.WAIT_FAILED)throw new Error("Client wait failed")}getBoundFramebufferObject(t=y.FRAMEBUFFER){return t===y.READ_FRAMEBUFFER?this._state.readFramebuffer:this._state.drawFramebuffer}getBoundVAO(){return this._state.vertexArrayObject}resetState(){this.useProgram(null),this.bindVAO(null),this.bindFramebuffer(null,!0),this.unbindBuffer(A.ARRAY_BUFFER),this.unbindBuffer(A.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(A.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(A.PIXEL_PACK_BUFFER),this.unbindBuffer(A.PIXEL_UNPACK_BUFFER),this.unbindBuffer(A.COPY_READ_BUFFER),this.unbindBuffer(A.COPY_WRITE_BUFFER);for(let t=0;t<this.parameters.maxTextureImageUnits;++t)this.bindTexture(null,t);this.setBlendingEnabled(!1),this.setBlendFunction(E.ONE,E.ZERO),this.setBlendEquation(p.ADD),this.setBlendColor(0,0,0,0),this.setFaceCullingEnabled(!1),this.setCullFace(b.BACK),this.setFrontFace(F.CCW),this.setPolygonOffsetFillEnabled(!1),this.setPolygonOffset(0,0),this.setScissorTestEnabled(!1),this.setScissorRect(0,0,this.gl.canvas.width,this.gl.canvas.height),this.setDepthTestEnabled(!1),this.setDepthFunction(R.LESS),this.setDepthRange(0,1),this.setStencilTestEnabled(!1),this.setStencilFunction(R.ALWAYS,0,0),this.setStencilOp(B.KEEP,B.KEEP,B.KEEP),this.setClearColor(0,0,0,0),this.setClearDepth(1),this.setClearStencil(0),this.setColorMask(!0,!0,!0,!0),this.setStencilWriteMask(4294967295),this.setDepthWriteEnabled(!0),this.setViewport(0,0,this.gl.canvas.width,this.gl.canvas.height)}enforceState(){const{gl:t}=this;t.bindVertexArray(null);for(let s=0;s<this.parameters.maxVertexAttributes;s++)t.disableVertexAttribArray(s);this._state.vertexBuffer?t.bindBuffer(this._state.vertexBuffer.bufferType,this._state.vertexBuffer.glName):t.bindBuffer(A.ARRAY_BUFFER,null),this._state.indexBuffer?t.bindBuffer(this._state.indexBuffer.bufferType,this._state.indexBuffer.glName):t.bindBuffer(A.ELEMENT_ARRAY_BUFFER,null),this._state.uniformBuffer?t.bindBuffer(this._state.uniformBuffer.bufferType,this._state.uniformBuffer.glName):t.bindBuffer(A.UNIFORM_BUFFER,null);for(let s=0;s<this._parameters.maxUniformBufferBindings;s++){const e=this._state.uniformBufferBindingPoints[s];if(null!=e){const{buffer:i,offset:r,size:n}=e;null!==i?0===r&&0===n?t.bindBufferBase(A.UNIFORM_BUFFER,s,i.glName):t.bindBufferRange(A.UNIFORM_BUFFER,s,i.glName,r,n):t.bindBufferBase(A.UNIFORM_BUFFER,s,null)}}if(this._state.pixelPackBuffer?t.bindBuffer(this._state.pixelPackBuffer.bufferType,this._state.pixelPackBuffer.glName):t.bindBuffer(A.PIXEL_PACK_BUFFER,null),this._state.pixelUnpackBuffer?t.bindBuffer(this._state.pixelUnpackBuffer.bufferType,this._state.pixelUnpackBuffer.glName):t.bindBuffer(A.PIXEL_UNPACK_BUFFER,null),this._state.copyReadBuffer?t.bindBuffer(this._state.copyReadBuffer.bufferType,this._state.copyReadBuffer.glName):t.bindBuffer(A.COPY_READ_BUFFER,null),this._state.copyWriteBuffer?t.bindBuffer(this._state.copyWriteBuffer.bufferType,this._state.copyWriteBuffer.glName):t.bindBuffer(A.COPY_WRITE_BUFFER,null),t.bindFramebuffer(y.READ_FRAMEBUFFER,null),t.readBuffer(t.BACK),this._state.readFramebuffer&&(t.bindFramebuffer(y.READ_FRAMEBUFFER,this._state.readFramebuffer.glName),t.readBuffer(w.COLOR_ATTACHMENT0)),t.bindFramebuffer(y.DRAW_FRAMEBUFFER,this._state.drawFramebuffer?.glName??null),this._state.vertexArrayObject){const t=this._state.vertexArrayObject;this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null),this.bindVAO(t)}t.useProgram(this._state.program?.glName??null),t.blendColor(this._state.blendColor.r,this._state.blendColor.g,this._state.blendColor.b,this._state.blendColor.a),t.bindRenderbuffer(t.RENDERBUFFER,this._state.renderbuffer?.glName??null),!0===this._state.blend?t.enable(this.gl.BLEND):t.disable(this.gl.BLEND),t.blendEquationSeparate(this._state.blendEquation.mode,this._state.blendEquation.modeAlpha),t.blendFuncSeparate(this._state.blendFunction.srcRGB,this._state.blendFunction.dstRGB,this._state.blendFunction.srcAlpha,this._state.blendFunction.dstAlpha),t.clearColor(this._state.clearColor.r,this._state.clearColor.g,this._state.clearColor.b,this._state.clearColor.a),t.clearDepth(this._state.clearDepth),t.clearStencil(this._state.clearStencil),t.colorMask(this._state.colorMask.r,this._state.colorMask.g,this._state.colorMask.b,this._state.colorMask.a),t.cullFace(this._state.cullFace),t.depthFunc(this._state.depthFunction),t.depthRange(this._state.depthRange.zNear,this._state.depthRange.zFar),!0===this._state.depthTest?t.enable(t.DEPTH_TEST):t.disable(t.DEPTH_TEST),t.depthMask(this._state.depthWrite),t.frontFace(this._state.frontFace),t.lineWidth(1),!0===this._state.faceCulling?t.enable(t.CULL_FACE):t.disable(t.CULL_FACE),t.polygonOffset(this._state.polygonOffset[0],this._state.polygonOffset[1]),!0===this._state.polygonOffsetFill?t.enable(t.POLYGON_OFFSET_FILL):t.disable(t.POLYGON_OFFSET_FILL),t.scissor(this._state.scissorRect.x,this._state.scissorRect.y,this._state.scissorRect.width,this._state.scissorRect.height),!0===this._state.scissorTest?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST),t.stencilFunc(this._state.stencilFunction.func,this._state.stencilFunction.ref,this._state.stencilFunction.mask),t.stencilOpSeparate(this._state.stencilOperation.face,this._state.stencilOperation.fail,this._state.stencilOperation.zFail,this._state.stencilOperation.zPass),!0===this._state.stencilTest?t.enable(t.STENCIL_TEST):t.disable(t.STENCIL_TEST),t.stencilMask(this._state.stencilWriteMask);for(let s=0;s<this.parameters.maxTextureImageUnits;s++){t.activeTexture(N+s),t.bindTexture(G.TEXTURE_2D,null),t.bindTexture(G.TEXTURE_CUBE_MAP,null),t.bindTexture(G.TEXTURE_3D,null),t.bindTexture(G.TEXTURE_2D_ARRAY,null);const e=this._state.textureUnitMap[s];null!=e&&t.bindTexture(e.descriptor.target,e.glName)}t.activeTexture(N+this._state.activeTexture);const e=this._state.viewport;t.viewport(e.x,e.y,e.width,e.height),this.resetInfo()}_loadExtensions(){this.gl.getExtension("KHR_parallel_shader_compile")}})}}}));
