System.register(["./index-legacy.js"],(function(t,e){"use strict";var n,i,l,s,r,o,a,h,c,u,f,p,d,m,g;return{setters:[t=>{n=t.x,i=t.y,l=t.d_,s=t.z,r=t.bX,o=t.s,a=t.ax,h=t.w,c=t.c5,u=t.ai,f=t.at,p=t.aa,d=t.aQ,m=t.iq,g=t.gI}],execute:function(){t({A:function(t){const{srcPixelType:e,inputRanges:n,outputValues:i,allowUnmatched:l,noDataRanges:s,isLastInputRangeInclusive:r,outputPixelType:o}=t;if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const a=e.includes("16")?65536:256,h=e.includes("s")?-a/2:0,c=b.createEmptyBand(o,a),u=new Uint8Array(a);l&&u.fill(255);const[f,p]=k(o);if(n?.length&&i?.length){const t=1e-6,e=n.map((e=>e-t));e[0]=n[0],r&&(e[e.length-1]=n[n.length-1]);for(let n=0;n<e.length;n++){const t=i[n]>p?p:i[n]<f?f:i[n],l=Math.ceil(e[2*n]-h),s=Math.floor(e[2*n+1]-h);for(let e=l;e<=s;e++)c[e]=t,u[e]=255}}if(s?.length)for(let d=0;d<s.length;d++){const t=Math.ceil(s[2*d]-h),e=Math.floor(s[2*d+1]-h);for(let n=t;n<=e;n++)u[n]=0}return{lut:c,offset:h,mask:u}},B:T,C:function(t,e){if(!P(t))return null;const{width:n,height:i}=t,{inputRanges:l,outputValues:s,outputPixelType:r,noDataRanges:o,allowUnmatched:a,isLastInputRangeInclusive:h}=e,c=t.pixels[0],u=b.createEmptyBand(r,c.length),f=t.mask,p=new Uint8Array(n*i);f?p.set(f):p.fill(255);const d=t.pixelType.startsWith("f")?1e-6:0,m=l.map((t=>t-d));m[0]=l[0],m[m.length-1]=l[l.length-1]+(h?1e-6:0);const g=l.length/2,[x,w]=k(r);for(let k=0;k<i;k++)for(let t=0;t<n;t++){const e=k*n+t;if(p[e]){const t=c[e];let n=!1;for(let i=g-1;i>=0;i--)if(t===m[2*i]||t>m[2*i]&&t<m[2*i+1]){u[e]=s[i],n=!0;break}n||(a?u[e]=t>w?w:t<x?x:t:p[e]=0)}}const y=o?.length;if(y)for(let k=0;k<i;k++)for(let t=0;t<n;t++){const e=k*n+t;if(!f||f[e]){const t=c[e];for(let n=0;n<y;n+=2)if(t>=o[n]&&t<=o[n+1]){u[e]=0,p[e]=0;break}}}return new b({width:n,height:i,pixelType:r,pixels:[u],mask:p})},D:function(t,e,n,i,l="nearest"){if(!P(t))return null;"majority"===l&&(t=V(t));const{pixels:s,mask:r,bandMasks:o,pixelType:a}=t,h=t.width,c=t.height,u=b.getPixelArrayConstructor(a),f=s.length,{width:p,height:d}=e;let m=!1;for(let b=0;b<n.length;b+=3)-1===n[b]&&-1===n[b+1]&&-1===n[b+2]&&(m=!0);const{offsets_x:g,offsets_y:x,offsets_xi:w,offsets_yi:y,gridWidth:k}=E({width:h,height:c},e,n,i,"majority"===l?.5:0);let M;const A=(t,e,n,i)=>{const l=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let s=0;s<d;s++){M=s*k;for(let r=0;r<p;r++){if(g[M]<0||x[M]<0)t[s*p+r]=0;else if(i)t[s*p+r]=e[w[M]+y[M]*h];else{const i=Math.floor(g[M]),o=Math.floor(x[M]),a=Math.ceil(g[M]),c=Math.ceil(x[M]),u=g[M]-i,f=x[M]-o;if(!n||n[i+o*h]&&n[a+o*h]&&n[i+c*h]&&n[a+c*h]){const n=(1-u)*e[i+o*h]+u*e[a+o*h],d=(1-u)*e[i+c*h]+u*e[a+c*h];t[s*p+r]=(1-f)*n+f*d+l}else t[s*p+r]=e[w[M]+y[M]*h]}M++}}},v=[];let U;const T=o?.length===f,I=[];for(let b=0;b<f;b++){if(T){const t=new Uint8Array(p*d);A(t,o[b],o[b],!0),I.push(t)}U=new u(p*d),A(U,s[b],T?o[b]:r,"nearest"===l||"majority"===l),v.push(U)}const B=new b({width:p,height:d,pixelType:a,pixels:v,bandMasks:T?I:void 0});if(null!=r)B.mask=new Uint8Array(p*d),A(B.mask,r,r,!0);else if(m){B.mask=new Uint8Array(p*d);for(let t=0;t<p*d;t++)B.mask[t]=g[t]<0||x[t]<0?0:1}return B.updateStatistics(),B},E:function(t){const{pixelBlock:e,tileSize:n,level:i,row:l,col:s,useBilinear:r}=t;if(!P(e))return null;const{width:o,height:a}=n,h=2**i,c=h*o,u=h*a;let f=L(e,{y:l*u,x:s*c},{width:c,height:u});if(!f)return null;for(let p=i;p>0;p--)f=N(f,r);return f},M:function(t,e){if(!t||0===t.length)return null;const n=t.find((t=>t.pixelBlock));if(null==n?.pixelBlock)return null;const i=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,l=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,s=.01*Math.min(i,l),r=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>s?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>s?t.extent.xmin-e.extent.xmin:0)),o=Math.min.apply(null,r.map((t=>t.extent.xmin))),a=Math.min.apply(null,r.map((t=>t.extent.ymin))),h=Math.max.apply(null,r.map((t=>t.extent.xmax))),c=Math.max.apply(null,r.map((t=>t.extent.ymax))),u={x:Math.round((e.xmin-o)/i),y:Math.round((c-e.ymax)/l)},f={width:Math.round((h-o)/i),height:Math.round((c-a)/l)},p={width:Math.round((e.xmax-e.xmin)/i),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(f.width/n.pixelBlock.width)*Math.round(f.height/n.pixelBlock.height)!==r.length||u.x<0||u.y<0||f.width<p.width||f.height<p.height?null:{extent:e,pixelBlock:_(r.map((t=>t.pixelBlock)),f,{clipOffset:u,clipSize:p})}},R:function(t,e){const{coefficients:n,spacing:i}=e,{offsets_x:l,offsets_y:s,gridWidth:r}=E(t,t,n,{rows:i[0],cols:i[1]}),{width:o,height:a}=t,h=new Float32Array(o*a),c=180/Math.PI;for(let u=0;u<a;u++)for(let t=0;t<o;t++){const e=u*r+t,n=0===u?e:e-r,i=u===a-1?e:e+r,f=l[n]-l[i],p=s[i]-s[n];if(isNaN(f)||isNaN(p))h[u*o+t]=90;else{let e=Math.atan2(p,f)*c;e=(360+e)%360,h[u*o+t]=e}}return h},S:function(t,e,n,i=[0,0],l=.5){const{width:s,height:r,mask:o}=t,[a,h]=t.pixels,[c,u]=i,f=Math.round((s-c)/n),p=Math.round((r-u)/n),d=f*p,m=new Float32Array(d),g=new Float32Array(d),x=new Uint8Array(d),w="vector-uv"===e;for(let k=0;k<p;k++)for(let t=0;t<f;t++){let e=0;const i=k*f+t,p=Math.max(0,k*n+u),d=Math.max(0,t*n+c),y=Math.min(r,p+n),M=Math.min(s,d+n);for(let t=p;t<y;t++)for(let n=d;n<M;n++){const l=t*s+n;if(!o||o[l]){e++;const t=w?[a[l],h[l]]:[a[l],(360+h[l])%360],[n,s]=w?t:J(t);m[i]+=n,g[i]+=s}}if(e>=(y-p)*(M-d)*(1-l)){x[i]=1;const[t,n]=z([m[i]/e,g[i]/e]);m[i]=t,g[i]=n}else x[i]=0,m[i]=0,g[i]=0}const y=new b({width:f,height:p,pixels:[m,g],mask:x});return y.updateStatistics(),y},T:function(t,e,n){if(!P(t))return null;const{width:i,height:l}=t,s=e.x,r=e.y,o=n.width+s,a=n.height+r;if(s<0||r<0||o>i||a>l)return t;if(0===s&&0===r&&o===i&&a===l)return t;t.mask||(t.mask=new Uint8Array(i*l));const h=t.mask;for(let c=0;c<l;c++){const t=c*i;for(let e=0;e<i;e++)h[t+e]=c<r||c>=a||e<s||e>=o?0:1}return t.updateStatistics(),t},U:_,W:function(t,e,n=0,i=!0){if(!P(t))return null;const{width:l,height:s}=e;let{width:r,height:o}=t;const a=new Map,h={x:0,y:0},c=1+n;let u=t;for(let f=0;f<c;f++){const t=Math.ceil(r/l),n=Math.ceil(o/s);for(let i=0;i<n;i++){h.y=i*s;for(let n=0;n<t;n++){h.x=n*l;const t=L(u,h,e);a.set(`${f}/${i}/${n}`,t)}}f<c-1&&(u=N(u,i)),r=Math.round(r/2),o=Math.round(o/2)}return a},_:st,a:function(t,e,n,i="geographic"){if(!P(t)||null==n)return t;const l="vector-magdir"===e?t.clone():$(t,e),s=l.pixels[1];for(let r=0;r<s.length;r++)s[r]="geographic"===i?(s[r]+n[r]+270)%360:(s[r]+360-n[r])%360;return"vector-magdir"===e?l:$(l,"vector-magdir")},b:function(t,e){return"simple_scalar"===e.style?st(t,e):"wind_speed"===e.style?function(t,e){if(0===lt.length)for(let p=0;p<30;p++)lt.push(Q(5*p,0,!e.invertDirection));const n=W(q.fromJSON(e.inputUnit),"knots"),{width:i,height:l,mask:s}=t,r=t.pixels[0],o=t.pixels[1],a=6,h=[],c=[];let u=0,f=0;for(let p=0;p<l;p++)for(let t=0;t<i;t++){const e=p*i+t,d=r[e]*n;if((!s||s[p*i+t])&&d>=O){const n=(o[e]+360)%360/180*Math.PI,{pennants:s,barbs:r,shaft:m}=lt[Math.min(Math.floor(d/5),29)];if(s.length+r.length===0)continue;let g=h.length/a;const x=(t+.5)/i,w=(p+.5)/l;for(let t=0;t<s.length;t+=2)h[u++]=x,h[u++]=w,h[u++]=s[t],h[u++]=s[t+1]+n,h[u++]=0,h[u++]=d;for(let t=0;t<r.length;t+=2)h[u++]=x,h[u++]=w,h[u++]=r[t],h[u++]=r[t+1]+n,h[u++]=0,h[u++]=d;for(let t=0;t<m.length;t+=2)h[u++]=x,h[u++]=w,h[u++]=m[t],h[u++]=m[t+1]+n,h[u++]=0,h[u++]=d;for(let t=0;t<s.length/6;t++)c[f++]=g,c[f++]=g+1,c[f++]=g+2,g+=3;for(let t=0;t<r.length/8;t++)c[f++]=g,c[f++]=g+1,c[f++]=g+2,c[f++]=g+1,c[f++]=g+2,c[f++]=g+3,g+=4;c[f++]=g+0,c[f++]=g+1,c[f++]=g+2,c[f++]=g+1,c[f++]=g+3,c[f++]=g+2,g+=4}}return{vertexData:new Float32Array(h),indexData:new Uint32Array(c)}}(t,e):function(t,e){const{style:n,inputUnit:i,outputUnit:l,breakValues:s}=e,r=q.fromJSON(i),o=q.fromJSON(l),a=42,h=15;let c=0,u=0;const{width:f,height:p,mask:d}=t,m=t.pixels[0],g=t.pixels[1],x=null!=d?d.filter((t=>t>0)).length:f*p,w=new Float32Array(x*a),y=new Uint32Array(h*x),k=e.invertDirection?K(0,0,0,!1):H;for(let M=0;M<p;M++)for(let t=0;t<f;t++){const e=M*f+t;if(!d||d[M*f+t]){const i=(g[e]+360)%360/180*Math.PI,l=it(m[e],n,r,o,s);for(let n=0;n<k.length;n+=2)w[c++]=(t+.5)/f,w[c++]=(M+.5)/p,w[c++]=k[n],w[c++]=k[n+1]+i,w[c++]=l,w[c++]=m[e];const h=7*(c/a-1);y[u++]=h,y[u++]=h+1,y[u++]=h+2,y[u++]=h+0,y[u++]=h+4,y[u++]=h+3,y[u++]=h+0,y[u++]=h+2,y[u++]=h+3,y[u++]=h+2,y[u++]=h+5,y[u++]=h+3,y[u++]=h+5,y[u++]=h+6,y[u++]=h+3}}return{vertexData:w,indexData:y}}(t,e)},c:function(t,e,n){if(t.depthCount&&t.depthCount>1)return;const{pixels:i,statistics:l,pixelType:s}=t,r=i[0].length,o=t.bandMasks??[],a=t.mask??new Uint8Array(r).fill(255),h="f32"===s||"f64"===s,c=k(s);let u=!1;for(let f=0;f<i.length;f++){const t="number"==typeof e?e:e[f];if(null==t)continue;const r=l?.[f]?.minValue??c[0],p=l?.[f]?.maxValue??c[1];if(r>t+Number.EPSILON||p<t-Number.EPSILON)continue;const d=o[f]||a.slice(),m=i[f],g=n?.customFloatTolerance;if(h&&0!==g){let e=g;e||(e=Math.abs(t)>=x?w*Math.abs(t):"f32"===s?2**-23:Number.EPSILON);for(let n=0;n<m.length;n++)d[n]&&Math.abs(m[n]-t)<e&&(m[n]=0,d[n]=0,a[n]=0,u=!0)}else for(let e=0;e<m.length;e++)d[e]&&m[e]===t&&(m[e]=0,d[e]=0,a[e]=0,u=!0);o[f]=d}u&&(t.bandMasks=t.bandMasks||t.pixels.length>1?o:null,t.mask=a),u&&"updateStatistics"in t&&t.updateStatistics()},d:function(t,e){return null==t||null==e?"s32":t<0?t>=-128&&e<128?"s8":t>=-32768&&e<32768?"s16":"s32":e<256?"u8":e<65536?"u16":"u32"},f:$,g:async function(t,e,n,i,l,s){const r=performance.now(),o=p(e.spatialReference);if(!o){const o=await ft(t,e,n,i,l,s);return u("esri-2d-profiler")&&rt().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-r)),u("esri-2d-profiler")&&rt().info("I.9","Number of parts",1),o}const[a,h]=o.valid,c=h-a,f=Math.ceil(e.width/c),m=e.width/f,g=Math.round(n/f);let x=e.xmin;const w=[],y=performance.now();for(let u=0;u<f;u++){const n=new d({xmin:x,xmax:x+m,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});w.push(ft(t,n,g,i,l,s)),x+=m}const k=await Promise.all(w);u("esri-2d-profiler")&&rt().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-y)),u("esri-2d-profiler")&&rt().info("I.9","Number of parts",k.length);const M={data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i};let A=0;for(const u of k){for(let t=0;t<u.height;t++)for(let e=0;e<u.width;e++)A+e>=n||(M.data[2*(t*n+A+e)]=u.data[2*(t*u.width+e)],M.data[2*(t*n+A+e)+1]=u.data[2*(t*u.width+e)+1],M.mask[t*n+A+e]=u.mask[t*u.width+e]);A+=u.width}return u("esri-2d-profiler")&&rt().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-r)),M},h:W,i:k,j:function(t,e){if(!P(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),i=n.pixels;let l=n.mask;const s=n.width*n.height;if(1!==i.length)return t;const{indexedColormap:r,indexed2DColormap:o,offset:a,alphaSpecified:h}=e;let c=0;const u=i[0],f=new Uint8Array(u.length),p=new Uint8Array(u.length),d=new Uint8Array(u.length);let m,g=0;if(r){const t=r.length-1;if(null!=l)for(c=0;c<s;c++)l[c]&&(g=4*(u[c]-a),g<a||g>t?l[c]=0:(f[c]=r[g],p[c]=r[g+1],d[c]=r[g+2],l[c]=r[g+3]));else{for(l=new Uint8Array(s),c=0;c<s;c++)g=4*(u[c]-a),g<a||g>t?l[c]=0:(f[c]=r[g],p[c]=r[g+1],d[c]=r[g+2],l[c]=r[g+3]);n.mask=l}}else if(o)if(null!=l)for(c=0;c<s;c++)l[c]&&(m=o[u[c]],f[c]=m[0],p[c]=m[1],d[c]=m[2],l[c]=m[3]);else{for(l=new Uint8Array(s),c=0;c<s;c++)m=o[u[c]],f[c]=m[0],p[c]=m[1],d[c]=m[2],l[c]=m[3];n.mask=l}return n.pixels=[f,p,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=h,n},k:function(t,e){if(!P(t))return null;const n=t.clone(),{pixels:i}=n,l=n.width*n.height,s=e.length,r=Math.floor(s/2),o=e[Math.floor(r)],a=i[0];let h,c,u,f,p,d,m=!1;const g=new Uint8Array(l),x=new Uint8Array(l),w=new Uint8Array(l);let y=n.mask;const k=4===e[0].mappedColor.length;for(y||(y=new Uint8Array(l),y.fill(k?255:1),n.mask=y),p=0;p<l;p++)if(y[p]){for(h=a[p],m=!1,d=r,c=o,u=0,f=s-1;f-u>1;){if(h===c.value){m=!0;break}h>c.value?u=d:f=d,d=Math.floor((u+f)/2),c=e[Math.floor(d)]}m||(h===e[u].value?(c=e[u],m=!0):h===e[f].value?(c=e[f],m=!0):h<e[u].value?(m=!1,c=null):h>e[u].value&&(h<e[f].value?(c=e[u],m=!0):f===s-1?(m=!1,c=null):(c=e[f],m=!0))),m?(g[p]=c.mappedColor[0],x[p]=c.mappedColor[1],w[p]=c.mappedColor[2],y[p]=c.mappedColor[3]):g[p]=x[p]=w[p]=y[p]=0}return n.pixels=[g,x,w],n.mask=y,n.pixelType="u8",n.maskIsAlpha=k,n},l:z,m:function(t,e,n,i,l){if(null==l||!l.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/i),height:Math.round(n/i),resolution:t.width/e};const s=l.xmin,r=l.ymax,o=(t.xmax-t.xmin)/e*i,a=(t.ymax-t.ymin)/n*i,h=(o+a)/2;return t.xmin=s+Math.floor((t.xmin-s)/o)*o,t.xmax=s+Math.ceil((t.xmax-s)/o)*o,t.ymin=r+Math.floor((t.ymin-r)/a)*a,t.ymax=r+Math.ceil((t.ymax-r)/a)*a,{extent:t,width:Math.round(t.width/o),height:Math.round(t.height/a),resolution:h}},n:function(t,e){if(!P(t))return null;const{pixels:n,mask:i}=t,l=n.length;let s=e.lut;const{offset:r}=e;s&&1===s[0].length&&(s=n.map((()=>s)));const o=[],a=e.outputPixelType||"u8";for(let c=0;c<l;c++){const t=T(n[c],i,s[c],r||0,a);o.push(t)}const h=new b({width:t.width,height:t.height,pixels:o,mask:i,pixelType:a});return h.updateStatistics(),h},o:P,p:function(t,e,n=1){if(1===n||!P(t))return t;const i=t.clone(),{pixels:l,width:s,height:r}=i,o=l[0],a=l[1];let h=0;for(let c=0;c<r;c++)for(let t=0;t<s;t++)"vector-uv"===e?(o[h]*=n,a[h]*=n):o[h]*=n,h++;return i.updateStatistics(),i},q:function(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),s=new Uint8Array(4*l),r=[];let o,a=0,h=0;const c=5===n[0].length;if(l>65536)return n.forEach((t=>{r[t[0]-i]=c?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:i,alphaSpecified:c};if(t.fillUnspecified)for(o=n[h],a=o[0]-i;a<l;a++)s[4*a]=o[1],s[4*a+1]=o[2],s[4*a+2]=o[3],s[4*a+3]=c?o[4]:255,a===o[0]-i&&(o=h===n.length-1?o:n[++h]);else for(a=0;a<n.length;a++)o=n[a],h=4*(o[0]-i),s[h]=o[1],s[h+1]=o[2],s[h+2]=o[3],s[h+3]=c?o[4]:255;return{indexedColormap:s,offset:i,alphaSpecified:c}},r:function(t){return(t?.startsWith("s")||t?.startsWith("u"))??!1},s:async function(t,e,n,i){const l=performance.now(),s=at(e,n),r=performance.now(),o=ct(e,s,n.width,n.height),a=performance.now(),h=function(t,e){const n=new m,i=t.reduce(((t,e)=>t+e.length),0),l=new Float32Array(4*i),s=new Array(t.length);let r=0,o=0;for(const a of t){const t=r;for(const e of a)l[4*r]=e.x,l[4*r+1]=e.y,l[4*r+2]=e.t,l[4*r+3]=e.speed,r++;s[o++]={startVertex:t,numberOfVertices:a.length,totalTime:a[a.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:l,lineDescriptors:s}}(o,!0),c=performance.now(),p="Streamlines"===t?function(t,e){const n=9,{lineVertices:i,lineDescriptors:l}=t;let s=0,r=0;for(const p of l)s+=2*p.numberOfVertices,r+=6*(p.numberOfVertices-1);const o=new Float32Array(s*n),a=new Uint32Array(r);let h=0,c=0;function u(){a[c++]=h-2,a[c++]=h,a[c++]=h-1,a[c++]=h,a[c++]=h+1,a[c++]=h-1}function f(t,e,i,l,s,r,a,c){const u=h*n;let f=0;o[u+f++]=t,o[u+f++]=e,o[u+f++]=1,o[u+f++]=i,o[u+f++]=r,o[u+f++]=a,o[u+f++]=l/2,o[u+f++]=s/2,o[u+f++]=c,h++,o[u+f++]=t,o[u+f++]=e,o[u+f++]=-1,o[u+f++]=i,o[u+f++]=r,o[u+f++]=a,o[u+f++]=-l/2,o[u+f++]=-s/2,o[u+f++]=c,h++}for(const p of l){const{totalTime:t,timeSeed:n}=p;let l=null,s=null,r=null,o=null,a=null,h=null;for(let c=0;c<p.numberOfVertices;c++){const d=i[4*(p.startVertex+c)],m=i[4*(p.startVertex+c)+1],g=i[4*(p.startVertex+c)+2],x=i[4*(p.startVertex+c)+3];let w=null,y=null,k=null,M=null;if(c>0){w=d-l,y=m-s;const i=Math.sqrt(w*w+y*y);if(w/=i,y/=i,c>1){let t=w+a,n=y+h;const i=Math.sqrt(t*t+n*n);t/=i,n/=i;const l=Math.min(1/(t*w+n*y),e);t*=l,n*=l,k=-n,M=t}else k=-y,M=w;null!==k&&null!==M&&(f(l,s,r,k,M,t,n,x),u())}l=d,s=m,r=g,a=w,h=y,o=x}f(l,s,r,-h,a,t,n,o)}return{vertexData:o,indexData:a}}(h,ot):function(t){const e=16,n=1,i=2,{lineVertices:l,lineDescriptors:s}=t;let r=0,o=0;for(const F of s){const t=F.numberOfVertices-1;r+=4*t*2,o+=6*t*2}const a=new Float32Array(r*e),h=new Uint32Array(o);let c,u,f,p,d,m,g,x,w,y,k,M,A,b,v=0,U=0;function P(){h[U++]=v-8,h[U++]=v-7,h[U++]=v-6,h[U++]=v-7,h[U++]=v-5,h[U++]=v-6,h[U++]=v-4,h[U++]=v-3,h[U++]=v-2,h[U++]=v-3,h[U++]=v-1,h[U++]=v-2}function T(t,l,s,r,o,h,c,u,f,p,d,m,g,x){const w=v*e;let y=0;for(const e of[n,i])for(const n of[1,2,3,4])a[w+y++]=t,a[w+y++]=l,a[w+y++]=s,a[w+y++]=r,a[w+y++]=c,a[w+y++]=u,a[w+y++]=f,a[w+y++]=p,a[w+y++]=e,a[w+y++]=n,a[w+y++]=g,a[w+y++]=x,a[w+y++]=o/2,a[w+y++]=h/2,a[w+y++]=d/2,a[w+y++]=m/2,v++}function I(t,e){let n=w+k,i=y+M;const l=Math.sqrt(n*n+i*i);n/=l,i/=l;const s=w*n+y*i;n/=s,i/=s;let r=k+A,o=M+b;const a=Math.sqrt(r*r+o*o);r/=a,o/=a;const h=k*r+M*o;r/=h,o/=h,T(c,u,f,p,-i,n,d,m,g,x,-o,r,t,e),P()}function B(t,e,n,i,l,s){if(w=k,y=M,k=A,M=b,null==w&&null==y&&(w=k,y=M),null!=d&&null!=m){A=t-d,b=e-m;const n=Math.sqrt(A*A+b*b);A/=n,b/=n}null!=w&&null!=y&&I(l,s),c=d,u=m,f=g,p=x,d=t,m=e,g=n,x=i}function S(t,e){w=k,y=M,k=A,M=b,null==w&&null==y&&(w=k,y=M),null!=w&&null!=y&&I(t,e)}for(const F of s){c=null,u=null,f=null,p=null,d=null,m=null,g=null,x=null,w=null,y=null,k=null,M=null,A=null,b=null;const{totalTime:t,timeSeed:e}=F;for(let n=0;n<F.numberOfVertices;n++)B(l[4*(F.startVertex+n)],l[4*(F.startVertex+n)+1],l[4*(F.startVertex+n)+2],l[4*(F.startVertex+n)+3],t,e);S(t,e)}return{vertexData:a,indexData:h}}(h),d=performance.now();return u("esri-2d-profiler")&&(rt().info("I.1","_createFlowFieldFromData (ms)",Math.round(r-l)),rt().info("I.2","_getStreamlines (ms)",Math.round(a-r)),rt().info("I.3","createAnimatedLinesData (ms)",Math.round(c-a)),rt().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(d-c)),rt().info("I.5","createFlowMesh (ms)",Math.round(d-l)),rt().info("I.6","Mesh size (bytes)",p.vertexData.buffer.byteLength+p.indexData.buffer.byteLength)),await Promise.resolve(),f(i),p},t:function(t){if(!t?.length||t.some((t=>!P(t))))return null;if(1===t.length)return t[0]?.clone()??null;const e=t,{width:n,height:i,pixelType:l}=e[0];if(e.some((t=>t.width!==n||t.height!==i)))return null;const s=e.map((({mask:t})=>t)).filter((t=>null!=t));let r=null;s.length&&(r=new Uint8Array(n*i),r.set(s[0]),s.length>1&&S(s.slice(1),r));const o=[];e.forEach((({pixels:t})=>o.push(...t)));const a=e.map((({statistics:t})=>t)).filter((t=>t?.length)),h=[];return a.forEach((t=>h.push(...t))),new b({pixelType:l,width:n,height:i,mask:r,pixels:o,statistics:h.length?h:null})},x:function(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const i=t.includes("16")?65536:256,l=t.includes("s")?-i/2:0,s=new Uint8Array(i);if(e)for(let r=0;r<e.length;r++){const t=Math.ceil(e[2*r]-l),n=Math.floor(e[2*r+1]-l);for(let e=t;e<=n;e++)s[e]=255}else s.fill(255);if(n)for(let r=0;r<n.length;r++)s[n[r]-l]=0;return{lut:s,offset:l}},z:function(t,e){if(!P(t))return null;const{width:n,height:i,pixels:l}=t,s=n*i,r=new Uint8Array(s);t.mask?r.set(t.mask):r.fill(255);const o=l.length,{includedRanges:a,noDataValues:h,outputPixelType:c,matchAll:u,lookups:f}=e;if(f){const t=[];for(let e=0;e<o;e++){const n=f[e],i=T(l[e],r,n.lut,n.offset||0,"u8");t.push(i)}1===t.length?r.set(t[0]):u?B(t,r):S(t,r)}else if(u){const t=[];for(let e=0;e<o;e++){const n=new Uint8Array(s);n.set(r),I(l[e],a?.slice(2*e,2*e+2),h?.[e],n),t.push(n)}1===t.length?r.set(t[0]):B(t,r)}else for(let p=0;p<o;p++)I(l[p],a?.slice(2*p,2*p+2),h?.[p],r);return new b({width:n,height:i,pixelType:c,pixels:l,mask:r})}});let e=class{constructor(t=null,e=null,n=null){this.minValue=t,this.maxValue=e,this.noDataValue=n}};const x=9999999e31,w=2e-7,y={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function k(t){return y[t]??[-34028234663852886e22,34028234663852886e22]}var M;let A=M=class extends r{static createEmptyBand(t,e){return new(M.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let i=0;i<t.length;i++){const l=t[i];for(let t=0;t<e;t++)l[t]||(n[t]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new o("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new e)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(null!=t)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t||!this.pixels)return;const[e,n]=k(t),i=this.pixels,l=this.width*this.height,s=i.length;let r,o,a;const h=[];for(let c=0;c<s;c++){a=M.createEmptyBand(t,l),r=i[c];for(let t=0;t<l;t++)o=r[t],a[t]=o>n?n:o<e?e:o;h.push(a)}this.pixels=h,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(null==t||0===t.length||!e||0===e.length)return this;const i=e.length,l=t.some((t=>t>=e.length)),s=i===t.length&&!t.some(((t,e)=>t!==e));if(l||s)return this;const r=this.bandMasks?.length===i?t.map((t=>this.bandMasks[t])):void 0;let{mask:o,validPixelCount:a}=this;const{width:h,height:c}=this;return r?.length&&(o=M.combineBandMasks(r),a=o.filter((t=>!!t)).length),new M({pixelType:this.pixelType,width:h,height:c,mask:o,bandMasks:r,validPixelCount:a,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>e[t])),statistics:n&&t.map((t=>n[t]))})}clone(){const t=new M({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;null!=this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0)),this.bandMasks&&(t.bandMasks=this.bandMasks.map((t=>new Uint8Array(t))));const n=M.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const i=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=i?this.pixels[e].slice(0,this.pixels[e].length):new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=a(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:i,pixels:l}=this;if(!t||!l?.length)return void h.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,r,o,a;s=r=o=l[0],l.length>=3?(r=l[1],o=l[2]):2===l.length&&(r=l[1]);const c=new Uint32Array(t),u=this.width*this.height;if(s.length===u)if(null!=e&&e.length===u)if(n)for(a=0;a<u;a++){const t=e[a];if(t){const e=t/255;c[a]=i?t<<24|o[a]*e<<16|r[a]*e<<8|s[a]*e:t<<24|o[a]<<16|r[a]<<8|s[a]}}else for(a=0;a<u;a++)e[a]&&(c[a]=255<<24|o[a]<<16|r[a]<<8|s[a]);else for(a=0;a<u;a++)c[a]=255<<24|o[a]<<16|r[a]<<8|s[a];else h.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:i}=this;if(!t||!e?.length)return void h.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const l=this.pixelType;let s=1,r=0,o=1;if(i&&i.length>0){for(const t of i)if(null!=t.minValue&&(r=Math.min(r,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;o=Math.max(o,e)}s=255/o}else{let t=255;"s8"===l?(r=-128,t=127):"u16"===l?t=65535:"s16"===l?(r=-32768,t=32767):"u32"===l?t=4294967295:"s32"===l?(r=-2147483648,t=2147483647):"f32"===l?(r=-34e38,t=34e38):"f64"===l&&(r=-Number.MAX_VALUE,t=Number.MAX_VALUE),s=255/(t-r)}const a=new Uint32Array(t),c=this.width*this.height;let u,f,p,d,m;if(u=f=p=e[0],u.length!==c)return h.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(f=e[1],e.length>=3&&(p=e[2]),null!=n&&n.length===c)for(d=0;d<c;d++)n[d]&&(a[d]=255<<24|(p[d]-r)*s<<16|(f[d]-r)*s<<8|(u[d]-r)*s);else for(d=0;d<c;d++)a[d]=255<<24|(p[d]-r)*s<<16|(f[d]-r)*s<<8|(u[d]-r)*s;else if(null!=n&&n.length===c)for(d=0;d<c;d++)m=(u[d]-r)*s,n[d]&&(a[d]=255<<24|m<<16|m<<8|m);else for(d=0;d<c;d++)m=(u[d]-r)*s,a[d]=255<<24|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e?.length)return h.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let i,l,s,r;i=l=s=e[0],e.length>=3?(l=e[1],s=e[2]):2===e.length&&(l=e[1]);const o=this.width*this.height;if(i.length!==o)return h.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let a=0;if(null!=n&&n.length===o)for(r=0;r<o;r++)t[a++]=i[r],t[a++]=l[r],t[a++]=s[r],t[a++]=1&n[r];else for(r=0;r<o;r++)t[a++]=i[r],t[a++]=l[r],t[a++]=s[r],t[a++]=1}_calculateBandStatistics(t,n){let i=1/0,l=-1/0;const s=t.length;let r,o=0;if(null!=n)for(r=0;r<s;r++)n[r]&&(o=t[r],i=o<i?o:i,l=o>l?o:l);else for(r=0;r<s;r++)o=t[r],i=o<i?o:i,l=o>l?o:l;return new e(i,l)}};n([i({json:{write:!0}})],A.prototype,"width",void 0),n([i({json:{write:!0}})],A.prototype,"height",void 0),n([i({json:{write:!0}})],A.prototype,"pixelType",void 0),n([l("pixelType")],A.prototype,"castPixelType",null),n([i({json:{write:!0}})],A.prototype,"validPixelCount",void 0),n([i({json:{write:!0}})],A.prototype,"mask",void 0),n([i({json:{write:!0}})],A.prototype,"maskIsAlpha",void 0),n([i({json:{write:!0}})],A.prototype,"pixels",void 0),n([i()],A.prototype,"premultiplyAlpha",void 0),n([i({json:{write:!0}})],A.prototype,"statistics",void 0),n([i({json:{write:!0}})],A.prototype,"depthCount",void 0),n([i({json:{write:!0}})],A.prototype,"noDataValues",void 0),n([i({json:{write:!0}})],A.prototype,"bandMasks",void 0),A=M=n([s("esri.layers.support.PixelBlock")],A);const b=t("u",A);var v,U;function P(t){return null!=t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function T(t,e,n,i,l){const s=t.length,r=b.createEmptyBand(l,s);if(e)for(let o=0;o<s;o++)e[o]&&(r[o]=n[t[o]-i]);else for(let o=0;o<s;o++)r[o]=n[t[o]-i];return r}function I(t,e,n,i){const l=null!=n&&n.length>=2?new Set(n):null,s=1===n?.length?n[0]:null,r=!!e?.length;for(let o=0;o<t.length;o++)if(i[o]){const n=t[o];if(r){let t=!1;for(let i=0;i<e.length;i+=2)if(n>=e[i]&&n<=e[i+1]){t=!0;break}t||(i[o]=0)}i[o]&&(n===s||l?.has(n))&&(i[o]=0)}}function B(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][i]){n=!0;break}n||(e[i]=0)}}function S(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][i]){n=!0;break}n&&(e[i]=0)}}function F(t,e,n,i,l,s){const{width:r,height:o}=n.block,{x:a,y:h}=n.offset,{width:c,height:u}=n.mosaic,f=function(t,e,n,i,l,s,r,o){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:s<=i*e?0:s<i*e+e?s-i*e:e,xmax:l+r<=n*t?0:l+r<n*t+t?l+r-n*t:t,ymax:s+o<=i*e?0:s+o<i*e+e?s+o-i*e:e}}(r,o,i,l,a,h,c,u);let p=0,d=0;if(s){const t=s.hasGCSSShiftTransform?360:s.halfWorldWidth??0,e=r*s.resolutionX,n=s.startX+i*e;n<t&&n+e>t?d=s.rightPadding:n>=t&&(p=s.leftMargin-s.rightPadding,d=0)}if(f.xmax-=d,"number"!=typeof e)for(let m=f.ymin;m<f.ymax;m++){const n=(l*o+m-h)*c+(i*r-a)+p,s=m*r;for(let i=f.xmin;i<f.xmax;i++)t[n+i]=e[s+i]}else for(let m=f.ymin;m<f.ymax;m++){const n=(l*o+m-h)*c+(i*r-a)+p;for(let i=f.xmin;i<f.xmax;i++)t[n+i]=e}}function _(t,e,n={}){const{clipOffset:i,clipSize:l,alignmentInfo:s,blockWidths:r}=n;if(r)return function(t,e,n){const i=t.find((t=>null!=t));if(null==i)return null;const l=t.some((t=>null==t||!!t.mask)),{width:s,height:r}=e,o=l?new Uint8Array(s*r):null,{blockWidths:a}=n,h=[],c=i.getPlaneCount(),u=b.getPixelArrayConstructor(i.pixelType);if(l)for(let g=0,x=0;g<t.length;x+=a[g],g++){const e=t[g];if(!P(e))continue;const n=e.mask;for(let t=0;t<r;t++)for(let i=0;i<a[g];i++)o[t*s+i+x]=null==n?255:n[t*e.width+i]}const f=t.some((t=>t?.bandMasks&&t.bandMasks.length>1)),p=f?[]:void 0,d=s*r;for(let g=0;g<c;g++){const e=new u(d),n=f?new Uint8Array(d):void 0;for(let i=0,l=0;i<t.length;l+=a[i],i++){const o=t[i];if(!P(o))continue;const h=o.pixels[g];if(null!=h){for(let t=0;t<r;t++)for(let n=0;n<a[i];n++)e[t*s+n+l]=h[t*o.width+n];if(n){const t=o.bandMasks?.[g]??o.mask;for(let e=0;e<r;e++)for(let r=0;r<a[i];r++)n[e*s+r+l]=t?t[e*o.width+r]:255}}}h.push(e),p&&n&&p.push(n)}const m=new b({width:s,height:r,mask:o,bandMasks:p,pixels:h,pixelType:i.pixelType});return m.updateStatistics(),m}(t,e,{blockWidths:r});const o=t.find((t=>P(t)));if(null==o)return null;const a=l?l.width:e.width,h=l?l.height:e.height,c=o.width,u=o.height,f=e.width/c,p=e.height/u,d={offset:i||{x:0,y:0},mosaic:l||e,block:{width:c,height:u}},m=o.pixelType,g=b.getPixelArrayConstructor(m),x=o.pixels.length,w=[];let y,k;for(let b=0;b<x;b++){k=new g(a*h);for(let e=0;e<p;e++)for(let n=0;n<f;n++){const i=t[e*f+n];P(i)&&(y=i.pixels[b],F(k,y,d,n,e,s))}w.push(k)}const M=t.some((t=>null==t||null!=t.mask&&t.mask.length>0)),A=t.some((t=>t?.bandMasks&&t.bandMasks.length>1)),v=M?new Uint8Array(a*h):void 0,U=A?[]:void 0;if(v){for(let e=0;e<p;e++)for(let n=0;n<f;n++){const i=t[e*f+n],l=null!=i?i.mask:null;F(v,null!=l?l:i?255:0,d,n,e,s)}if(U)for(let e=0;e<x;e++){const n=new Uint8Array(a*h);for(let i=0;i<p;i++)for(let l=0;l<f;l++){const r=t[i*f+l],o=r?.bandMasks?.[e]??r?.mask;F(n,null!=o?o:r?255:0,d,l,i,s)}U.push(n)}}const T=new b({width:a,height:h,pixels:w,pixelType:m,bandMasks:U,mask:v});return T.updateStatistics(),T}function V(t){if(!P(t))return null;const e=t.clone(),{width:n,height:i,pixels:l}=t,s=l[0],r=e.pixels[0],o=t.mask;for(let a=2;a<i-1;a++){const t=new Map;for(let i=a-2;i<a+2;i++)for(let e=0;e<4;e++){const l=i*n+e;R(t,s[l],o?o[l]:1)}r[a*n]=C(t),r[a*n+1]=r[a*n+2]=r[a*n];let e=3;for(;e<n-1;e++){let i=(a-2)*n+e+1;R(t,s[i],o?o[i]:1),i=(a-1)*n+e+1,R(t,s[i],o?o[i]:1),i=a*n+e+1,R(t,s[i],o?o[i]:1),i=(a+1)*n+e+1,R(t,s[i],o?o[i]:1),i=(a-2)*n+e-3,D(t,s[i],o?o[i]:1),i=(a-1)*n+e-3,D(t,s[i],o?o[i]:1),i=a*n+e-3,D(t,s[i],o?o[i]:1),i=(a+1)*n+e-3,D(t,s[i],o?o[i]:1),r[a*n+e]=C(t)}r[a*n+e+1]=r[a*n+e]}for(let a=0;a<n;a++)r[a]=r[n+a]=r[2*n+a],r[(i-1)*n+a]=r[(i-2)*n+a];return e.updateStatistics(),e}function C(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let s=l.next();for(;!s.done;)i=t.get(s.value),i>e&&(n=s.value,e=i),s=l.next();return n}function D(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function R(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function L(t,e,n){let{x:i,y:l}=e;const{width:s,height:r}=n;if(0===i&&0===l&&r===t.height&&s===t.width)return t;const{width:o,height:a}=t,h=Math.max(0,l),c=Math.max(0,i),u=Math.min(i+s,o),f=Math.min(l+r,a);if(u<0||f<0||!P(t))return null;i=Math.max(0,-i),l=Math.max(0,-l);const{pixels:p}=t,d=s*r,m=p.length,g=[];for(let k=0;k<m;k++){const e=p[k],n=b.createEmptyBand(t.pixelType,d);for(let t=h;t<f;t++){const r=t*o;let a=(t+l-h)*s+i;for(let t=c;t<u;t++)n[a++]=e[r+t]}g.push(n)}const x=new Uint8Array(d),w=t.mask;for(let k=h;k<f;k++){const t=k*o;let e=(k+l-h)*s+i;for(let n=c;n<u;n++)x[e++]=w?w[t+n]:1}const y=new b({width:n.width,height:n.height,pixelType:t.pixelType,pixels:g,mask:x});return y.updateStatistics(),y}function N(t,e=!0){if(!P(t))return null;const{pixels:n,width:i,height:l,mask:s,pixelType:r}=t,o=[],a=Math.round(i/2),h=Math.round(l/2),c=l-1,u=i-1;for(let p=0;p<n.length;p++){const t=n[p],s=b.createEmptyBand(r,a*h);let f=0;for(let n=0;n<l;n+=2)for(let l=0;l<i;l+=2){const r=t[n*i+l];if(e){const e=l===u?r:t[n*i+l+1],o=n===c?r:t[n*i+l+i],a=l===u?o:n===c?e:t[n*i+l+i+1];s[f++]=(r+e+o+a)/4}else s[f++]=r}o.push(s)}let f=null;if(null!=s){f=new Uint8Array(a*h);let t=0;for(let n=0;n<l;n+=2)for(let l=0;l<i;l+=2){const r=s[n*i+l];if(e){const e=l===u?r:s[n*i+l+1],o=n===c?r:s[n*i+l+i],a=l===u?o:n===c?e:s[n*i+l+i+1];f[t++]=r*e*o*a?1:0}else f[t++]=r}}return new b({width:a,height:h,pixelType:r,pixels:o,mask:f})}function E(t,e,n,i,l=0){const{width:s,height:r}=t,{width:o,height:a}=e,h=i.cols,c=i.rows,u=Math.ceil(o/h-.1/h),f=Math.ceil(a/c-.1/c);let p,d,m,g,x,w,y;const k=u*h,M=k*f*c,A=new Float32Array(M),b=new Float32Array(M),v=new Uint32Array(M),U=new Uint32Array(M);let P,T,I=0;for(let B=0;B<f;B++)for(let t=0;t<u;t++){p=12*(B*u+t),d=n[p],m=n[p+1],g=n[p+2],x=n[p+3],w=n[p+4],y=n[p+5];for(let e=0;e<c;e++){I=(B*c+e)*k+t*h,T=(e+.5)/c;for(let t=0;t<e;t++)P=(t+.5)/h,A[I+t]=(d*P+m*T+g)*s+l,b[I+t]=(x*P+w*T+y)*r+l,v[I+t]=Math.floor(A[I+t]),U[I+t]=Math.floor(b[I+t])}p+=6,d=n[p],m=n[p+1],g=n[p+2],x=n[p+3],w=n[p+4],y=n[p+5];for(let e=0;e<c;e++){I=(B*c+e)*k+t*h,T=(e+.5)/c;for(let t=e;t<h;t++)P=(t+.5)/h,A[I+t]=(d*P+m*T+g)*s+l,b[I+t]=(x*P+w*T+y)*r+l,v[I+t]=Math.floor(A[I+t]),U[I+t]=Math.floor(b[I+t])}}return{offsets_x:A,offsets_y:b,offsets_xi:v,offsets_yi:U,gridWidth:k}}t({w:v,v:U}),function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"}(v||t("w",v={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(U||t("v",U={})),t("y",6);const j=new Map;j.set("meter-per-second",1),j.set("kilometer-per-hour",.277778),j.set("knots",.514444),j.set("feet-per-second",.3048),j.set("mile-per-hour",.44704);const G=180/Math.PI,O=5,q=t("e",new c({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"}));function W(t,e){return j.get(t)/j.get(e)||1}function X(t){return(450-t)%360}function z(t,e="geographic"){const[n,i]=t,l=Math.sqrt(n*n+i*i);let s=Math.atan2(i,n)*G;return s=(360+s)%360,"geographic"===e&&(s=X(s)),[l,s]}function J(t,e="geographic"){let n=t[1];"geographic"===e&&(n=X(n)),n%=360;const i=t[0];return[i*Math.cos(n/G),i*Math.sin(n/G)]}function $(t,e,n="geographic",i=1){if(!P(t))return t;const{pixels:l,width:s,height:r}=t,o=s*r,a=l[0],h=l[1],c=t.pixelType.startsWith("f")?t.pixelType:"f32",u=b.createEmptyBand(c,o),f=b.createEmptyBand(c,o);let p=0;for(let m=0;m<r;m++)for(let t=0;t<s;t++)"vector-uv"===e?([u[p],f[p]]=z([a[p],h[p]],n),u[p]*=i):([u[p],f[p]]=J([a[p],h[p]],n),u[p]*=i,f[p]*=i),p++;const d=new b({pixelType:c,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[u,f]});return d.updateStatistics(),d}const H=K(0,0,0);function K(t=0,e=0,n=Math.PI,i=!0){i&&(n=(2*Math.PI-n)%(2*Math.PI));const l=i?-1:1,s=13*l,r=-7*l,o=-2*l,a=-16*l,h=21.75,[c,u]=Y(0,e+s,n,h),[f,p]=Y(t-5.5,e+r,n,h),[d,m]=Y(t+5.5,e+r,n,h),[g,x]=Y(t-1.5,e+o,n,h),[w,y]=Y(t+1.5,e+o,n,h),[k,M]=Y(t-1.5,e+a,n,h),[A,b]=Y(t+1.5,e+a,n,h);return[c,u,f,p,g,x,w,y,d,m,k,M,A,b]}function Q(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const i=n?-1:1,l=5*i,s=20*i,r=25*i,o=45,a=2*i,h=n?1:-1,c=5*h;let[u,f]=[0+c,0-s],[p,d]=[u+2*h,f],[m,g]=[p-0*h,d+a],[x,w]=[0-c,0-r],[y,k]=[x+0*h,w-a],M=Math.ceil(t/O),A=Math.floor(M/10);M-=8*A;const b=[],v=[];for(let C=0;C<M/2;C++,A--){A<=0&&M%2==1&&C===(M-1)/2&&(x=0,y=x+0*h,w=(w+f)/2,k=w-a);const[t,n]=Y(x,w,e,o);if(A>0){const[i,l]=Y(p,w,e,o),[s,r]=Y(u,f,e,o);b.push(i),b.push(l),b.push(t),b.push(n),b.push(s),b.push(r)}else{const[i,l]=Y(p,d,e,o),[s,r]=Y(m,g,e,o),[a,h]=Y(y,k,e,o);v.push(t),v.push(n),v.push(a),v.push(h),v.push(s),v.push(r),v.push(i),v.push(l)}w+=l,f+=l,d+=l,g+=l,k+=l}const[U,P]=Y(0+c,0+s,e,o),T=7*h,[I,B]=Y(0+T,0+s,e,o),[S,F]=Y(0+c,0-r,e,o),[_,V]=Y(0+T,0-r,e,o);return{pennants:b,barbs:v,shaft:[U,P,I,B,S,F,_,V]}}function Y(t,e,n,i=1){const l=Math.sqrt(t*t+e*e)/i,s=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[l,(2*Math.PI+s-n)%(2*Math.PI)]}const Z=[0,1,3,6,10,16,21,27,33,40,47,55,63],tt=[0,.5,1,1.5,2],et=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function nt(t,e,n,i){const l=W(i||"knots",n);let s;for(s=1;s<e.length;s++)if(s===e.length-1){if(t<e[s]*l)break}else if(t<=e[s]*l)break;return Math.min(s-1,e.length-2)}function it(t,e,n,i,l){let s=0;switch(e){case"beaufort_kn":s=nt(t,Z,"knots",n);break;case"beaufort_km":s=nt(t,Z,"kilometer-per-hour",n);break;case"beaufort_ft":s=nt(t,Z,"feet-per-second",n);break;case"beaufort_m":s=nt(t,Z,"meter-per-second",n);break;case"classified_arrow":s=nt(t,l??[],i,n);break;case"ocean_current_m":s=nt(t,tt,"meter-per-second",n);break;case"ocean_current_kn":s=nt(t,et,"knots",n)}return s}const lt=[];function st(t,e){let n=0,i=0;const{width:l,height:s,mask:r}=t,o=t.pixels[0],a=[],h=[],c=W(q.fromJSON(e.inputUnit),"knots"),u="wind_speed"===e.style?O:Number.MAX_VALUE;for(let f=0;f<s;f++)for(let t=0;t<l;t++){const e=o[f*l+t]*c;if((!r||r[f*l+t])&&e<u){for(let i=0;i<4;i++)a[n++]=(t+.5)/l,a[n++]=(f+.5)/s,a[n++]=i<2?-.5:.5,a[n++]=i%2==0?-.5:.5,a[n++]=0,a[n++]=e;const r=4*(n/24-1);h[i++]=r,h[i++]=r+1,h[i++]=r+2,h[i++]=r+1,h[i++]=r+2,h[i++]=r+3}}return{vertexData:new Float32Array(a),indexData:new Uint32Array(h)}}const rt=()=>h.getLogger("esri.views.2d.engine.flow.dataUtils"),ot=10;function at(t,e){const n=function(t,e,n,i){if(0===i)return t;const l=Math.round(3*i),s=new Array(2*l+1);let r=0;for(let h=-l;h<=l;h++){const t=Math.exp(-h*h/(i*i));s[h+l]=t,r+=t}for(let h=-l;h<=l;h++)s[h+l]/=r;const o=new Float32Array(t.length);for(let h=0;h<n;h++)for(let n=0;n<e;n++){let i=0,r=0;for(let o=-l;o<=l;o++){if(n+o<0||n+o>=e)continue;const a=s[o+l];i+=a*t[2*(h*e+(n+o))],r+=a*t[2*(h*e+(n+o))+1]}o[2*(h*e+n)]=i,o[2*(h*e+n)+1]=r}const a=new Float32Array(t.length);for(let h=0;h<e;h++)for(let t=0;t<n;t++){let i=0,r=0;for(let a=-l;a<=l;a++){if(t+a<0||t+a>=n)continue;const c=s[a+l];i+=c*o[2*((t+a)*e+h)],r+=c*o[2*((t+a)*e+h)+1]}a[2*(t*e+h)]=i,a[2*(t*e+h)+1]=r}return a}(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,i)=>{const l=Math.floor(t),s=Math.floor(i);if(l<0||l>=e.width)return[0,0];if(s<0||s>=e.height)return[0,0];const r=t-l,o=i-s,a=l,h=s,c=l<e.width-1?l+1:l,u=s<e.height-1?s+1:s,f=n[2*(h*e.width+a)],p=n[2*(h*e.width+c)],d=n[2*(u*e.width+a)],m=n[2*(u*e.width+c)],g=n[2*(h*e.width+a)+1],x=n[2*(h*e.width+c)+1];return[(f*(1-o)+d*o)*(1-r)+(p*(1-o)+m*o)*r,(g*(1-o)+n[2*(u*e.width+a)+1]*o)*(1-r)+(x*(1-o)+n[2*(u*e.width+c)+1]*o)*r]}:(t,i)=>{const l=Math.round(t),s=Math.round(i);return l<0||l>=e.width||s<0||s>=e.height?[0,0]:[n[2*(s*e.width+l)],n[2*(s*e.width+l)+1]]}}function ht(t,e,n,i,l,s,r,o,a){const h=[];let c=n,u=i,f=0,[p,d]=e(c,u);p*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(p*p+d*d);let g,x;h.push({x:c,y:u,t:f,speed:m});for(let w=0;w<t.verticesPerLine;w++){let[n,i]=e(c,u);n*=t.velocityScale,i*=t.velocityScale;const p=Math.sqrt(n*n+i*i);if(p<t.minSpeedThreshold)return h;const d=n/p,m=i/p;if(c+=d*t.segmentLength,u+=m*t.segmentLength,f+=t.segmentLength/p,Math.acos(d*g+m*x)>t.maxTurnAngle)return h;if(t.collisions){const t=Math.round(c*a),e=Math.round(u*a);if(t<0||t>r-1||e<0||e>o-1)return h;const n=s[e*r+t];if(-1!==n&&n!==l)return h;s[e*r+t]=l}h.push({x:c,y:u,t:f,speed:p}),g=d,x=m}return h}function ct(t,e,n,i){const l=[],s=new m,r=1/Math.max(t.lineCollisionWidth,1),o=Math.round(n*r),a=Math.round(i*r),h=new Int32Array(o*a);for(let u=0;u<h.length;u++)h[u]=-1;const c=[];for(let u=0;u<i;u+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)c.push({x:e,y:u,sort:s.getFloat()});c.sort(((t,e)=>t.sort-e.sort));for(const{x:u,y:f}of c)if(s.getFloat()<t.density){const n=ht(t,e,u,f,l.length,h,o,a,r);if(n.length<2)continue;l.push(n)}return l}function ut(t,e){const n=e.pixels,{width:i,height:l}=e,s=new Float32Array(i*l*2),r=e.mask||new Uint8Array(i*l*2);if(e.mask||r.fill(255),"vector-uv"===t)for(let o=0;o<i*l;o++)s[2*o]=n[0][o],s[2*o+1]=-n[1][o];else if("vector-magdir"===t)for(let o=0;o<i*l;o++){const t=n[0][o],e=g(n[1][o]),i=Math.cos(e-Math.PI/2),l=Math.sin(e-Math.PI/2);s[2*o]=i*t,s[2*o+1]=l*t}return{data:s,mask:r,width:i,height:l}}async function ft(t,e,n,i,l,s){const r={requestProjectedLocalDirections:!0,signal:s};if(null!=l&&(r.timeExtent=l),"imagery"===t.type){await t.load({signal:s});const l=t.rasterInfo.dataType,o=await t.fetchImage(e,n,i,r);return null==o?.pixelData?.pixelBlock?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:ut(l,o.pixelData.pixelBlock)}await t.load({signal:s});const o=t.serviceRasterInfo.dataType,a=await t.fetchPixels(e,n,i,r);return null==a?.pixelBlock?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:ut(o,a.pixelBlock)}}}}));
