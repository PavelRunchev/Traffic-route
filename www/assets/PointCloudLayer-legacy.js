System.register(["./index-legacy.js","./SceneService-legacy.js","./PointCloudUniqueValueRenderer-legacy.js","./elevationInfoUtils-legacy.js","./originUtils-legacy.js","./multiOriginJSONSupportUtils-legacy.js","./jsonContext-legacy.js","./resourceUtils-legacy3.js","./resourceUtils-legacy2.js","./saveAPIKeyUtils-legacy.js","./saveUtils-legacy.js"],(function(e,t){"use strict";var r,i,o,n,s,l,a,d,p,u,y,c,f,h,v,g,m,b,w,I,S,x,C,j,P,F,T,R,q,B,N,V,_,L,O,E,A,U,D,G;return{setters:[e=>{r=e.x,i=e.y,o=e.z,n=e.bX,s=e.dO,l=e.c6,a=e.ax,d=e.dE,p=e.de,u=e.df,y=e.bt,c=e.dg,f=e.dG,h=e.dF,v=e.d2,g=e.dV,m=e.bx,b=e.fa,w=e.jf,I=e.s,S=e.bG,x=e.X,C=e.w,j=e.ff,P=e.F,F=e.bD,T=e.e5,R=e.di,q=e.dN,B=e.fk,N=e.bw},e=>{V=e.L,_=e.P},e=>{L=e.c,O=e.d,E=e.b,A=e.a},e=>{U=e.I,D=e.x,G=e.Z},null,null,null,null,null,null,null],execute:function(){let t=class extends n{constructor(e){super(e),this.field=null,this.type=null}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}};r([i({type:String,json:{write:{enabled:!0,isRequired:!0}}})],t.prototype,"field",void 0),r([i({readOnly:!0,nonNullable:!0,json:{read:!1}})],t.prototype,"type",void 0),t=r([o("esri.layers.pointCloudFilters.PointCloudFilter")],t);const K=t;var k;let $=k=class extends K{constructor(e){super(e),this.requiredClearBits=null,this.requiredSetBits=null,this.type="bitfield"}clone(){return new k({field:this.field,requiredClearBits:a(this.requiredClearBits),requiredSetBits:a(this.requiredSetBits)})}};r([i({type:[s],json:{write:{enabled:!0,overridePolicy(){return{enabled:!0,isRequired:!this.requiredSetBits}}}}})],$.prototype,"requiredClearBits",void 0),r([i({type:[s],json:{write:{enabled:!0,overridePolicy(){return{enabled:!0,isRequired:!this.requiredClearBits}}}}})],$.prototype,"requiredSetBits",void 0),r([l({pointCloudBitfieldFilter:"bitfield"})],$.prototype,"type",void 0),$=k=r([o("esri.layers.pointCloudFilters.PointCloudBitfieldFilter")],$);const M=$;var z;let X=z=class extends K{constructor(e){super(e),this.includedReturns=[],this.type="return"}clone(){return new z({field:this.field,includedReturns:a(this.includedReturns)})}};r([i({type:[["firstOfMany","last","lastOfMany","single"]],json:{write:{enabled:!0,isRequired:!0}}})],X.prototype,"includedReturns",void 0),r([l({pointCloudReturnFilter:"return"})],X.prototype,"type",void 0),X=z=r([o("esri.layers.pointCloudFilters.PointCloudReturnFilter")],X);const J=X;var Z;let H=Z=class extends K{constructor(e){super(e),this.mode="exclude",this.type="value",this.values=[]}clone(){return new Z({field:this.field,mode:this.mode,values:a(this.values)})}};r([i({type:["exclude","include"],json:{write:{enabled:!0,isRequired:!0}}})],H.prototype,"mode",void 0),r([l({pointCloudValueFilter:"value"})],H.prototype,"type",void 0),r([i({type:[Number],json:{write:{enabled:!0,isRequired:!0}}})],H.prototype,"values",void 0),H=Z=r([o("esri.layers.pointCloudFilters.PointCloudValueFilter")],H);const Q={key:"type",base:K,typeMap:{value:H,bitfield:M,return:J}};var W;let Y=W=class extends L{constructor(e){super(e),this.type="point-cloud-rgb",this.field=null}clone(){return new W({...this.cloneProperties(),field:a(this.field)})}};r([l({pointCloudRGBRenderer:"point-cloud-rgb"})],Y.prototype,"type",void 0),r([i({type:String,json:{write:!0}})],Y.prototype,"field",void 0),Y=W=r([o("esri.renderers.PointCloudRGBRenderer")],Y);const ee={key:"type",base:L,typeMap:{"point-cloud-class-breaks":O,"point-cloud-rgb":Y,"point-cloud-stretch":E,"point-cloud-unique-value":A},errorContext:"renderer"},te=B();let re=class extends(V(d(p(u(y(c(f(h(N))))))))){constructor(...e){super(...e),this.operationalLayerType="PointCloudLayer",this.popupEnabled=!0,this.popupTemplate=null,this.opacity=1,this.filters=[],this.fields=null,this.fieldsIndex=null,this.outFields=null,this.path=null,this.legendEnabled=!0,this.renderer=null,this.type="point-cloud"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}get defaultPopupTemplate(){return this.attributeStorageInfo?this.createPopupTemplate():null}getFieldDomain(e){const t=this.fieldsIndex.get(e);return t?.domain?t.domain:null}readServiceFields(e,t,r){return Array.isArray(e)?e.map((e=>{const t=new v;return"FieldTypeInteger"===e.type&&((e=a(e)).type="esriFieldTypeInteger"),t.read(e,r),t})):Array.isArray(t.attributeStorageInfo)?t.attributeStorageInfo.map((e=>new v({name:e.name,type:"ELEVATION"===e.name?"double":"integer"}))):null}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}writeRenderer(e,t,r,i){g("layerDefinition.drawingInfo.renderer",e.write({},i),t)}load(e){const t=null!=e?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(m).then((()=>this._fetchService(t)));return this.addResolvingPromise(r),Promise.resolve(this)}createPopupTemplate(e){const t=b(this,e);return t&&(this._formatPopupTemplateReturnsField(t),this._formatPopupTemplateRGBField(t)),t}_formatPopupTemplateReturnsField(e){const t=this.fieldsIndex.get("RETURNS");if(!t)return;const r=e.fieldInfos?.find((e=>e.fieldName===t.name));if(!r)return;const i=new w({name:"pcl-returns-decoded",title:t.alias||t.name,expression:`\n        var returnValue = $feature.${t.name};\n        return (returnValue % 16) + " / " + Floor(returnValue / 16);\n      `});e.expressionInfos=[...e.expressionInfos||[],i],r.fieldName="expression/pcl-returns-decoded"}_formatPopupTemplateRGBField(e){const t=this.fieldsIndex.get("RGB");if(!t)return;const r=e.fieldInfos?.find((e=>e.fieldName===t.name));if(!r)return;const i=new w({name:"pcl-rgb-decoded",title:t.alias||t.name,expression:`\n        var rgb = $feature.${t.name};\n        var red = Floor(rgb / 65536, 0);\n        var green = Floor((rgb - (red * 65536)) / 256,0);\n        var blue = rgb - (red * 65536) - (green * 256);\n\n        return "rgb(" + red + "," + green + "," + blue + ")";\n      `});e.expressionInfos=[...e.expressionInfos||[],i],r.fieldName="expression/pcl-rgb-decoded"}async queryCachedStatistics(e,t){if(await this.load(t),!this.attributeStorageInfo)throw new I("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new I("pointcloudlayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const i of this.attributeStorageInfo)if(i.name===r.name){const e=S(this.parsedUrl.path,`./statistics/${i.key}`);return x(e,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new I("pointcloudlayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(_.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"};return this._debouncedSaveOperations(_.SAVE,e)}validateLayer(e){if(e.layerType&&"PointCloud"!==e.layerType)throw new I("pointcloudlayer:layer-type-not-supported","PointCloudLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new I("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});if(this.version.major>2)throw new I("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"})}hasCachedStatistics(e){return null!=this.attributeStorageInfo&&this.attributeStorageInfo.some((t=>t.name===e))}_getTypeKeywords(){return["PointCloud"]}_validateElevationInfo(){const e=this.elevationInfo;U(C.getLogger(this),D("Point cloud layers","absolute-height",e)),U(C.getLogger(this),G("Point cloud layers",e))}};r([i({type:["PointCloudLayer"]})],re.prototype,"operationalLayerType",void 0),r([i(j)],re.prototype,"popupEnabled",void 0),r([i({type:P,json:{name:"popupInfo",write:!0}})],re.prototype,"popupTemplate",void 0),r([i({readOnly:!0,json:{read:!1}})],re.prototype,"defaultPopupTemplate",null),r([i({readOnly:!0,json:{write:!1,read:!1,origins:{"web-document":{write:!1,read:!1}}}})],re.prototype,"opacity",void 0),r([i({type:["show","hide"]})],re.prototype,"listMode",void 0),r([i({types:[Q],json:{origins:{service:{read:{source:"filters"}}},name:"layerDefinition.filters",write:!0}})],re.prototype,"filters",void 0),r([i({type:[v]})],re.prototype,"fields",void 0),r([i(te.fieldsIndex)],re.prototype,"fieldsIndex",void 0),r([F("service","fields",["fields","attributeStorageInfo"])],re.prototype,"readServiceFields",null),r([i(te.outFields)],re.prototype,"outFields",void 0),r([i({readOnly:!0})],re.prototype,"attributeStorageInfo",void 0),r([i(T)],re.prototype,"elevationInfo",null),r([i({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],re.prototype,"path",void 0),r([i(R)],re.prototype,"legendEnabled",void 0),r([i({types:ee,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:{target:{"layerDefinition.drawingInfo.renderer":{types:ee},"layerDefinition.drawingInfo.transparency":{type:Number}}}}})],re.prototype,"renderer",void 0),r([q("renderer")],re.prototype,"writeRenderer",null),r([i({json:{read:!1},readOnly:!0})],re.prototype,"type",void 0),re=r([o("esri.layers.PointCloudLayer")],re),e("default",re)}}}));
