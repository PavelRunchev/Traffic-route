System.register(["./index-legacy.js","./dataUtils-legacy.js","./RasterSymbolizer-legacy.js"],(function(t,e){"use strict";var s,n,r,o,i,a,u,l,c,p,h,m,f,d,g,y,v,x,w,b,A,T,P,F,N,I,R,C,_,k,B,S,j,M,D,O,G,z,E,V,U,L,W,q,H,X,$,J,K;return{setters:[t=>{s=t.x,n=t.y,r=t.z,o=t.bX,i=t.d_,a=t.c5,u=t.c6,l=t.ax,c=t.iC,p=t.ec,h=t.kM,m=t.bD,f=t.kN,d=t.dN,g=t.m6,y=t.s,v=t.k9,x=t.ar,w=t.aQ},t=>{b=t.u,A=t.r,T=t.i,P=t.o,F=t.t,N=t.n,I=t.v,R=t.d,C=t.w,_=t.x,k=t.y,B=t.z,S=t.A,j=t.B,M=t.C},t=>{D=t.a,O=t.s,G=t.v,z=t.C,E=t.w,V=t.e,U=t.x,L=t.y,W=t.z,q=t.E,H=t.H,X=t.I,$=t.J,J=t.M,K=t.K}],execute:function(){t({N:function t(e,s){const{rasterFunctionArguments:n}=e;n&&(n.rasters||[n.raster]).forEach((e=>{e&&"number"!=typeof e&&("string"==typeof e?e.startsWith("http")&&(s.includes(e)||s.push(e)):"rasterFunctionArguments"in e&&t(e,s))}))},R:function(t,e){if(e=e??{},"function"in(t=l(t))&&"arguments"in t&&t.arguments){const s=Ln(t,new Map,e);if(qn(s),!s.renderingRule)throw new y("raster-function-helper","Unsupported raster function json.");t=s.renderingRule}if("rasterFunction"in t)return zn(t=Gn(t),e);throw new y("raster-function-helper","unsupported raster function json.")},f:function(t){const e=t?.type;return!t||or.includes(e)},i:function(t){const e=t?.type;if(!e)return null;const s=rr[t?.type];if(s){const e=new s;return e.read(t),e}return null}});let e=class extends o{constructor(){super(...arguments),this.raster=void 0}};s([n({json:{write:!0}})],e.prototype,"raster",void 0),e=s([r("esri.layers.support.rasterFunctions.AspectFunctionArguments")],e);const Y=e;var Z;let Q=Z=class extends Y{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new Z({raster:this.raster,raster2:this.raster2,operation:this.operation})}};s([n({json:{write:!0}})],Q.prototype,"operation",void 0),s([n({json:{write:!0}})],Q.prototype,"raster2",void 0),s([n({readOnly:!0})],Q.prototype,"rasters",null),Q=Z=s([r("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],Q);const tt=Q,et=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let st=class extends o{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let n=s.rasters||s.raster&&[s.raster];for(;n?.length;){e.unshift(...n);const t=[];for(let e=0;e<n.length;e++){const{parameters:s}=n[e],r=s.rasters||s.raster&&[s.raster];r?.length&&t.push(...r)}n=t}for(let a=e.length-1;a>=0;a--)e[a].isNoopProcess&&e.splice(a,1);let r=!1;for(let a=0;a<e.length;a++){const t=e[a];t.id=e.length-a-1;const{rasters:s}=t.parameters;r=r||null!=s&&s.length>1}const o=e.some((({name:t})=>et.has(t.toLowerCase()))),{rawSourceRasterInfos:i}=this;return{functions:e,hasBranches:r,hasFocalFunction:o,isSourceSingleBand:1===i?.[0]?.bandCount}}bind(t,e=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let r=!0;for(let o=0;o<n.length;o++){const s=n[o];if(null!=s&&this._isRasterFunctionValue(s)){const n=s.bind(t,e,this.id+o);if(!n.success)return this._bindingResult=n,n;r=r&&n.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=0===e.length?t.pixelBlocks??t.primaryPixelBlocks:e.map((e=>this._readRasterValue(e,t)));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const e=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=e,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,e)=>t!==e));const s=t.filter((t=>"ExtractBand"===t.functionName));return s.length&&s.forEach(((t,e)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[e,e,e]})),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let s=0;s<t;s++)e.push(s)}const n=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=n.some(((t,e)=>t!==e)),this.rawInputBandIds=n,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():"number"==typeof t?{name:"Constant",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];"Clip"===this.functionName&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach((e=>{if(this._isRasterFunctionValue(e)){const s=e.getClippingGeometries();t.push(...s)}}));else if(this._isRasterFunctionValue(e)){const s=e.getClippingGeometries();t.push(...s)}return t}_getOutputPixelType(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null}_getRasterValues(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]?this.functionArguments.rasters??[]:t.flatMap((t=>this.functionArguments[t]))}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=t;if(0===e.length)return s;const r=e.map((t=>t&&"object"==typeof t&&"bind"in t&&t.rasterInfo?t.rasterInfo:"string"==typeof t&&n.includes(t)?s[n.indexOf(t)]:"number"!=typeof t?s[0]:void 0)),o=r.find((t=>t))??s[0];return r.forEach(((t,e)=>{void 0===t&&(r[e]=o)})),r}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let n=0;n<t.sourceRasters.length;n++){const r=t.sourceRasters[n];if("number"!=typeof r)if("bind"in r)this._getPrimaryRasters(r,e,s);else{const t=r,n=this._getPrimaryRasterId(t);if(null==n)continue;s.includes(n)||(this.mainPrimaryRasterId===n?(e.unshift(t),s.unshift(n)):(e.push(t),s.push(n)))}}}_isRasterFunctionValue(t){return null!=t&&"object"==typeof t&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(null==t||"$$"===t){const t=s[0];return null==t?null:t.clone()}if("string"==typeof t){const n=e.primaryRasterIds.indexOf(t);return-1===n?null:s[n]}if("number"==typeof t){const e=s[0];if(null==e)return null;const{width:n,height:r,pixelType:o}=e,i=new Float32Array(n*r);i.fill(t);const a=this.sourceRasterInfos[0].bandCount,u=new Array(a).fill(i);return new b({width:n,height:r,pixelType:o,pixels:u})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:s,statistics:n,histograms:r}=t,o=s.BandProperties;o&&o.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),n&&n.length!==e&&(t.statistics=n.length>e?n.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:"string"==typeof s.BAND_COUNT?String(e):e})}};s([n({json:{write:!0}})],st.prototype,"functionName",void 0),s([n({json:{write:!0}})],st.prototype,"functionArguments",void 0),s([n()],st.prototype,"rasterArgumentNames",void 0),s([n({json:{write:!0}}),i((t=>t?.toLowerCase()))],st.prototype,"outputPixelType",void 0),s([n({json:{write:!0}})],st.prototype,"mainPrimaryRasterId",void 0),s([n()],st.prototype,"sourceRasters",void 0),s([n({type:[D],json:{write:!0}})],st.prototype,"sourceRasterInfos",void 0),s([n({json:{write:!0}})],st.prototype,"rasterInfo",void 0),s([n({json:{write:!0}})],st.prototype,"readingBufferSize",void 0),s([n({json:{write:!0}})],st.prototype,"id",void 0),s([n()],st.prototype,"isNoopProcess",void 0),s([n()],st.prototype,"supportsGPU",null),s([n()],st.prototype,"rawInputBandIds",void 0),s([n()],st.prototype,"rawSourceRasterInfos",void 0),s([n()],st.prototype,"isInputBandIdsSwizzled",void 0),s([n()],st.prototype,"swizzledBandSelection",void 0),s([n()],st.prototype,"isBranch",void 0),s([n({readOnly:!0})],st.prototype,"flatWebGLFunctionChain",null),s([n()],st.prototype,"_bindingResult",void 0),st=s([r("esri.layers.support.rasterFunctions.BaseRasterFunction")],st);const nt=st,rt={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},ot={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},it={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},at={setNull:50,conditional:78},ut={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65,...ot,...it,majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75,...at},lt=new Map([[it.acos,{domain:[0,Math.PI],isInteger:!1}],[it.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[it.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[it.cos,{domain:[-1,1],isInteger:!1}],[it.sin,{domain:[-1,1],isInteger:!1}],[ot.booleanAnd,{domain:[0,1],isInteger:!0}],[ot.booleanNot,{domain:[0,1],isInteger:!0}],[ot.booleanOr,{domain:[0,1],isInteger:!0}],[ot.booleanXOr,{domain:[0,1],isInteger:!0}],[ot.equalTo,{domain:[0,1],isInteger:!0}],[ot.notEqual,{domain:[0,1],isInteger:!0}],[ot.greaterThan,{domain:[0,1],isInteger:!0}],[ot.greaterThanEqual,{domain:[0,1],isInteger:!0}],[ot.lessThan,{domain:[0,1],isInteger:!0}],[ot.lessThanEqual,{domain:[0,1],isInteger:!0}],[ot.isNull,{domain:[0,1],isInteger:!0}]]);function ct(t){return lt.get(t)}const pt=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function ht(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]+r[a]);return i}function mt(t,e,s){const[n]=t,r=n.length,o=b.createEmptyBand("f32",r);return o.set(n),o}function ft(t,e,s){const[n]=t,r=n.length,o=b.createEmptyBand(s,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=n[i]*n[i]);return o}function dt(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]-r[a]);return i}function gt(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]*r[a]);return i}function yt(t,e,s){const[n]=t,r=n.length,o=b.createEmptyBand(s,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=Math.sign(n[i])*Math.floor(Math.abs(n[i])));return o}function vt(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]/r[a]);return i}function xt(t,e,s){return vt(t,e,"f32")}function wt(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=Math.floor(n[a]/r[a]));return i}function bt(t,e,s,n){const r=t[0],o=r.length,i=b.createEmptyBand(s,o);if(n===it.atanh){for(let t=0;t<o;t++)if(e[t]){const s=r[t];Math.abs(s)>=1?e[t]=0:i[t]=Math.atanh(s)}return i}const a=n===it.asin?Math.asin:Math.acos;for(let u=0;u<o;u++)if(e[u]){const t=r[u];Math.abs(t)>1?e[u]=0:i[u]=a(t)}return i}function At(t,e,s,n){const[r]=t,o=r.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n(r[a]));return i}function Tt(t,e,s,n){const[r,o]=t,i=r.length,a=b.createEmptyBand(s,i);for(let u=0;u<i;u++)e&&!e[u]||(a[u]=n(r[u],o[u]));return a}function Pt(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]&r[a]);return i}function Ft(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]<<r[a]);return i}function Nt(t,e,s){const[n]=t,r=n.length,o=b.createEmptyBand(s,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=~n[i]);return o}function It(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]|r[a]);return i}function Rt(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]>>r[a]);return i}function Ct(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]^r[a]);return i}function _t(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]&&r[a]?1:0);return i}function kt(t,e,s){const[n]=t,r=n.length,o=b.createEmptyBand(s,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=n[i]?0:1);return o}function Bt(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]||r[a]?1:0);return i}function St(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=(n[a]?1:0)^(r[a]?1:0));return i}function jt(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]===r[a]?1:0);return i}function Mt(t,e,s,n){const[r]=t,o=r.length,i=b.createEmptyBand(s,o),a=n===Math.E;for(let u=0;u<o;u++)e&&!e[u]||(i[u]=a?Math.exp(r[u]):n**r[u]);return i}function Dt(t,e,s){return Mt(t,e,s,10)}function Ot(t,e,s){return Mt(t,e,s,2)}function Gt(t,e,s){return Mt(t,e,s,Math.E)}function zt(t,e,s,n){const[r]=t,o=r.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(r[a]<=0?e[a]=0:i[a]=n(r[a]));return i}function Et(t,e,s){return zt(t,e,s,Math.log10)}function Vt(t,e,s){return zt(t,e,s,Math.log2)}function Ut(t,e,s){return zt(t,e,s,Math.log)}function Lt(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]>r[a]?1:0);return i}function Wt(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]>=r[a]?1:0);return i}function qt(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]<r[a]?1:0);return i}function Ht(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]<=r[a]?1:0);return i}function Xt(t,e,s){const[n]=t,r=n.length,o=b.createEmptyBand(s,r);if(!e)return o;for(let i=0;i<r;i++)o[i]=e[i]?0:1;return o}function $t(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]%r[a]);return i}function Jt(t,e,s){const[n]=t,r=n.length,o=b.createEmptyBand(s,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=-n[i]);return o}function Kt(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]===r[a]?0:1);return i}function Yt(t,e,s){const[n,r]=t,o=n.length,i=b.createEmptyBand(s,o),a=new Uint8Array(o);for(let u=0;u<o;u++)null!=e&&!e[u]||0!==n[u]||(i[u]=r[u],a[u]=255);return{band:i,mask:a}}function Zt(t,e,s){const[n,r,o]=t,i=n.length,a=b.createEmptyBand(s,i);for(let u=0;u<i;u++)e&&!e[u]||(a[u]=n[u]?r[u]:o[u]);return a}function Qt(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)if(!e||e[a]){let e=r[a];for(let s=1;s<n;s++){const n=t[s][a];e<n&&(e=n)}i[a]=e}return i}function te(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)if(!e||e[a]){let e=r[a];for(let s=1;s<n;s++){const n=t[s][a];e>n&&(e=n)}i[a]=e}return i}function ee(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)if(!e||e[a]){let e=r[a],s=e;for(let r=1;r<n;r++){const n=t[r][a];s<n?s=n:e>n&&(e=n)}i[a]=s-e}return i}function se(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)if(!e||e[a]){let e=0;for(let s=0;s<n;s++)e+=t[s][a];i[a]=e/n}return i}function ne(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)if(!e||e[a])for(let e=0;e<n;e++){const s=t[e];i[a]+=s[a]}return i}function re(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)if(!e||e[a]){const e=new Float32Array(n);let s=0;for(let o=0;o<n;o++){const n=t[o];s+=n[a],e[o]=n[a]}s/=n;let r=0;for(let t=0;t<n;t++)r+=(e[t]-s)**2;i[a]=Math.sqrt(r/n)}return i}function oe(t,e,s){const n=t.length;if(n<2)return t[0];const r=Math.floor(n/2),[o]=t,i=o.length,a=b.createEmptyBand(s,i),u=new Float32Array(n),l=n%2==1;for(let c=0;c<i;c++)if(!e||e[c]){for(let e=0;e<n;e++)u[e]=t[e][c];u.sort(),a[c]=l?u[r]:(u[r]+u[r-1])/2}return a}function ie(t,e,s){const[n,r]=t;if(null==r)return n;const o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)e[a]&&(n[a]===r[a]?i[a]=n[a]:e[a]=0);return i}function ae(t,e,s){const n=t.length;if(n<=2)return ie(t,e,s);const r=t[0].length,o=b.createEmptyBand(s,r),i=new Map;for(let a=0;a<r;a++)if(!e||e[a]){let e;i.clear();for(let o=0;o<n;o++)e=t[o][a],i.set(e,i.has(e)?i.get(e)+1:1);let s=0,r=0;for(const t of i.keys())s=i.get(t),s>r&&(r=s,e=t);o[a]=e}return o}function ue(t,e,s){const n=t.length;if(n<=2)return ie(t,e,s);const r=t[0].length,o=b.createEmptyBand(s,r),i=new Map;for(let a=0;a<r;a++)if(!e||e[a]){let e;i.clear();for(let o=0;o<n;o++)e=t[o][a],i.set(e,i.has(e)?i.get(e)+1:1);let s=0,r=t.length;for(const t of i.keys())s=i.get(t),s<r&&(r=s,e=t);o[a]=e}return o}function le(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=b.createEmptyBand(s,o),a=new Set;for(let u=0;u<o;u++)if(!e||e[u]){let e;a.clear();for(let s=0;s<n;s++)e=t[s][u],a.add(e);i[u]=a.size}return i}const ce=new Map,pe=new Map,he=new Map,me=new Map;function fe(t,e,s,n){let[r,o]=T(s);const i=A(s);i&&(r-=1e-5,o+=1e-5);for(let a=0;a<e.length;a++)if(e[a]){const s=t[a];isNaN(s)||s<r||s>o?e[a]=0:n[a]=i?Math.round(s):s}}function de(t,e,s={}){ce.size||(ce.set(4,Math.sqrt),ce.set(6,Math.acos),ce.set(7,Math.asin),ce.set(8,Math.atan),ce.set(9,Math.atanh),ce.set(10,Math.abs),ce.set(21,Math.cos),ce.set(22,Math.cosh),ce.set(48,Math.floor),ce.set(49,Math.ceil),ce.set(51,Math.sin),ce.set(52,Math.sinh),ce.set(56,Math.tan),ce.set(57,Math.tanh),ce.set(59,Math.acosh),ce.set(60,Math.asinh),ce.set(65,Math.floor),pe.set(5,Math.pow),pe.set(61,Math.atan2),he.set(1,ht),he.set(2,dt),he.set(3,gt),he.set(11,Pt),he.set(12,Ft),he.set(13,Nt),he.set(14,It),he.set(15,Rt),he.set(16,Ct),he.set(17,_t),he.set(18,kt),he.set(19,Bt),he.set(20,St),he.set(23,vt),he.set(24,jt),he.set(25,Gt),he.set(26,Dt),he.set(27,Ot),he.set(28,Lt),he.set(29,Wt),he.set(30,yt),he.set(31,Xt),he.set(32,mt),he.set(33,qt),he.set(34,Ht),he.set(35,Ut),he.set(36,Et),he.set(37,Vt),he.set(44,$t),he.set(45,Jt),he.set(46,Kt),he.set(53,ft),he.set(64,xt),he.set(65,wt),he.set(76,Zt),he.set(78,Zt),me.set(38,ae),me.set(39,Qt),me.set(40,se),me.set(41,oe),me.set(42,te),me.set(43,ue),me.set(47,ee),me.set(54,re),me.set(55,ne),me.set(58,le),me.set(66,ae),me.set(67,Qt),me.set(68,se),me.set(69,oe),me.set(70,te),me.set(71,ue),me.set(72,ee),me.set(73,re),me.set(74,ne),me.set(75,le));let n=function(t,e=!1){const s=t.map((t=>t.mask)),n=s.filter((t=>null!=t)),r=t[0].pixels[0].length;if(0===n.length||e&&n.length!==s.length)return new Uint8Array(r).fill(255);const o=n[0],i=new Uint8Array(o);if(1===n.length)return i;if(!e){for(let t=1;t<n.length;t++){const e=n[t];for(let t=0;t<i.length;t++)i[t]&&(i[t]=e[t]?255:0)}return i}for(let a=1;a<n.length;a++){const t=n[a];for(let e=0;e<i.length;e++)0===i[e]&&(i[e]=t[e]?255:0)}return i}(t,e>=66&&e<=75);const{outputPixelType:r="f32"}=s,o=!me.has(e)||s.processAsMultiband,i=o?t[0].pixels.length:1,a=[];for(let l=0;l<i;l++){const s=me.has(e)&&!o?t.flatMap((t=>t.pixels)):t.map((t=>t.pixels[l]));let i,u=!0;if(e===at.setNull){const t=Yt(s,n,r);i=t.band,n=t.mask,u=!1}else he.has(e)?i=he.get(e)(s,n,"f64"):ce.has(e)?i=e===it.asin||e===it.acos||e===it.atanh?bt(s,n,"f64",e):At(s,n,"f64",ce.get(e)):pe.has(e)?i=Tt(s,n,"f64",pe.get(e)):me.has(e)?i=me.get(e)(s,n,"f64"):(i=s[0],u=!1);if(u&&e!==ot.isNull&&!lt.has(e)){const t=b.createEmptyBand(r,i.length);n||(n=new Uint8Array(i.length).fill(255)),fe(i,n,r,t),i=t}a.push(i)}const u=t[0];return new b({width:u.width,height:u.height,pixelType:r,mask:e===ot.isNull?null:n,pixels:a})}let ge=class extends nt{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e?.[0]||null==e?.[1]?null:function(t,e,s){return de(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:s})}(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[n,r]=T(s);const o=A(s);return o&&(n-=1e-4,r+=1e-4),{imageCount:2,operationName:e,domainRange:[n,r],isOutputRounded:o}}};s([n({json:{write:!0,name:"rasterFunction"}})],ge.prototype,"functionName",void 0),s([n({type:tt,json:{write:!0,name:"rasterFunctionArguments"}})],ge.prototype,"functionArguments",void 0),s([n()],ge.prototype,"rasterArgumentNames",void 0),ge=s([r("esri.layers.support.rasterFunctions.ArithmeticFunction")],ge);const ye=ge;var ve;let xe=ve=class extends Y{clone(){return new ve({raster:this.raster})}};xe=ve=s([r("esri.layers.support.rasterFunctions.AspectFunctionArguments")],xe);const we=xe;let be=class extends nt{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.histograms=null,e.colormap=null,e.attributeTable=null,e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{extent:s,primaryPixelSizes:n}=t,r=n?.[0],o=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return O(e,{resolution:o})}};s([n({json:{write:!0,name:"rasterFunction"}})],be.prototype,"functionName",void 0),s([n({type:we,json:{write:!0,name:"rasterFunctionArguments"}})],be.prototype,"functionArguments",void 0),s([n()],be.prototype,"rasterArgumentNames",void 0),s([n({json:{write:!0}})],be.prototype,"isGCS",void 0),be=s([r("esri.layers.support.rasterFunctions.AspectFunction")],be);const Ae=be,Te=new Set(["+","-","*","/","(",")"]);function Pe(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function Fe(t,e,s,n){if("number"==typeof s&&"number"==typeof n)return s+n;let r,o,i;"number"==typeof s?(i=n,r=i.length,o=new Float32Array(r),o.fill(s)):(r=s.length,o=s,n.constructor===Number?(i=new Float32Array(r),i.fill(n)):i=n);const a=new Float32Array(r);switch(e){case"+":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]+i[e]);break;case"-":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]-i[e]);break;case"*":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]*i[e]);break;case"/":for(let e=0;e<r;e++)(null==t||t[e])&&i[e]&&(a[e]=o[e]/i[e]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return a}function Ne(t,e){t.splice(e,1);let s=0,n=0;do{s=0,n=0;for(let e=0;e<t.length;e++)if("("===t[e])s=e;else if(")"===t[e]){n=e;break}n===s+1&&t.splice(s,2)}while(n===s+1);return t}function Ie(t){if(1===t.length)return{opIndex:0,numIndex:0};let e=0,s=0;for(let i=0;i<t.length;i++)if("("===t[i])e=i;else if(")"===t[i]){s=i;break}const n=0===s?t:t.slice(e+1,s);let r=-1;for(let i=0;i<n.length;i++)if("*"===n[i]||"/"===n[i]){r=i;break}if(r>-1)s>0&&(r+=e+1);else{for(let t=0;t<n.length;t++)if("+"===n[t]||"-"===n[t]){r=t;break}s>0&&(r+=e+1)}let o=0;for(let i=0;i<r;i++)"("===t[i]&&o++;return{opIndex:r,numIndex:r-o}}function Re(t,e,s){let n,{ops:r,nums:o}=function(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1,t.length));const s=t.split(""),n=[],r=[];let o="";for(let i=0;i<s.length;i++){const t=s[i];Te.has(t)?(o.length&&r.push(Pe(o,e)),n.push(t),o=""):o=o.concat(t)}return o.length&&r.push(Pe(o,e)),{ops:n,nums:r}}(s,e);if(0===r.length){const t=1===o.length?o[0]:e[0];if(t instanceof Float32Array)return[t];const s=new Float32Array(e[0].length);return"number"==typeof t?s.fill(t):s.set(t),[s]}for(;r.length>0;){const{numIndex:e,opIndex:s}=Ie(r);if(n=Fe(t,r[s],o[e],o[e+1]),1===r.length)break;r=Ne(r,s),o.splice(e,2,n)}return[n]}const Ce=new a({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function _e(t,e){if(!P(t))return t;const{equation:s,method:n}=e,r=e.bandIndexes.map((t=>t-1)),{pixels:o,mask:i}=t;let a;switch(n){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":a=Be(i,o[r[0]],o[r[1]]);break;case"ndwi":a=Be(i,o[r[1]],o[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":a=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o];n&&(r[o]=t/n)}return[r]}(i,o[r[0]],o[r[1]]);break;case"ci-g":case"ci-re":a=function(t,e,s){const n=e.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o];n&&(r[o]=t/n-1)}return[r]}(i,o[r[0]],o[r[1]]);break;case"savi":a=function(t,e,s,n){const r=s.length,o=new Float32Array(r);for(let i=0;i<r;i++)if(null==t||t[i]){const t=s[i],r=e[i],a=r+t+n;a&&(o[i]=(r-t)/a*(1+n))}return[o]}(i,o[r[0]],o[r[1]],r[2]+1);break;case"tsavi":a=function(t,e,s,n,r,o){const i=s.length,a=new Float32Array(i),u=-r*n+o*(1+n*n);for(let l=0;l<i;l++)if(null==t||t[l]){const t=s[l],o=e[l],i=r*o+t+u;i&&(a[l]=n*(o-n*t-r)/i)}return[a]}(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":a=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=s[o],n=e[o],i=2*n+1;r[o]=.5*(i-Math.sqrt(i*i-8*(n-t)))}return[r]}(i,o[r[0]],o[r[1]]);break;case"gemi":a=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=s[o],n=e[o];if(1!==t&&n+t+.5!==0){const e=(2*(n*n-t*t)+1.5*n+.5*t)/(n+t+.5);r[o]=e*(1-.25*e)-(t-.125)/(1-t)}}return[r]}(i,o[r[0]],o[r[1]]);break;case"pvi":a=function(t,e,s,n,r){const o=s.length,i=new Float32Array(o),a=1/Math.sqrt(1+n*n);for(let u=0;u<o;u++)if(null==t||t[u]){const t=s[u],o=e[u];i[u]=(o-n*t-r)*a}return[i]}(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1);break;case"gvitm":a=function(t,e){const[s,n,r,o,i,a]=e,u=s.length,l=new Float32Array(u);for(let c=0;c<u;c++)(null==t||t[c])&&(l[c]=-.2848*s[c]-.2435*n[c]-.5436*r[c]+.7243*o[c]+.084*i[c]-.18*a[c]);return[l]}(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]],o[r[5]]]);break;case"sultan":a=function(t,e){const[s,n,r,o,i]=e,a=s.length,u=new Float32Array(a),l=new Float32Array(a),c=new Float32Array(a);for(let p=0;p<a;p++)(null==t||t[p])&&(u[p]=i[p]?o[p]/i[p]*100:0,l[p]=s[p]?o[p]/s[p]*100:0,c[p]=r[p]?n[p]/r[p]*(o[p]/r[p])*100:0);return[u,l,c]}(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]]]);break;case"vari":a=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=s[a],e=n[a],o=e+t-r[a];o&&(i[a]=(e-t)/o)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"mtvi2":a=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=s[a],e=n[a],o=r[a],u=Math.sqrt((2*t+1)**2-(6*t-5*Math.sqrt(e))-.5);if(u){const s=1.5*(1.2*(t-o)-2.5*(e-o));i[a]=s/u}}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"rtvi-core":a=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=s[a],e=n[a],o=r[a];i[a]=100*(t-e)-10*(t-o)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"evi":a=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=s[a],e=n[a],o=t+6*e-7.5*r[a]+1;o&&(i[a]=2.5*(t-e)/o)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"wndwi":a=function(t,e,s=.5){const[n,r,o]=e,i=r.length,a=new Float32Array(i);for(let u=0;u<i;u++)if(null==t||t[u])for(u=0;u<i;u++){const t=n[u],e=r[u],i=o[u],l=t+s*e+(1-s)*i;l&&(a[u]=(t-s*e-(1-s)*i)/l)}return[a]}(i,[o[r[0]],o[r[1]],o[r[2]]],r[3]?r[3]+1:.5);break;case"bai":a=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o])for(o=0;o<n;o++){const t=(.1-e[o])**2+(.06-s[o])**2;t&&(r[o]=1/t)}return[r]}(i,o[r[0]],o[r[1]]);break;case"custom":a=Re(i,o,s);break;default:return t}const u=null!=i?new Uint8Array(i.length):null;null!=i&&null!=u&&u.set(i);const l=new b({width:t.width,height:t.height,pixelType:"f32",pixels:a,mask:u});return l.updateStatistics(),l}function ke(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function Be(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o],i=t+n;i&&(r[o]=(t-n)/i)}return[r]}var Se;let je=Se=class extends Y{constructor(){super(...arguments),this.method="custom"}clone(){return new Se({method:this.method,bandIndexes:this.bandIndexes,raster:l(this.raster)})}};s([n({json:{type:String,write:!0}})],je.prototype,"bandIndexes",void 0),s([u(Ce)],je.prototype,"method",void 0),je=Se=s([r("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],je);const Me=je,De=new Set(["vari","mtvi2","rtvi-core","evi"]);let Oe=class extends nt{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount="sultan"===this.functionArguments.method?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{method:s,bandIndexes:n}=this.functionArguments,r=n.split(" ").map((t=>parseFloat(t)));return _e(e,{method:s,bandIndexes:r,equation:n})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1));2===t.length&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,n;const r=new Float32Array(3),{method:o}=this.functionArguments;switch(o){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=ke([e[0],e[1],0]),n="ndxi";break;case"ndwi":s=ke([e[1],e[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=ke([e[0],e[1],0]),n="sr";break;case"ci-g":case"ci-re":s=ke([e[0],e[1],0]),n="ci";break;case"savi":s=ke([e[0],e[1],0]),n="savi",r[0]=t[2]+1;break;case"tsavi":s=ke([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":s=ke([e[0],e[1],0]),n="msavi";break;case"gemi":s=ke([e[0],e[1],0]),n="gemi";break;case"pvi":s=ke([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":s=ke([e[0],e[1],e[2]]),n="vari";break;case"mtvi2":s=ke([e[0],e[1],e[2]]),n="mtvi";break;case"rtvi-core":s=ke([e[0],e[1],e[2]]),n="rtvicore";break;case"evi":s=ke([e[0],e[1],e[2]]),n="evi";break;case"wndwi":s=ke([e[0],e[1],0]),n="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":s=ke([e[1],e[0],0]),n="bai";break;default:s=ke([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:r}}_getInputBandIds(t){if("custom"===this.functionArguments.method)return t;const e=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1)),s=t.length,n=e.map((t=>t>=s?s-1:t)),r=De.has(this.functionArguments.method)?3:2,o=n.slice(0,r).map((e=>t[e]));return 2===o.length&&o.push(0),o}};s([n({json:{write:!0,name:"rasterFunction"}})],Oe.prototype,"functionName",void 0),s([n({type:Me,json:{write:!0,name:"rasterFunctionArguments"}})],Oe.prototype,"functionArguments",void 0),s([n()],Oe.prototype,"rasterArgumentNames",void 0),Oe=s([r("esri.layers.support.rasterFunctions.BandArithmeticFunction")],Oe);const Ge=Oe;var ze;const Ee=new a({1:"outside",2:"inside"},{useNumericKeys:!0});let Ve=ze=class extends Y{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new ze({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};s([n({types:c,json:{read:p,write:!0}})],Ve.prototype,"clippingGeometry",void 0),s([n({json:{read:Ee.read,write:Ee.write}})],Ve.prototype,"clippingType",void 0),Ve=ze=s([r("esri.layers.support.rasterFunctions.ClipFunctionArguments")],Ve);const Ue=Ve;let Le=class extends nt{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};s([n({json:{write:!0,name:"rasterFunction"}})],Le.prototype,"functionName",void 0),s([n({type:Ue,json:{write:!0,name:"rasterFunctionArguments"}})],Le.prototype,"functionArguments",void 0),s([n()],Le.prototype,"rasterArgumentNames",void 0),s([n()],Le.prototype,"isNoopProcess",void 0),Le=s([r("esri.layers.support.rasterFunctions.ClipFunction")],Le);const We=Le;var qe;let He=qe=class extends Y{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return z.includes(e)?e:null}readColorRamp(t){return f(t)}readColorRampName(t,e){if(!t)return null;const s=G.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return s?G.fromJSON(s):null}clone(){return new qe({colormap:l(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};s([n({type:[[Number]],json:{write:!0}})],He.prototype,"colormap",void 0),s([n({type:String,json:{write:!0}})],He.prototype,"colormapName",void 0),s([i("colormapName")],He.prototype,"castColormapName",null),s([n({types:h,json:{write:!0}})],He.prototype,"colorRamp",void 0),s([m("colorRamp")],He.prototype,"readColorRamp",null),s([n({type:G.apiValues,json:{type:G.jsonValues,write:G.write}})],He.prototype,"colorRampName",void 0),s([m("colorRampName")],He.prototype,"readColorRampName",null),He=qe=s([r("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],He);const Xe=He,$e=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],Je=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Ke(t,e){const s=[],n=[];for(let o=0;o<t.length-1;o++)s.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[o].slice(1),toColor:t[o+1].slice(1)}),n.push(t[o+1][0]-t[o][0]);const r=t[t.length-1][0];return E({type:"multipart",colorRamps:s},{numColors:r,weights:e=e??n})}function Ye(t){let e;switch(t){case"elevation":e=Ke([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]]);break;case"gray":e=E({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]});break;case"hillshade":e=Ke([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495]);break;case"ndvi":e=$e;break;case"ndvi2":e=function(){const t=Ke([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}();break;case"ndvi3":e=Je;break;case"random":e=function(){const t=[];for(let e=0;e<256;e++){const e=[];for(let t=0;t<3;t++)e.push(Math.round(255*Math.random()));t.push(e)}return t}()}return e?(e=e.map(((t,e)=>[e,...t])),e):null}let Ze=class extends nt{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:n,colorRampName:r}=this.functionArguments;if(!e?.length)if(n)e=V(n,{interpolateAlpha:!0});else if(r){const t=U(r);t&&(e=V(t))}else s&&(e=Ye(s));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const o=this._getOutputPixelType(t.pixelType);this.outputPixelType=o.startsWith("f")?"s32":o;const i=t.clone();return i.pixelType=this.outputPixelType,i.colormap=e,i.bandCount=1,this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||A(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};s([n({json:{write:!0,name:"rasterFunction"}})],Ze.prototype,"functionName",void 0),s([n({type:Xe,json:{write:!0,name:"rasterFunctionArguments"}})],Ze.prototype,"functionArguments",void 0),s([n()],Ze.prototype,"rasterArgumentNames",void 0),s([n()],Ze.prototype,"isNoopProcess",void 0),s([n({json:{write:!0}})],Ze.prototype,"indexedColormap",void 0),Ze=s([r("esri.layers.support.rasterFunctions.ColormapFunction")],Ze);const Qe=Ze;var ts;let es=ts=class extends Y{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new ts({rasters:l(this.rasters)})}};s([n({json:{write:!0}})],es.prototype,"rasters",void 0),s([d("rasters")],es.prototype,"writeRasters",null),es=ts=s([r("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],es);const ss=es;let ns=class extends nt{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map((({bandCount:t})=>t)).reduce(((t,e)=>t+e)),t.every((({statistics:t})=>null!=t&&t.length))){const e=[];t.forEach((({statistics:t})=>null!=t&&e.push(...t))),s.statistics=e}if(t.every((({histograms:t})=>null!=t&&t.length))){const e=[];t.forEach((({histograms:t})=>null!=t&&e.push(...t))),s.histograms=e}s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const n=t.every((t=>t.keyProperties.BandProperties?.length))?t.flatMap((t=>t.keyProperties.BandProperties)):void 0;return s.keyProperties={...s.keyProperties,BandProperties:n},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;if(!e)return null;const s=e?.[0];return null==s?null:F(e)}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};s([n({json:{write:!0,name:"rasterFunction"}})],ns.prototype,"functionName",void 0),s([n({type:ss,json:{write:!0,name:"rasterFunctionArguments"}})],ns.prototype,"functionArguments",void 0),s([n()],ns.prototype,"rasterArgumentNames",void 0),ns=s([r("esri.layers.support.rasterFunctions.CompositeBandFunction")],ns);const rs=ns;var os;let is=os=class extends Y{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new os({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};s([n({json:{write:!0}})],is.prototype,"contrastOffset",void 0),s([n({json:{write:!0}})],is.prototype,"brightnessOffset",void 0),is=os=s([r("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],is);const as=is;let us=class extends nt{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if("u8"!==e.pixelType)return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:n,brightnessOffset:r}=this.functionArguments;return this.lookup=L(n,r),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:N(e,{lut:e.pixels.map((()=>this.lookup)),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};s([n({json:{write:!0,name:"rasterFunction"}})],us.prototype,"functionName",void 0),s([n({type:as,json:{write:!0,name:"rasterFunctionArguments"}})],us.prototype,"functionArguments",void 0),s([n()],us.prototype,"rasterArgumentNames",void 0),s([n({json:{write:!0}})],us.prototype,"lookup",void 0),us=s([r("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],us);const ls=us;function cs(t,e,s,n,r){const o=Math.floor(n/2);for(let a=0;a<o;a++)for(let n=0;n<e;n++)t[a*e+n]=t[(r-1-a)*e+n],t[(s-1-a)*e+n]=t[(s-r+a)*e+n];const i=Math.floor(r/2);for(let a=0;a<s;a++){const s=a*e;for(let n=0;n<i;n++)t[s+n]=t[s+r-1-n],t[s+e-n-1]=t[s+e+n-r]}}const ps=new Map;function hs(t,e,s,n,r,o,i){const a=new Float32Array(e*s),u=o.length,l=i?0:n,c=i?n:0,p=i?1:e;for(let h=l;h<s-l;h++){const s=h*e;for(let i=c;i<e-c;i++){if(r&&!r[s+i])continue;let e=0;for(let r=0;r<u;r++)e+=t[s+i+(r-n)*p]*o[r];a[s+i]=e}}return a}function ms(t,e,s,n,r,o,i){const a=new Float32Array(e*s),u=Math.floor(n/2),l=Math.floor(r/2);for(let c=u;c<s-u;c++){const s=c*e;for(let c=l;c<e-l;c++){if(o&&!o[s+c])continue;let p=0;for(let o=0;o<n;o++)for(let n=0;n<r;n++)p+=t[s+c+(o-u)*e+n-l]*i[o*r+n];a[s+c]=p}}return a}function fs(t,e){const s=function(t){const e=Math.sqrt(t.length),s=t.slice(0,e),n=[1];for(let r=1;r<e;r++){let s=null;for(let n=0;n<e;n++){const o=t[n+r*e],i=t[n];if(null==s)if(0===i){if(o)return{separable:!1,row:null,col:null}}else s=o/i;else if(o/i!==s)return{separable:!1,row:null,col:null}}if(null==s)return{separable:!1,row:null,col:null};n.push(s)}return{separable:!0,row:s,col:n}}(e.kernel),n=!1!==e.mirrorEdges,r=s.separable?function(t,e,s,n=!0){const{pixels:r,width:o,height:i,pixelType:a,mask:u}=t,l=r.length,c=[],p=e.length,h=s.length,m=Math.floor(p/2),f=Math.floor(h/2);for(let d=0;d<l;d++){let t=hs(r[d],o,i,m,u,e,!0);t=hs(t,o,i,f,u,s,!1),n&&cs(t,o,i,p,h),c.push(t)}return new b({width:o,height:i,pixelType:a,pixels:c,mask:u})}(t,s.row,s.col,n):function(t,e,s=!0){const{pixels:n,width:r,height:o,pixelType:i,mask:a}=t,u=n.length,l=[],{kernel:c,rows:p,cols:h}=e;for(let m=0;m<u;m++){const t=ms(n[m],r,o,p,h,a,c);s&&cs(t,r,o,p,h),l.push(t)}return new b({width:r,height:o,pixelType:i,pixels:l,mask:a})}(t,e,n),{outputPixelType:o}=e;return o&&r.clamp(o),r}var ds;ps.set(rt.none,[0,0,0,0,1,0,0,0,0]),ps.set(rt.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),ps.set(rt.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),ps.set(rt.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),ps.set(rt.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),ps.set(rt.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),ps.set(rt.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),ps.set(rt.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),ps.set(rt.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),ps.set(rt.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),ps.set(rt.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),ps.set(rt.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),ps.set(rt.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),ps.set(rt.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),ps.set(rt.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),ps.set(rt.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),ps.set(rt.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),ps.set(rt.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),ps.set(rt.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),ps.set(rt.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),ps.set(rt.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),ps.set(rt.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),ps.set(rt.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);let gs=ds=class extends Y{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=ps.get(t);if(!e||t===rt.userDefined||t===rt.none)return;const s=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",s),this._set("rows",s)}clone(){return new ds({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:l(this.raster)})}};s([n({json:{type:Number,write:!0}})],gs.prototype,"rows",void 0),s([n({json:{type:Number,write:!0}})],gs.prototype,"cols",void 0),s([n({json:{name:"type",type:Number,write:!0}})],gs.prototype,"convolutionType",null),s([n({json:{type:[Number],write:!0}})],gs.prototype,"kernel",void 0),gs=ds=s([r("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],gs);const ys=gs;let vs=class extends nt{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce(((t,e)=>t+e));return-1===e||0===s||1===s?t:t.map((t=>t/s))}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:n}=this.functionArguments;if(!Object.values(rt).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==rt.none&&e*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const o=r.clone();o.pixelType=this.outputPixelType;const i=[rt.none,rt.sharpen,rt.sharpen2,rt.sharpening3x3,rt.sharpening5x5];return(-1===t||"u8"!==this.outputPixelType&&!i.includes(t))&&(o.statistics=null,o.histograms=null),o.colormap=null,o.attributeTable=null,this.rasterInfo=o,{success:!0,supportsGPU:n.length<=25}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e||this.functionArguments.convolutionType===rt.none)return e;const{rows:s,cols:n}=this.functionArguments,{_normalizedKernel:r}=this;return fs(e,{kernel:r,rows:s,cols:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(25);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:T(this.outputPixelType)}}};s([n({json:{write:!0,name:"rasterFunction"}})],vs.prototype,"functionName",void 0),s([n({type:ys,json:{write:!0,name:"rasterFunctionArguments"}})],vs.prototype,"functionArguments",void 0),s([n()],vs.prototype,"rasterArgumentNames",void 0),s([n()],vs.prototype,"_normalizedKernel",null),vs=s([r("esri.layers.support.rasterFunctions.ConvolutionFunction")],vs);const xs=vs;var ws;const bs=new a({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let As=ws=class extends Y{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return bs.fromJSON(e.type??e.curvatureType??0)}clone(){return new ws({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};s([n({json:{write:{target:"type"}}}),u(bs)],As.prototype,"curvatureType",void 0),s([m("curvatureType",["type","curvatureType"])],As.prototype,"readCurvatureType",null),s([n({type:Number,json:{write:!0}})],As.prototype,"zFactor",void 0),As=ws=s([r("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],As);const Ts=As;let Ps=class extends nt{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,curvatureType:n}=this.functionArguments,{extent:r,primaryPixelSizes:o}=t,i=o?.[0],a=i??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),u=this.isGCS&&s>=1?s*W:s;return q(e,{zFactor:u,curvatureType:n,resolution:a})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*W:t}}};s([n({json:{write:!0,name:"rasterFunction"}})],Ps.prototype,"functionName",void 0),s([n({type:Ts,json:{write:!0,name:"rasterFunctionArguments"}})],Ps.prototype,"functionArguments",void 0),s([n()],Ps.prototype,"rasterArgumentNames",void 0),s([n({json:{write:!0}})],Ps.prototype,"isGCS",void 0),Ps=s([r("esri.layers.support.rasterFunctions.CurvatureFunction")],Ps);const Fs=Ps;var Ns;let Is=Ns=class extends Y{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=I.bestMatch}clone(){return new Ns({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};s([n({json:{write:!0}})],Is.prototype,"bandIds",void 0),s([n({json:{write:!0}})],Is.prototype,"bandNames",void 0),s([n({json:{write:!0}})],Is.prototype,"bandWavelengths",void 0),s([u({0:"name",1:"wavelength",2:"id"})],Is.prototype,"method",void 0),s([n({json:{write:!0}})],Is.prototype,"missingBandAction",void 0),s([n({json:{write:!0}})],Is.prototype,"wavelengthMatchTolerance",void 0),Is=Ns=s([r("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],Is);const Rs=Is;let Cs=class extends nt{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:n,bandNames:r,bandWavelengths:o,bandIds:i,missingBandAction:a}=t,u=r?.length&&("name"===n||"id"!==n&&!i?.length),l=o?.length&&("wavelength"===n||"id"!==n&&!i?.length),c=a===I.fail,p=u?this._matchBandNames(s,r):l?this._matchBandWavelengths(s,o,c):this._matchBandIds(s,i,c);if(null==p)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":l?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=p,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const h=s.clone();h.pixelType=this.outputPixelType,h.bandCount=p.length;const{statistics:m,histograms:f}=h;null!=m&&m.length&&(h.statistics=p.map((t=>m[t]||m[m.length-1]))),null!=f&&f.length&&(h.histograms=p.map((t=>f[t]||f[f.length-1])));let d=h.keyProperties?.BandProperties;return d?.length&&(d=p.map((t=>t>=d.length?d[d.length-1]:d[t])),h.keyProperties={...h.keyProperties,BandProperties:d}),this.rasterInfo=h,{success:!0,supportsGPU:h.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const s=e.pixels.length,n=this.functionArguments.bandIds.map((t=>t>=s?s-1:t));return e.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:ke(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map((t=>t>=e?e-1:t)).map((e=>t[e]))}_matchBandNames(t,e){const s=t.bandInfos.map((({name:t})=>t.toLowerCase())),n=[];for(let r=0;r<e.length;r++){const t=e[r].toLowerCase();let o=s.indexOf(t);if(-1===o&&"nearinfrared"===t&&(o=s.findIndex((t=>t.startsWith("nearinfrared_1"))),-1===o&&(o=s.findIndex((t=>t.startsWith("nearinfrared"))))),-1===o)return null;n.push(o)}return n}_matchBandIds(t,e,s){const{bandCount:n}=t;return!e?.length||s&&e.some((t=>t<0||t>=n))?null:e}_matchBandWavelengths(t,e,s){const{bandInfos:n}=t,r=[];for(let a=0;a<n.length;a++){const{minWavelength:t,maxWavelength:e}=n[a];if(!t||!e)return null;r.push({minWavelength:t,maxWavelength:e})}const{wavelengthMatchTolerance:o}=this.functionArguments,i=[];for(let a=0;a<e.length;a++){const t=e[a];let n=!1,u=-1,l=Number.MAX_VALUE;for(let e=0;e<r.length;e++){const s=r[e],o=t>=s.minWavelength&&t<=s.maxWavelength,i=Math.abs(t-(s.minWavelength+s.maxWavelength)/2);o?i<l&&(n=!0,u=e,l=i):!n&&i<l&&(u=e,l=i)}if(!n&&o&&l<o&&(n=!0),!n&&s)return null;i.push(u)}return i}};s([n({json:{write:!0,name:"rasterFunction"}})],Cs.prototype,"functionName",void 0),s([n({type:Rs,json:{write:!0,name:"rasterFunctionArguments"}})],Cs.prototype,"functionArguments",void 0),s([n()],Cs.prototype,"rasterArgumentNames",void 0),Cs=s([r("esri.layers.support.rasterFunctions.ExtractBandFunction")],Cs);const _s=Cs;var ks;let Bs=ks=class extends Y{clone(){return new ks({conversionParameters:[...this.conversionParameters],raster:this.raster})}};s([n({type:[Number],json:{write:!0}})],Bs.prototype,"conversionParameters",void 0),Bs=ks=s([r("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],Bs);const Ss=Bs;let js=class extends nt{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce(((t,e)=>t+e));return t.map((t=>t/e))}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=3===t.length||3===e.bandCount&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:function(t,e,s){const{pixels:n,width:r,height:o,mask:i,bandMasks:a}=t,u=r*o,l=a?.length?b.combineBandMasks(a):i,c=Math.min(e.length,n.length),p=s.startsWith("f"),h=!p&&s!==t.pixelType,[m,f]=T(s),d=b.createEmptyBand(s,u);for(let y=0;y<o;y++){let t=y*r;for(let s=0;s<r;s++,t++)if(!l||l[t]){let s=0;for(let r=0;r<c;r++)s+=e[r]*n[r][t];p||(s=Math.round(s),h&&(s=s>f?f:s<m?m:s)),d[t]=s}}const g=new b({width:r,height:o,pixels:[d],pixelType:s,mask:l});return g.updateStatistics(),g}(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};s([n({json:{write:!0,name:"rasterFunction"}})],js.prototype,"functionName",void 0),s([n({type:Ss,json:{write:!0,name:"rasterFunctionArguments"}})],js.prototype,"functionArguments",void 0),s([n()],js.prototype,"rasterArgumentNames",void 0),s([n()],js.prototype,"_normalizedWeights",null),js=s([r("esri.layers.support.rasterFunctions.GrayscaleFunction")],js);const Ms=js;var Ds;let Os=Ds=class extends Y{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new Ds({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:l(this.rasters)})}};s([n({json:{write:!0}})],Os.prototype,"operation",void 0),s([n({json:{write:!0}})],Os.prototype,"rasters",void 0),s([d("rasters")],Os.prototype,"writeRasters",null),s([n({json:{write:!0}})],Os.prototype,"processAsMultiband",void 0),Os=Ds=s([r("esri.layers.support.rasterFunctions.LocalFunctionArguments")],Os);const Gs=Os;let zs=class extends nt{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some((t=>t.bandCount!==s)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:o}=this.functionArguments,i=pt[r];if(!(999===i||o.length===i||o.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};const a=e.clone();return a.bandCount=999!==i||n?s:1,this._removeStatsHistColormapVAT(a),this._updateStatistics(a),this._updatePixelType(a),this.rasterInfo=a,{success:!0,supportsGPU:1===a.bandCount&&i<=3&&(r<11||r>16)}}_processPixels(t){const{pixelBlocks:e}=t;return null==e||e.some((t=>null==t))?null:de(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=pt[t],s=Object.keys(ut).find((e=>ut[e]===t))?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[r,o]=T(n);const i=A(n);return i&&(r-=1e-4,o+=1e-4),{imageCount:e,operationName:s,domainRange:[r,o],isOutputRounded:i}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,n=ct(s)?.domain;if(n){t.statistics=[];for(let e=0;e<t.bandCount;e++)t.statistics[e]={min:n[0],max:n[1],avg:(n[0]+n[1])/2,stddev:(n[0]+n[1])/10}}else 45===s&&e.statistics?.length&&(t.statistics=e.statistics.map((t=>({min:-t.max,max:-t.min,avg:null!=t.avg?-t.avg:void 0,stddev:null!=t.stddev?-t.stddev:void 0}))))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,{domain:r,isInteger:o}=ct(n)??{domain:null,isInteger:!1};let i="f32";if(r&&o)i=R(r[0],r[1]);else if(30===n){const t=e?.[0];i=t?R(t.min,t.max):A(s)?s:"s32"}else if(45===n&&A(s)){const t=e?.map((({max:t})=>-t)),n=e?.map((({min:t})=>-t)),r=t?.length?Math.min(...t):null,o=n?.length?Math.min(...n):null;i=null!=r&&null!=o?R(r,o):s.startsWith("s")?s.replace("s","u"):"u1"===s||"u2"===s||"u4"===s?"s8":"u8"===s?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(i)}};s([n({json:{write:!0,name:"rasterFunction"}})],zs.prototype,"functionName",void 0),s([n({type:Gs,json:{write:!0,name:"rasterFunctionArguments"}})],zs.prototype,"functionArguments",void 0),s([n()],zs.prototype,"rasterArgumentNames",void 0),zs=s([r("esri.layers.support.rasterFunctions.LocalFunction")],zs);const Es=zs;var Vs;let Us=Vs=class extends Y{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=C.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const s=t.map((t=>{if("number"==typeof t)return e=!0,[t];if("string"==typeof t){const s=t.trim().split(" ").filter((t=>""!==t.trim())).map((t=>Number(t)));return e=e||s.length>0,0===s.length?null:s}return null}));return e?s:null}clone(){return new Vs({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};s([n({json:{write:!0}})],Us.prototype,"includedRanges",void 0),s([n({json:{write:!0}})],Us.prototype,"noDataValues",void 0),s([n()],Us.prototype,"normalizedNoDataValues",null),s([n({json:{write:!0}})],Us.prototype,"noDataInterpretation",void 0),Us=Vs=s([r("esri.layers.support.rasterFunctions.MaskFunctionArguments")],Us);const Ls=Us;let Ws=class extends nt{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!s?.length&&!n?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let i=0;i<t.bandCount;i++){const t=_(e,s?.slice(2*i,2*i+2),n?.[i]);if(null==t){r=null;break}r.push(t)}this.lookups=r;const o=null!=n&&n.every((t=>t?.length===n[0]?.length));return{success:!0,supportsGPU:(!s||s.length<=2*k)&&(!n||o&&n[0].length<=k)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:r,noDataInterpretation:o,normalizedNoDataValues:i}=this.functionArguments,a=o===C.matchAll;return B(e,{includedRanges:r,noDataValues:i,outputPixelType:s,matchAll:a,lookups:n})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(k);s.fill(g),e?.[0]?.length&&s.set(e[0]);const n=new Float32Array(k);for(let r=0;r<n.length;r+=2)n[r]=t?.[r]??-g,n[r+1]=t?.[r+1]??g;return t&&t.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};s([n({json:{write:!0,name:"rasterFunction"}})],Ws.prototype,"functionName",void 0),s([n({type:Ls,json:{write:!0,name:"rasterFunctionArguments"}})],Ws.prototype,"functionArguments",void 0),s([n()],Ws.prototype,"rasterArgumentNames",void 0),s([n({json:{write:!0}})],Ws.prototype,"lookups",void 0),Ws=s([r("esri.layers.support.rasterFunctions.MaskFunction")],Ws);const qs=Ws;var Hs;let Xs=Hs=class extends Y{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this;return new Hs({visibleBandID:t,infraredBandID:e,scientificOutput:s})}};s([n({json:{write:!0}})],Xs.prototype,"visibleBandID",void 0),s([n({json:{write:!0}})],Xs.prototype,"infraredBandID",void 0),s([n({json:{write:!0}})],Xs.prototype,"scientificOutput",void 0),Xs=Hs=s([r("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Xs);const $s=Xs;let Js=class extends nt{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const n=this.sourceRasterInfos[0],r=Math.max(e,s);if(n.bandCount<2||r>=n.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const o=n.clone();o.pixelType=this.outputPixelType,o.colormap=null,o.histograms=null,o.bandCount=1,o.keyProperties={...o.keyProperties,BandProperties:void 0};const[i,a,u,l]=t?[-1,1,0,.1]:[0,200,100,10];return o.statistics=[{min:i,max:a,avg:u,stddev:l}],this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:r}=this.functionArguments;return function(t,e,s,n){const{mask:r,pixels:o,width:i,height:a}=t,u=o[s],l=o[e],c=l.length,p=n?new Uint8Array(c):new Float32Array(c),h=n?100:1,m=n?100.5:0;for(let d=0;d<c;d++)if(null==r||r[d]){const t=u[d],e=l[d],s=t+e;s&&(p[d]=(t-e)/s*h+m)}const f=new b({width:i,height:a,mask:r,pixelType:n?"u8":"f32",pixels:[p]});return f.updateStatistics(),f}(e,s,n,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments;return{bandIndexMat3:ke(this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0]),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map((e=>t[e]))}};s([n({json:{write:!0,name:"rasterFunction"}})],Js.prototype,"functionName",void 0),s([n({type:$s,json:{write:!0,name:"rasterFunctionArguments"}})],Js.prototype,"functionArguments",void 0),s([n()],Js.prototype,"rasterArgumentNames",void 0),Js=s([r("esri.layers.support.rasterFunctions.NDVIFunction")],Js);const Ks=Js;var Ys;let Zs=Ys=class extends Y{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Ys({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};s([n({json:{write:!0}})],Zs.prototype,"inputRanges",void 0),s([n({json:{write:!0}})],Zs.prototype,"outputValues",void 0),s([n({json:{write:!0}})],Zs.prototype,"noDataRanges",void 0),s([n({json:{write:!0}})],Zs.prototype,"allowUnmatched",void 0),s([n({json:{write:!0}})],Zs.prototype,"isLastInputRangeInclusive",void 0),Zs=Ys=s([r("esri.layers.support.rasterFunctions.RemapFunctionArguments")],Zs);const Qs=Zs;let tn=class extends nt{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:s}=t,{allowUnmatched:n,outputValues:r,inputRanges:o,noDataRanges:i,isLastInputRangeInclusive:a}=this.functionArguments;if(null!=s&&s.length&&r?.length)if(n){const e=Math.min.apply(null,[...r,s[0].min]),n=Math.max.apply(null,[...r,s[0].max]);t.statistics=[{...s[0],min:e,max:n}]}else{let e=r[0],n=e;for(let t=0;t<r.length;t++)e=e>r[t]?r[t]:e,n=n>r[t]?n:r[t];t.statistics=[{...s[0],min:e,max:n}]}return this.rasterInfo=t,this.lookup=n?null:S({srcPixelType:e,inputRanges:o,outputValues:r,noDataRanges:i,allowUnmatched:n,isLastInputRangeInclusive:a,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!r||r.length<=k)&&(!i||i.length<=k)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:s,outputPixelType:n}=this;if(s){const t=N(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return null!=t&&s.mask&&(t.mask=j(e.pixels[0],e.mask,s.mask,s.offset,"u8")),t}const{inputRanges:r,outputValues:o,noDataRanges:i,allowUnmatched:a,isLastInputRangeInclusive:u}=this.functionArguments;return M(e,{inputRanges:r,outputValues:o,noDataRanges:i,outputPixelType:n,allowUnmatched:a,isLastInputRangeInclusive:u})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,n=new Float32Array(3*k),r=1e-5,o=this.functionArguments.inputRanges??[],i=this.functionArguments.outputValues??[],a=i.length;for(let l=0;l<k;l++)n[3*l]=o[2*l]??g-1,n[3*l+1]=o[2*l+1]??g,n[3*l+2]=i[l]??0,l<a&&(l>0&&(n[3*l]-=r),(l<a-1||!s)&&(n[3*l+1]-=r));const u=new Float32Array(2*k);return u.fill(g),e?.length&&u.set(e),{allowUnmatched:t,rangeMaps:n,noDataRanges:u,clampRange:T(this.outputPixelType)}}};s([n({json:{write:!0,name:"rasterFunction"}})],tn.prototype,"functionName",void 0),s([n({type:Qs,json:{write:!0,name:"rasterFunctionArguments"}})],tn.prototype,"functionArguments",void 0),s([n()],tn.prototype,"rasterArgumentNames",void 0),s([n({json:{write:!0}})],tn.prototype,"lookup",void 0),tn=s([r("esri.layers.support.rasterFunctions.RemapFunction")],tn);const en=tn;var sn;const nn=new a({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let rn=sn=class extends Y{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new sn({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};s([u(nn)],rn.prototype,"slopeType",void 0),s([n({type:Number,json:{write:!0}})],rn.prototype,"zFactor",void 0),s([n({type:Number,json:{name:"psPower",write:!0}})],rn.prototype,"pixelSizePower",void 0),s([n({type:Number,json:{name:"psZFactor",write:!0}})],rn.prototype,"pixelSizeFactor",void 0),s([n({type:Boolean,json:{write:!0}})],rn.prototype,"removeEdgeEffect",void 0),rn=sn=s([r("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],rn);const on=rn;let an=class extends nt{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics="percent-rise"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:o}=this.functionArguments,{isGCS:i}=this,{extent:a,primaryPixelSizes:u}=t,l=u?.[0],c=l??(a?{x:a.width/e.width,y:a.height/e.height}:{x:1,y:1});return H(e,{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:o,isGCS:i,resolution:c})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*W:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:n??0}}};s([n({json:{write:!0,name:"rasterFunction"}})],an.prototype,"functionName",void 0),s([n({type:on,json:{write:!0,name:"rasterFunctionArguments"}})],an.prototype,"functionArguments",void 0),s([n()],an.prototype,"rasterArgumentNames",void 0),s([n({json:{write:!0}})],an.prototype,"isGCS",void 0),an=s([r("esri.layers.support.rasterFunctions.SlopeFunction")],an);const un=an,ln=new a({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function cn(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:i,outBand:a}=t;if(s&&!i)return void a.set(n);const{statisticsType:u,kernelRows:l,kernelCols:c}=e,p="stddev"===u,h=r*o,m=new Float64Array(h),f=new Float64Array(h),d=new Uint32Array(h);for(let A=0;A<o;A++){const t=A*r;let e=0,s=0,o=0;for(let r=0;r<c;r++)i&&!i[t+r]||(e+=n[t+r],p&&(s+=n[t+r]**2),o++);m[t]=e,f[t]=s,d[t]=o;for(let a=1;a<=r-c;a++){const r=t+a-1,u=r+c;i?(i[r]&&(o--,e-=n[r],p&&(s-=n[r]**2)),i[u]&&(o++,e+=n[u],p&&(s+=n[u]**2))):(e-=n[r],e+=n[u],p&&(s-=n[r]**2,s+=n[u]**2)),m[t+a]=e,d[t+a]=o,p&&(f[t+a]=s)}}const g=new Float64Array(h),y=new Float64Array(h),v=new Uint32Array(h),x=l*r;for(let A=0;A<=r-c;A++){let t=0,e=0,s=0;for(let n=0;n<l;n++){const o=n*r+A;t+=m[o],s+=d[o],p&&(e+=f[o])}g[A]=t,y[A]=e,v[A]=s;for(let n=1;n<=o-l;n++){const o=(n-1)*r+A,i=o+x;t-=m[o],t+=m[i],s-=d[o],s+=d[i],p&&(e-=f[o],e+=f[i]),g[n*r+A]=t,y[n*r+A]=e,v[n*r+A]=s}}const w=Math.floor(l/2),b=Math.floor(c/2);for(let A=w;A<o-w;A++){const t=A*r;for(let e=b;e<r-b;e++){const n=(A-w)*r+e-b,o=v[n];if(0===o||s&&(!i||i[t+e]))continue;const u=g[n]/o,l=p?Math.sqrt((y[n]-g[n]*u)/o):u;a[t+e]=l,i&&(i[t+e]=255)}}}function pn(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:i,outBand:a}=t;if(s&&!i)return void a.set(n);const{kernelRows:u,kernelCols:l,statisticsType:c}=e,p=Math.floor(u/2),h=Math.floor(l/2),m="min"===c,f=a.slice(),d=new Uint32Array(r*o);for(let g=p;g<o-p;g++){const t=g*r;for(let e=h;e<r-h;e++){let s=m?Number.MAX_VALUE:-Number.MAX_VALUE,o=0;for(let a=0;a<u;a++)for(let u=0;u<l;u++){const l=t+e+(a-p)*r+u-h;i&&!i[l]||(s=m?Math.min(s,n[l]):Math.max(s,n[l]),o++)}i?(f[t+e]=0===o?0:s,d[t+e]=o):a[t+e]=0===o?0:s}}if(i)for(let g=p;g<o-p;g++){const t=g*r;for(let e=h;e<r-h;e++)if(d[t+e]){if(s&&i[t+e])continue;a[t+e]=f[t+e],i[t+e]=255}}}function hn(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:i,outBand:a}=t;if(s&&!i)return void a.set(n);const{kernelRows:u,kernelCols:l}=e,c=Math.floor(u/2),p=Math.floor(l/2),h=a.slice(),m=new Uint32Array(r*o);for(let f=c;f<o-c;f++){const t=f*r;for(let e=p;e<r-p;e++){if(s&&i&&i[t+e])continue;const o=[];for(let s=0;s<u;s++)for(let a=0;a<l;a++){const u=t+e+(s-c)*r+a-p;i&&!i[u]||o.push(n[u])}o.length&&(o.sort(((t,e)=>t-e)),i?(h[t+e]=o[Math.floor((o.length-1)/2)],m[t+e]=o.length):a[t+e]=o[Math.floor((o.length-1)/2)])}}if(i)for(let f=c;f<o-c;f++){const t=f*r;for(let e=p;e<r-p;e++)if(m[t+e]){if(s&&i[t+e])continue;a[t+e]=h[t+e],i[t+e]=255}}}function mn(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:i,outBand:a}=t;if(s&&!i)return void a.set(n);const{kernelRows:u,kernelCols:l}=e,c=Math.floor(u/2),p=Math.floor(l/2),h="majority"===e.statisticsType,m=u*l,f=a.slice(),d=new Uint32Array(r*o);for(let g=c;g<o-c;g++){const t=g*r;for(let e=p;e<r-p;e++){if(s&&i&&i[t+e])continue;const o=new Map;for(let s=0;s<u;s++)for(let a=0;a<l;a++){const u=t+e+(s-c)*r+a-p;if(i&&!i[u])continue;const l=n[u];o.set(l,o.has(l)?o.get(l)+1:1)}if(0===o.size)continue;let g=0,y=0,v=h?0:m+1;for(const t of o.keys())y=o.get(t),h===y>v&&(v=y,g=t);i?(f[t+e]=g,d[t+e]=o.size):a[t+e]=g}}if(i)for(let g=c;g<o-c;g++){const t=g*r;for(let e=p;e<r-p;e++)if(d[t+e]){if(s&&i[t+e])continue;a[t+e]=f[t+e],i[t+e]=255}}}function fn(t,e){const{mask:s}=t,{fillNoDataOnly:n}=e;if(n&&!s)return t;const{pixels:r,width:o,height:i,bandMasks:a,pixelType:u}=t,l=r.length,c=o*i,p=[],{kernelRows:h,kernelCols:m,statisticsType:f,mirrorEdges:d}=e;if(n&&!s)return t;const g=e.outputPixelType??u,y=[];for(let w=0;w<l;w++){const t=r[w],u=b.createEmptyBand(g,c);n&&u.set(t);const l=a?.[w]??s,v=l?.slice()??null,x={band:t,width:o,height:i,mask:v,outBand:u};switch(f){case"min":case"max":pn(x,e);break;case"mean":case"stddev":cn(x,e);break;case"median":hn(x,e);break;case"majority":case"minority":mn(x,e)}d&&!n&&cs(u,o,i,h,m),p.push(u),v&&y.push(v)}let v=y[0]??s;y.length!==l&&(y.length=0),l>1&&a?.length&&(v=b.combineBandMasks(a));const x=new b({pixelType:g,width:o,height:i,pixels:p,bandMasks:a&&y.length?y:null,mask:v});return x.updateStatistics(),x}var dn;let gn=dn=class extends Y{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new dn({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:l(this.raster)})}};s([n({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],gn.prototype,"rows",void 0),s([n({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],gn.prototype,"cols",void 0),s([n({json:{write:!0}})],gn.prototype,"fillNoDataOnly",void 0),s([n({json:{read:{source:["statisticsType","type"],reader:(t,e)=>ln.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),u(ln)],gn.prototype,"statisticsType",void 0),gn=dn=s([r("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],gn);const yn=gn;let vn=class extends nt{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:n}=this.functionArguments;return"stddev"===n&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{statisticsType:s,rows:n,cols:r,fillNoDataOnly:o}=this.functionArguments;return fn(e,{kernelRows:n,kernelCols:r,fillNoDataOnly:o,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:n}=this.functionArguments;return{fillNoDataOnly:n,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:T(this.outputPixelType)}}};s([n({json:{write:!0,name:"rasterFunction"}})],vn.prototype,"functionName",void 0),s([n({type:yn,json:{write:!0,name:"rasterFunctionArguments"}})],vn.prototype,"functionArguments",void 0),s([n()],vn.prototype,"rasterArgumentNames",void 0),vn=s([r("esri.layers.support.rasterFunctions.StatisticsFunction")],vn);const xn=vn;var wn;let bn=wn=class extends Y{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const s=[];return t.forEach((t=>{const e={min:t.min,max:t.max,avg:t.avg??t.mean,stddev:t.stddev??t.standardDeviation};s.push(e)})),s}writeStatistics(t,e,s){if(!t?.length)return;const n=[];t.forEach((t=>{const e={...t,mean:t.avg,standardDeviation:t.stddev};delete e.avg,delete e.stddev,n.push(e)})),e[s]=n}clone(){return new wn({statistics:l(this.statistics),histograms:l(this.histograms)})}};s([n({json:{write:!0}})],bn.prototype,"statistics",void 0),s([m("statistics")],bn.prototype,"readStatistics",null),s([d("statistics")],bn.prototype,"writeStatistics",null),s([n({json:{write:!0}})],bn.prototype,"histograms",void 0),bn=wn=s([r("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],bn);const An=bn;let Tn=class extends nt{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(e.histograms=n),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};s([n({json:{write:!0,name:"rasterFunction"}})],Tn.prototype,"functionName",void 0),s([n({type:An,json:{write:!0,name:"rasterFunctionArguments"}})],Tn.prototype,"functionArguments",void 0),s([n()],Tn.prototype,"rasterArgumentNames",void 0),s([n({json:{write:!0}})],Tn.prototype,"indexedColormap",void 0),s([n()],Tn.prototype,"isNoopProcess",void 0),Tn=s([r("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],Tn);const Pn=Tn;var Fn;const Nn=new a({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let In=Fn=class extends Y{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,s){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[s]=t)}clone(){return new Fn({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:l(this.statistics),gamma:l(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:l(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};s([n({type:Boolean,json:{write:!0}})],In.prototype,"computeGamma",void 0),s([n({type:Boolean,json:{name:"dra",write:!0}})],In.prototype,"dynamicRangeAdjustment",void 0),s([n({type:[Number],json:{write:!0}})],In.prototype,"gamma",void 0),s([n()],In.prototype,"histograms",void 0),s([n({type:Number,json:{write:!0}})],In.prototype,"maxPercent",void 0),s([n({type:Number,json:{write:!0}})],In.prototype,"minPercent",void 0),s([n({type:Number,json:{write:!0}})],In.prototype,"numberOfStandardDeviations",void 0),s([n({type:Number,json:{name:"max",write:!0}})],In.prototype,"outputMax",void 0),s([n({type:Number,json:{name:"min",write:!0}})],In.prototype,"outputMin",void 0),s([n({type:Number,json:{write:!0}})],In.prototype,"sigmoidStrengthLevel",void 0),s([n({json:{type:[[Number]],write:!0}})],In.prototype,"statistics",void 0),s([d("statistics")],In.prototype,"writeStatistics",null),s([u(Nn)],In.prototype,"stretchType",void 0),s([n({type:Boolean,json:{write:!0}})],In.prototype,"useGamma",void 0),In=Fn=s([r("esri.layers.support.rasterFunctions.StretchFunctionArguments")],In);const Rn=In;let Cn=class extends nt{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:r,useGamma:o}=s;if(!n&&["u8","u16","s8","s16"].includes(e)){const n=X(s.toJSON(),{rasterInfo:t}),i=A(this.outputPixelType)?"round":"float";this.lookup=$({pixelType:e,...n,gamma:o?r:null,rounding:i}),this.cutOffs=n}else n||(this.cutOffs=X(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const i=t.clone();return i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),"u8"===this.outputPixelType&&(i.keyProperties.DataType="processed"),this.rasterInfo=i,{success:!0,supportsGPU:!n}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{lookup:s}=this;if(s)return N(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,r=this.cutOffs||X(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),o=n.useGamma?n.gamma:null;return J(e,{...r,gamma:o,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:n}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,o=n&&s?.length?K(r,s):[1,1,1],{minCutOff:i,maxCutOff:a}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===i.length&&(i[1]=i[2]=i[0],a[1]=a[2]=a[0]);const u=new Float32Array(r);let l;for(l=0;l<r;l++)u[l]=(e-t)/(a[l]-i[l]);const c=A(this.outputPixelType);return{bandCount:r,outMin:t,outMax:e,minCutOff:i,maxCutOff:a,factor:u,useGamma:n,gamma:n&&s?s:[1,1,1],gammaCorrection:n&&o?o:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:c,type:"stretch"}}};s([n({json:{write:!0,name:"rasterFunction"}})],Cn.prototype,"functionName",void 0),s([n({type:Rn,json:{write:!0,name:"rasterFunctionArguments"}})],Cn.prototype,"functionArguments",void 0),s([n()],Cn.prototype,"rasterArgumentNames",void 0),s([n({json:{write:!0}})],Cn.prototype,"lookup",void 0),s([n({json:{write:!0}})],Cn.prototype,"cutOffs",void 0),Cn=s([r("esri.layers.support.rasterFunctions.StretchFunction")],Cn);const _n=Cn;var kn;let Bn=kn=class extends Y{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new kn({attributeTableAsRecordSet:l(this.attributeTableAsRecordSet)})}};s([n({json:{write:!0}})],Bn.prototype,"attributeTableAsRecordSet",void 0),Bn=kn=s([r("esri.layers.support.rasterFunctions.TableFunctionArguments")],Bn);const Sn=Bn;let jn=class extends nt{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();return s.pixelType=this.outputPixelType,s.bandCount=1,"thematic"!==s.dataType&&(s.keyProperties=s.keyProperties?{...s.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};s([n({json:{write:!0,name:"rasterFunction"}})],jn.prototype,"functionName",void 0),s([n({type:Sn,json:{write:!0,name:"rasterFunctionArguments"}})],jn.prototype,"functionArguments",void 0),s([n()],jn.prototype,"rasterArgumentNames",void 0),s([n()],jn.prototype,"isNoopProcess",void 0),jn=s([r("esri.layers.support.rasterFunctions.TableFunction")],jn);const Mn=jn,Dn=new Map;function On(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function Gn(t){const{rasterFunction:e,rasterFunctionArguments:s}=t,n={};for(const r in s){let t=s[r];const e=r.toLowerCase();if("rasters"===e&&Array.isArray(t))n.rasters=t.map((t=>On(t)?Gn(t):t));else switch(On(t)&&(t=Gn(t)),e){case"dra":n.dra=t;break;case"pspower":n.psPower=t;break;case"pszfactor":n.psZFactor=t;break;case"bandids":n.bandIds=t;break;default:n[r[0].toLowerCase()+r.slice(1)]=t}}return"Local"!==e||n.rasters?.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function zn(t,e){const{rasterFunction:s,rasterFunctionArguments:n}=t,r=t.outputPixelType?.toLowerCase();if(null==s||!Dn.has(s))throw new y("raster-function-helper",`unsupported raster function: ${s}`);const o=Dn.get(s),i=("function"==typeof o.ctor?o.ctor:o.ctor.default).fromJSON({...t,outputPixelType:r}),{rasterArgumentNames:a}=i,u=[],l=function(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}(n,a),c="rasters"===a[0],p=[];for(let h=0;h<l.length;h++){const t=l[h];let s;null==t||"string"==typeof t&&t.startsWith("$")?u.push(e?.raster):"string"==typeof t?e[t]&&u.push(e[t]):"number"!=typeof t&&"rasterFunction"in t&&(s=zn(t,e),c||(i.functionArguments[a[h]]=s),u.push(s)),c&&p.push(s??t)}if(c&&(i.functionArguments.rasters=p),e){i.sourceRasters=u;const t=e.raster?.url;t&&(i.mainPrimaryRasterId=t)}return i}function En(t,e){if(t&&e)for(const s in t){const n=t[s];n&&"object"==typeof n&&"type"in n&&("RasterFunctionTemplate"===n.type?En(n.arguments,e):"RasterFunctionVariable"===n.type&&null!=e[n.name]&&(n.value=e[n.name]))}}function Vn(t,e){if(!t||"object"!=typeof t)return t;const{value:s}=t;if(!s||"object"!=typeof s)return t.isDataset?"$$":s;if(Array.isArray(s))return 0===s.length?[]:s.map((t=>"object"==typeof t&&"RasterFunctionVariable"===t.type?Vn(t,e):t));if("value"in s&&["number","string","boolean"].includes(typeof s.value))return s.value;if(t.isDataset&&"Scalar"!==s.type)return"$$";if(!("type"in s))return s;let n=s;switch(s.type){case"Scalar":n=s.value;break;case"AlgorithmicColorRamp":n=Un(s);break;case"MultiPartColorRamp":n={type:"multipart",colorRamps:s.ArrayOfColorRamp.map(Un)};break;case"ArgumentArray":if(s.elements?.length&&"RasterStatistics"!==s.elements[0].type){const t=[];for(let n=0;n<s.elements.length;n++){const r=s.elements[n],{type:o}=r;if(o)if("RasterFunctionTemplate"===o){const{renderingRule:s}=Ln(r,e);t.push(s),null!=r._object_id&&e.set(r._object_id,s)}else{if("RasterFunctionVariable"!==o)throw new y("raster-function-helper","unsupported raster function json.");{const s=Vn(r,e);t.push(s),null!=r._object_id&&e.set(r._object_id,s)}}else t.push(r)}n=t}else n=s.elements}return null!=s._object_id&&e.set(s._object_id,n),n}function Un(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:s,ToColor:n}=t;if(!Array.isArray(s)){const{r:t,g:e,b:n}=v({h:s.Hue,s:s.Saturation,v:s.Value});s=[t,e,n,s.AlphaValue]}if(!Array.isArray(n)){const{r:t,g:e,b:s}=v({h:n.Hue,s:n.Saturation,v:n.Value});n=[t,e,s,n.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:s,toColor:n}}function Ln(t,e,s){s&&En(t,s);const n={renderingRule:{},templates:e};return Wn(t,n),n}function Wn(t,e){if(!t||!e.renderingRule)return;const{renderingRule:s,templates:n}=e,{function:r,arguments:o,_object_id:i}=t;if(!r||!o)return;null!=i&&n.set(i,s),s.rasterFunction=r.type.replace("Function",""),s.outputPixelType=r.pixelType;const a={};s.rasterFunctionArguments=a;for(const u in o){if("type"===u||"object_id"===u||"_object_ref_id"===u)continue;const t=o[u];t&&"object"==typeof t&&"type"in t&&("RasterFunctionTemplate"===t.type||"RasterFunctionVariable"===t.type)?("RasterFunctionVariable"===t.type?a[u]=Vn(t,n):(s.rasterFunctionArguments[u]={},Wn(t,{renderingRule:s.rasterFunctionArguments[u],templates:n})),null!=t._object_id&&n.set(t._object_id,a[u])):a[u]=t}switch(a.DEM&&!a.Raster&&(a.Raster=a.DEM,delete a.DEM),s.rasterFunction){case"Stretch":!function(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}(a);break;case"Colormap":!function(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}(a);break;case"Convolution":!function(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}(a);break;case"Mask":!function(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}(a)}}function qn(t){const{renderingRule:e,templates:s}=t;if("object"!=typeof e||!e?.rasterFunctionArguments||!s.size)return;const{rasterFunctionArguments:n}=e;for(const r in n){const t=n[r],e="_object_ref_id"===r?t:t&&"object"==typeof t&&"_object_ref_id"in t?t._object_ref_id:null;if(null==e)t&&"object"==typeof t&&(t.rasterFunctionArguments&&qn({renderingRule:t,templates:s}),Array.isArray(t)&&t.forEach(((n,r)=>{if("object"==typeof n)if(null!=n._object_ref_id){if(!s.has(n._object_ref_id))throw new y("raster-function-helper",`unsupported raster function json. _object_ref_id: ${t} does not exist`);const o=s.get(e);o&&"object"==typeof o?Object.assign(n,o):t[r]=o}else qn({renderingRule:n,templates:s})})));else{if(!s.has(e))throw new y("raster-function-helper",`unsupported raster function json. _object_ref_id: ${e} does not exist`);const t=s.get(e);"_object_ref_id"!==r?n[r]=t:t&&"object"==typeof t&&Object.assign(n,t)}}}Dn.set("Arithmetic",{desc:"Arithmetic Function",ctor:ye,rasterArgumentNames:["rasters"]}),Dn.set("Aspect",{desc:"Aspect Function",ctor:Ae,rasterArgumentNames:["raster"]}),Dn.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:Ge,rasterArgumentNames:["raster"]}),Dn.set("Colormap",{desc:"Colormap Function",ctor:Qe,rasterArgumentNames:["raster"]}),Dn.set("CompositeBand",{desc:"CompositeBand Function",ctor:rs,rasterArgumentNames:["rasters"]}),Dn.set("Convolution",{desc:"Convolution Function",ctor:xs,rasterArgumentNames:["raster"]}),Dn.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:ls,rasterArgumentNames:["raster"]}),Dn.set("ExtractBand",{desc:"ExtractBand Function",ctor:_s,rasterArgumentNames:["raster"]}),Dn.set("Curvature",{desc:"Curvature Function",ctor:Fs,rasterArgumentNames:["raster"]}),Dn.set("Grayscale",{desc:"Grayscale Function",ctor:Ms,rasterArgumentNames:["raster"]}),Dn.set("Clip",{desc:"Clip Function",ctor:We,rasterArgumentNames:["raster"]}),Dn.set("Local",{desc:"Local Function",ctor:Es,rasterArgumentNames:["rasters"]}),Dn.set("Mask",{desc:"Mask Function",ctor:qs,rasterArgumentNames:["raster"]}),Dn.set("NDVI",{desc:"NDVI Function",ctor:Ks,rasterArgumentNames:["raster"]}),Dn.set("Remap",{desc:"Remap Function",ctor:en,rasterArgumentNames:["raster"]}),Dn.set("Slope",{desc:"Slope Function",ctor:un,rasterArgumentNames:["raster"]}),Dn.set("Statistics",{desc:"Focal Statistics Function",ctor:xn,rasterArgumentNames:["raster"]}),Dn.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Pn,rasterArgumentNames:["raster"]}),Dn.set("Stretch",{desc:"Stretch Function",ctor:_n,rasterArgumentNames:["raster"]}),Dn.set("Table",{desc:"Attribute Table Function",ctor:Mn,rasterArgumentNames:["raster"]});let Hn=class extends o{get affectsPixelSize(){return!1}forwardTransform(t){return t}inverseTransform(t){return t}};s([n()],Hn.prototype,"affectsPixelSize",null),s([n({json:{write:!0}})],Hn.prototype,"spatialReference",void 0),Hn=s([r("esri.layers.support.rasterTransforms.BaseRasterTransform")],Hn);const Xn=Hn;var $n;let Jn=$n=class extends Xn{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return"point"===(t=t.clone()).type?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return"point"===(t=t.clone()).type?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}clone(){return new $n({tolerance:this.tolerance})}};s([u({GCSShiftXform:"gcs-shift"})],Jn.prototype,"type",void 0),s([n()],Jn.prototype,"tolerance",void 0),Jn=$n=s([r("esri.layers.support.rasterTransforms.GCSShiftTransform")],Jn);const Kn=t("c",Jn);var Yn;let Zn=Yn=class extends Xn{constructor(){super(...arguments),this.type="identity"}clone(){return new Yn}};s([u({IdentityXform:"identity"})],Zn.prototype,"type",void 0),Zn=Yn=s([r("esri.layers.support.rasterTransforms.IdentityTransform")],Zn);const Qn=Zn;var tr;function er(t,e,s){const{x:n,y:r}=e;if(s<2)return{x:t[0]+n*t[2]+r*t[4],y:t[1]+n*t[3]+r*t[5]};if(2===s){const e=n*n,s=r*r,o=n*r;return{x:t[0]+n*t[2]+r*t[4]+e*t[6]+o*t[8]+s*t[10],y:t[1]+n*t[3]+r*t[5]+e*t[7]+o*t[9]+s*t[11]}}const o=n*n,i=r*r,a=n*r,u=o*n,l=o*r,c=n*i,p=r*i;return{x:t[0]+n*t[2]+r*t[4]+o*t[6]+a*t[8]+i*t[10]+u*t[12]+l*t[14]+c*t[16]+p*t[18],y:t[1]+n*t[3]+r*t[5]+o*t[7]+a*t[9]+i*t[11]+u*t[13]+l*t[15]+c*t[17]+p*t[19]}}function sr(t,e,s){const{xmin:n,ymin:r,xmax:o,ymax:i,spatialReference:a}=e;let u=[];if(s<2)u.push({x:n,y:i}),u.push({x:o,y:i}),u.push({x:n,y:r}),u.push({x:o,y:r});else{let t=10;for(let e=0;e<t;e++)u.push({x:n,y:r+(i-r)*e/(t-1)}),u.push({x:o,y:r+(i-r)*e/(t-1)});t=8;for(let e=1;e<=t;e++)u.push({x:n+(o-n)*e/t,y:r}),u.push({x:n+(o-n)*e/t,y:i})}u=u.map((e=>er(t,e,s)));const l=u.map((t=>t.x)),c=u.map((t=>t.y));return new w({xmin:Math.min.apply(null,l),xmax:Math.max.apply(null,l),ymin:Math.min.apply(null,c),ymax:Math.max.apply(null,c),spatialReference:a})}let nr=tr=class extends Xn{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(t,e){const{coeffX:s,coeffY:n}=e;if(!s?.length||!n?.length||s.length!==n.length)return null;const r=[];for(let o=0;o<s.length;o++)r.push(s[o]),r.push(n[o]);return r}writeForwardCoefficients(t,e,s){const n=[],r=[];for(let o=0;o<t?.length;o++)o%2==0?n.push(t[o]):r.push(t[o]);e.coeffX=n,e.coeffY=r}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=function(t){const[e,s,n,r,o,i]=t,a=n*i-o*r,u=o*r-n*i;return[(o*s-e*i)/a,(n*s-e*r)/u,i/a,r/u,-o/a,-n/u]}(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}readInverseCoefficients(t,e){const{inverseCoeffX:s,inverseCoeffY:n}=e;if(!s?.length||!n?.length||s.length!==n.length)return null;const r=[];for(let o=0;o<s.length;o++)r.push(s[o]),r.push(n[o]);return r}writeInverseCoefficients(t,e,s){const n=[],r=[];for(let o=0;o<t?.length;o++)o%2==0?n.push(t[o]):r.push(t[o]);e.inverseCoeffX=n,e.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(t){if("point"===t.type){const e=er(this.forwardCoefficients,t,this.polynomialOrder);return new x({x:e.x,y:e.y,spatialReference:t.spatialReference})}return sr(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if("point"===t.type){const e=er(this.inverseCoefficients,t,this.polynomialOrder);return new x({x:e.x,y:e.y,spatialReference:t.spatialReference})}return sr(this.inverseCoefficients,t,this.polynomialOrder)}clone(){return new tr({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};s([n({json:{write:!0}})],nr.prototype,"polynomialOrder",void 0),s([n()],nr.prototype,"forwardCoefficients",void 0),s([m("forwardCoefficients",["coeffX","coeffY"])],nr.prototype,"readForwardCoefficients",null),s([d("forwardCoefficients")],nr.prototype,"writeForwardCoefficients",null),s([n({json:{write:!0}})],nr.prototype,"inverseCoefficients",null),s([m("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],nr.prototype,"readInverseCoefficients",null),s([d("inverseCoefficients")],nr.prototype,"writeInverseCoefficients",null),s([n()],nr.prototype,"affectsPixelSize",null),s([u({PolynomialXform:"polynomial"})],nr.prototype,"type",void 0),nr=tr=s([r("esri.layers.support.rasterTransforms.PolynomialTransform")],nr);const rr={GCSShiftXform:Kn,IdentityXform:Qn,PolynomialXform:t("y",nr)},or=Object.keys(rr)}}}));
