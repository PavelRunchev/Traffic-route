System.register(["./index-legacy.js","./dataUtils-legacy.js","./RasterSymbolizer-legacy.js","./utils-legacy6.js","./rasterProjectionHelper-legacy.js"],(function(e,r){"use strict";var t,s,i,o,l,a,n,c,m,f,u,S,p,d,y,x,O,h,N,J,g;return{setters:[e=>{t=e.aQ,s=e.ar,i=e.cP},e=>{o=e.u,l=e.f,a=e.W,n=e.E,c=e.U,m=e.D,f=e.R,u=e.a,S=e.s},e=>{p=e.m,d=e.S,y=e.L,x=e.h},e=>{O=e.R,h=e.i},e=>{N=e.M,J=e.T,g=e.e}],execute:function(){e("default",class{convertVectorFieldData(e){const r=o.fromJSON(e.pixelBlock),t=l(r,e.type);return Promise.resolve(null!=t?t.toJSON():null)}computeStatisticsHistograms(e){const r=o.fromJSON(e.pixelBlock),t=p(r);return Promise.resolve(t)}async decode(e){const r=await d(e.data,e.options);return r&&r.toJSON()}symbolize(e){e.pixelBlock=o.fromJSON(e.pixelBlock),e.extent=e.extent?t.fromJSON(e.extent):null;const r=this.symbolizer.symbolize(e);return Promise.resolve(null!=r?r.toJSON():null)}async updateSymbolizer(e){this.symbolizer=y.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=e.histograms)}async updateRasterFunction(e){this.rasterFunction=O(e.rasterFunctionJSON)}async process(e){const r=this.rasterFunction.process({extent:t.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map((e=>null!=e?o.fromJSON(e):null)),primaryPixelSizes:e.primaryPixelSizes?.map((e=>null!=e?s.fromJSON(e):null)),primaryRasterIds:e.primaryRasterIds});return null!=r?r.toJSON():null}stretch(e){const r=this.symbolizer.simpleStretch(o.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r?.toJSON())}estimateStatisticsHistograms(e){const r=x(o.fromJSON(e.srcPixelBlock));return Promise.resolve(r)}split(e){const r=a(o.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel??0,!1===e.useBilinear);return r&&r.forEach(((e,t)=>{r.set(t,e?.toJSON())})),Promise.resolve(r)}clipTile(e){const r=o.fromJSON(e.pixelBlock),t=n({...e,pixelBlock:r});return Promise.resolve(t?.toJSON())}async mosaicAndTransform(e){const r=e.srcPixelBlocks.map((e=>e?new o(e):null)),t=c(r,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo,clipOffset:e.clipOffset,clipSize:e.clipSize});let s,i=t;return e.coefs&&(i=m(t,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation)),e.projectDirections&&e.gcsGrid&&(s=f(e.destDimension,e.gcsGrid),i=u(i,e.isUV?"vector-uv":"vector-magdir",s)),{pixelBlock:i?.toJSON(),localNorthDirections:s}}async createFlowMesh(e,r){const t={data:new Float32Array(e.flowData.buffer),mask:new Uint8Array(e.flowData.maskBuffer),width:e.flowData.width,height:e.flowData.height},{vertexData:s,indexData:i}=await S(e.meshType,e.simulationSettings,t,r.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:i.buffer},transferList:[s.buffer,i.buffer]}}async getProjectionOffsetGrid(e){const r=t.fromJSON(e.projectedExtent),s=t.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new i({steps:e.datumTransformationSteps})),(e.includeGCSGrid||N(r.spatialReference,s.spatialReference,o))&&await J();const l=e.rasterTransform?h(e.rasterTransform):null;return g({...e,projectedExtent:r,srcBufferExtent:s,datumTransformation:o,rasterTransform:l})}})}}}));
