System.register(["./index-legacy.js","./definitions-legacy.js","./UpdateTracking2D-legacy.js","./LabelMetric-legacy.js","./enums-legacy.js","./Program-legacy.js","./Texture-legacy.js","./TileContainer-legacy.js"],(function(t,e){"use strict";var i,s,r,n,a,u,h,o,d,l,c,_,p,g,x,b,f,y,T,w,m,z;return{setters:[t=>{i=t.ai,s=t.aC,r=t.s,n=t.w},t=>{a=t.M,u=t.q,h=t.y,o=t.H,d=t.z,l=t.B,c=t.C,_=t.E},t=>{p=t.f,g=t.n},t=>{x=t.d,b=t.c},t=>{f=t.D,y=t.L},t=>{T=t.x},t=>{w=t.e,m=t.m},t=>{z=t.i}],execute:function(){const e=()=>n.getLogger("esri.views.2d.engine.webgl.AttributeStoreView");class D{constructor(t,e,i){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:s,pixelType:r,textureOnly:n}=t,a=x(r);this.blockIndex=i,this.pixelType=r,this.size=e,this.textureOnly=n,n||(this.data=new a(s)),this._resetRange()}destroy(){this._texture?.dispose();for(const t in this._fbos){const e=this._fbos[t];e&&("0"===t&&e.detachColorTexture(),e.dispose()),this._fbos[t]=null}this._texture=null}get _textureDesc(){const t=new w;return t.wrapMode=f.CLAMP_TO_EDGE,t.samplingMode=y.NEAREST,t.dataType=this.pixelType,t.width=this.size,t.height=this.size,t}setData(t,e,i){const s=p(t),r=this.data,n=s*this.texelSize+e;!r||n>=r.length||(r[n]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s))}getData(t,e){if(null==this.data)return null;const i=p(t)*this.texelSize+e;return!this.data||i>=this.data.length?null:this.data[i]}getTexture(t){return this._texture??this._initTexture(t)}getFBO(t,e=0){if(!this._fbos[e]){const i=0===e?this.getTexture(t):this._textureDesc;this._fbos[e]=new T(t,i)}return this._fbos[e]}get hasDirty(){const t=this.dirtyStart;return this.dirtyEnd>=t}updateTexture(t,s){try{const n=this.dirtyStart,a=this.dirtyEnd;if(!this.hasDirty)return;i("esri-2d-update-debug")&&console.debug(`Version[${s}] AttributeStoreView.updateTexture`,{start:n,end:a,firstBytes:new Uint8Array(this.data.buffer.slice(0,16)),block:this}),this._resetRange();const u=this.data.buffer,h=this.getTexture(t),o=4,d=(n-n%this.size)/this.size,l=(a-a%this.size)/this.size,c=d,_=this.size,p=l,g=d*this.size*o,b=(_+p*this.size)*o-g,f=x(this.pixelType),y=new f(u,g*f.BYTES_PER_ELEMENT,b),T=this.size,w=p-c+1;if(w>this.size)return void e().error(new r("mapview-webgl","Out-of-bounds index when updating AttributeData"));h.updateData(0,0,c,T,w,y)}catch(r){}}update(t){const{data:e,start:i,end:s}=t;if(null!=e&&null!=this.data){const s=this.data,r=i*this.texelSize;for(let i=0;i<e.length;i++){const n=1<<i%this.texelSize;t.layout&n&&(s[r+i]=e[i])}}this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,s)}resize(t,e){const i=this.size;if(this.size=e,this.textureOnly)return void(i!==this.size&&(this._lastTexture=this._texture,this._texture=null));const s=x(this.pixelType);this.destroy(),this.data=new s(t.buffer)}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(t){const e=new m(t,this._textureDesc,this.data??void 0);if(null!=this._lastTexture&&this._fbos[0]){const i=this._lastTexture.descriptor.width,s=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,n=this._lastTexture.descriptor.pixelFormat,a=this.getFBO(t),u=b(r),h=new(x(r))(new ArrayBuffer(i*s*u*this.texelSize)),o=t.getBoundFramebufferObject(),{x:d,y:l,width:c,height:_}=t.getViewport();t.bindFramebuffer(a),a.readPixels(0,0,i,s,n,r,h),e.updateData(0,0,0,2*i,s/2,h),t.setViewport(d,l,c,_),t.bindFramebuffer(o)}return this.destroy(),this._texture=e,this._texture}}class A{constructor(){this.size=0,this._pendingAttributeUpdates=[],this._version=0,this._epoch=0,this._locked=!1}_initialize(t){if(!t)throw new Error("InternalError: initArgs must be defined");const e=t.blockDescriptors;if(this.size=t.blockSize,i("esri-2d-update-debug")&&console.debug("AttributeStoreView.initialize",{message:t}),null==this._data)this._data=e.map(((t,e)=>null!=t?new D(t,this.size,e):null));else for(let i=0;i<this._data.length;i++){const t=this._data[i],s=e[i];null!=s&&(null==t?this._data[i]=new D(s,this.size,i):t.resize(s,this.size))}}destroy(){for(const t of this._data??[])t?.destroy();this._defaultTexture?.dispose();for(const{resolver:t}of this._pendingAttributeUpdates)t.reject("AttributeStore destroyed");this._pendingAttributeUpdates=[]}isEmpty(){return null==this._data}getBlock(t){return null==this._data?null:this._data[t]}setLabelMinZoom(t,e){this.setData(t,0,1,e)}getLabelMinZoom(t){return this.getData(t,0,1,255)}getFilterFlags(t){return this.getData(t,0,0,0)}getVVSize(t){return this.getData(t,a.VV,0,0)}getData(t,e,i,s){if(!this._data)return 0;const r=this._data[e];if(null==r)return 0;const n=r.getData(t,i);return null!=n?n:s}setData(t,e,i,s){this._data[e].setData(t,i,s)}lockTextureUploads(){this._locked=!0}unlockTextureUploads(){this._locked=!1,this.update()}async requestUpdate(t){const e=s();e.promise=e.promise.catch((t=>{i("esri-2d-update-debug")&&console.error("AttributeStoreView.requestUpdate rejected",t)})),this._version=t.version,this._pendingAttributeUpdates.push({inner:t,resolver:e}),i("esri-2d-update-debug")&&console.debug(`Version[${this._version}] AttributeStoreView.requestUpdate`,{message:t})}get currentEpoch(){return this._epoch}update(){if(this._locked)return;const t=this._pendingAttributeUpdates;this._pendingAttributeUpdates=[];for(const{inner:e,resolver:s}of t){const{blockData:t,initArgs:r,sendUpdateEpoch:n,version:a}=e;i("esri-2d-update-debug")&&console.debug(`Version[${this._version}] Epoch[${n}] AttributeStoreView.applyUpdate`),this._version=a,this._epoch=n,null!=r&&this._initialize(r);const u=this._data;for(let e=0;e<t.length;e++){const s=t[e],r=u[e];null!=r&&null!=s&&(i("esri-2d-update-debug")&&console.debug(`Version[${this._version}] CpuBlock[${e}] AttributeStoreView.update`,{block:s}),r.update(s))}s.resolve()}}getUniforms(t){return{filterFlags:{texture:this._getTexture(t,a.FilterFlags),unit:u},animation:{texture:this._getTexture(t,a.Animation),unit:h},gpgpu:{texture:this._getTexture(t,a.GPGPU),unit:o},visualVariableData:{texture:this._getTexture(t,a.VV),unit:d},dataDriven0:{texture:this._getTexture(t,a.DD0),unit:l},dataDriven1:{texture:this._getTexture(t,a.DD1),unit:c},dataDriven2:{texture:this._getTexture(t,a.DD2),unit:_},size:this.size}}_getTexture(t,e){const i=this._data?.[e];return i?(i.updateTexture(t,this._version),i.getTexture(t)):this._getDefaultTexture(t)}_getDefaultTexture(t){if(null==this._defaultTexture){const e=new w;e.wrapMode=f.CLAMP_TO_EDGE,e.samplingMode=y.NEAREST,e.width=1,e.height=1,this._defaultTexture=new m(t,e,new Uint8Array(4))}return this._defaultTexture}}t("r",class extends z{constructor(t){super(t),this._statisticsByLevel=new Map,this.attributeView=new A}destroy(){this.children.forEach((t=>t.destroy())),this.removeAllChildren(),this.attributeView.destroy()}doRender(t){t.context.capabilities.enable("textureFloat"),super.doRender(t)}createRenderParams(t){const e=super.createRenderParams(t);return e.attributeView=this.attributeView,e.instanceStore=this._instanceStore,e.statisticsByLevel=this._statisticsByLevel,e}}),t("i",class{constructor(t,e,i,s,r){this._instanceId=t,this.techniqueRef=e,this._meshWriterName=i,this._input=s,this.optionalAttributes=r}get instanceId(){return g(this._instanceId)}createMeshInfo(t){return{id:this._instanceId,meshWriterName:this._meshWriterName,options:t,optionalAttributes:this.optionalAttributes}}getInput(){return this._input}setInput(t){this._input=t}})}}}));
