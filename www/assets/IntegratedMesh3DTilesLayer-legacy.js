System.register(["./index-legacy.js","./elevationInfoUtils-legacy.js"],(function(e,t){"use strict";var i,r,n,a,s,o,l,y,p,c,d,h,f,m,u,x,v,g,b,w,I,_,A,E,L,S,M,N,R,T,D,j,V,z;return{setters:[e=>{i=e.dE,r=e.de,n=e.df,a=e.bt,s=e.dg,o=e.dG,l=e.dF,y=e.bc,p=e.aQ,c=e.cL,d=e.cu,h=e.cS,f=e.cV,m=e.d$,u=e.cR,x=e.e0,v=e.e1,g=e.e2,b=e.e3,w=e.e4,I=e.s,_=e.bx,A=e.X,E=e.w,L=e.x,S=e.y,M=e.e5,N=e.dj,R=e.z,T=e.bw,D=e.ct},e=>{j=e.I,V=e.x,z=e.Z}],execute:function(){let t=class extends(i(r(n(a(s(o(l(T)))))))){constructor(e){super(e),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.spatialReference=new y({wkid:4326,vcsWkid:115700}),this.fullExtent=new p(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}_verifyArray(e,t){if(!Array.isArray(e)||e.length<t)return!1;for(const i of e)if("number"!=typeof i)return!1;return!0}_initFullExtent(e){const t=e.root?.boundingVolume;if(!t)return;if(t.box){const e=t?.box;if(e[3]>7972671&&e[7]>7972671&&e[11]>7945940)return}const i=e.root?.transform,r=D();if(t.region&&this._verifyArray(t.region,6)){const e=t.region,i=c(e[0]),r=c(e[1]),n=e[4],a=c(e[2]),s=c(e[3]),o=e[5];this.fullExtent=new p({xmin:i,ymin:r,zmin:n,xmax:a,ymax:s,zmax:o,spatialReference:this.spatialReference})}else if(t.sphere&&this._verifyArray(t.sphere,4)){const e=t.sphere,n=d(e[0],e[1],e[2]),a=e[3]/Math.sqrt(3),s=D();h(s,n,d(-a,-a,-a));const o=D();if(f(o,n,d(a,a,a)),i&&this._verifyArray(i,16)){const e=i;m(r,s,e),u(s,r),m(r,o,e),u(o,r)}x(s,v,0,s,y.WGS84,0,1),x(o,v,0,o,y.WGS84,0,1);const l=D(),c=D();g(l,s,o),b(c,s,o),this.fullExtent=new p({xmin:l[0],ymin:l[1],zmin:l[2],xmax:c[0],ymax:c[1],zmax:c[2],spatialReference:this.spatialReference})}else if(t.box&&this._verifyArray(t.box,12)){const e=t.box,r=d(e[0],e[1],e[2]),n=d(e[3],e[4],e[5]),a=d(e[6],e[7],e[8]),s=d(e[9],e[10],e[11]),o=[];for(let t=0;t<8;++t)o.push(D());if(f(o[0],r,n),f(o[0],o[0],a),f(o[0],o[0],s),w(o[1],r,n),f(o[1],o[1],a),f(o[1],o[1],s),f(o[2],r,n),w(o[2],o[2],a),f(o[2],o[2],s),w(o[3],r,n),w(o[3],o[3],a),f(o[3],o[3],s),f(o[4],r,n),f(o[4],o[4],a),w(o[4],o[4],s),w(o[5],r,n),f(o[5],o[5],a),w(o[5],o[5],s),f(o[6],r,n),w(o[6],o[6],a),w(o[6],o[6],s),w(o[7],r,n),w(o[7],o[7],a),w(o[7],o[7],s),i&&this._verifyArray(i,16)){const e=i;for(let t=0;t<8;++t)m(o[t],o[t],e)}const l=d(Number.MIN_VALUE,Number.MIN_VALUE,Number.MIN_VALUE),c=d(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let t=0;t<8;++t)x(o[t],v,0,o[t],y.WGS84,0,1),g(c,c,o[t]),b(l,l,o[t]);this.fullExtent=new p({xmin:c[0],ymin:c[1],zmin:c[2],xmax:l[0],ymax:l[1],zmax:l[2],spatialReference:this.spatialReference})}}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=null!=e?e.signal:null;try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:e=>{if(e.typeKeywords?.includes("IntegratedMesh"))return!0;throw new I("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},e)}catch(i){_(i)}if(this.url){const e=A(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t}).then((e=>{this._initFullExtent(e.data)}),(e=>{_(e)}));await e}}async fetchAttributionData(){return this.load().then((()=>({})))}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh 3d tiles layers";j(E.getLogger(this),V(t,"absolute-height",e)),j(E.getLogger(this),z(t,e))}};L([S({type:["IntegratedMesh3DTilesLayer"]})],t.prototype,"operationalLayerType",void 0),L([S({type:y})],t.prototype,"spatialReference",void 0),L([S({type:p})],t.prototype,"fullExtent",void 0),L([S(M)],t.prototype,"elevationInfo",null),L([S({type:["show","hide"]})],t.prototype,"listMode",void 0),L([S(N)],t.prototype,"url",void 0),L([S({readOnly:!0})],t.prototype,"type",void 0),L([S({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],t.prototype,"path",void 0),L([S({type:Number,json:{origins:{"web-scene":{name:"layerDefinition.minScale",write:()=>{},read:()=>{}},"portal-item":{name:"layerDefinition.minScale",write:()=>{},read:()=>{}}}}})],t.prototype,"minScale",void 0),L([S({type:Number,json:{origins:{"web-scene":{name:"layerDefinition.maxScale",write:()=>{},read:()=>{}},"portal-item":{name:"layerDefinition.maxScale",write:()=>{},read:()=>{}}}}})],t.prototype,"maxScale",void 0),t=L([R("esri.layers.IntegratedMesh3DTilesLayer")],t),e("default",t)}}}));
