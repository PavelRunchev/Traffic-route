System.register(["./index-legacy.js","./date-legacy.js","./json-legacy.js","./OptimizedGeometry-legacy.js","./FeatureStore-legacy.js","./timeSupport-legacy.js","./QueryEngine-legacy.js","./number-legacy.js","./clientSideDefaults-legacy.js","./featureConversionUtils-legacy.js","./OptimizedFeatureSet-legacy.js","./BoundsStore-legacy.js","./PooledRBush-legacy.js","./WhereClause-legacy.js","./TimeOnly-legacy.js","./QueryEngineCapabilities-legacy.js","./utils-legacy4.js","./utils-legacy3.js","./utils-legacy5.js","./ClassBreaksDefinition-legacy.js","./RenderState-legacy.js"],(function(e,t){"use strict";var i,n,s,l,r,a,o,c,u,d,f,m,y,p,h,g,F,_,I,w,N,x,T,b,E,j,S,O,C;return{setters:[e=>{i=e.cD,n=e.cA,s=e.s,l=e.cB,r=e.o,a=e.w,o=e.ao,c=e.X,u=e.cx,d=e.aZ,f=e.cz,m=e.G,y=e.ac,p=e.eZ,h=e.e_,g=e.bc,F=e.cw,_=e.bz},e=>{I=e.e,w=e.n},e=>{N=e.t},e=>{x=e.t,T=e.e},e=>{b=e.m},e=>{E=e.x},e=>{j=e.$},e=>{S=e.a},e=>{O=e.i,C=e.o},null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){const t=/^\s*"([\S\s]*)"\s*$/,q=/""/g,v="\n",D=[","," ",";","|","\t"];function*k(e,t,i){let n=0;for(;n<=e.length;){const s=e.indexOf(t,n),l=e.substring(n,s>-1?s:void 0);n+=l.length+t.length,i&&!l.trim()||(yield l)}}function R(e){const t=e.includes("\r\n")?"\r\n":v;return k(e,t,!0)}function P(e,t){return k(e,t,!1)}function V(e,t,i){e=e.trim(),t=t?.trim();const n=[],s=Array.from(new Set([i?.delimiter,...D])).filter((e=>null!=e));for(const r of s){const i=G(e,r).length,s=G(t,r).length??i;i>1&&n.push({weight:Math.min(i,s),delimiter:r})}const l=n.sort((({weight:e},{weight:t})=>t-e)).map((({delimiter:e})=>e));for(const r of l){const t=B(L(e,r).names,i?.longitudeField,i?.latitudeField);if(t.longitudeFieldName&&t.latitudeFieldName)return{delimiter:r,locationInfo:t}}return{delimiter:l[0],locationInfo:null}}function*A(e,i,n,s=(()=>Object.create(null))){const l=R(e);l.next();let r="",a="",o=0,c=s(),u=0;e:for(const d of l){const e=P(d,n);for(const l of e)if(r+=a+l,a="",o+=Q(l),o%2==0){if(o>0){const e=t.exec(r);if(!e){c=s(),u=0,r="",o=0;continue e}c[i[u]]=e[1].replaceAll(q,'"'),u++}else c[i[u]]=r,u++;r="",o=0}else a=n;0===o?(yield c,c=s(),u=0):a=v}}function L(e,t){const n=G(e,t).filter((e=>null!=e)),s=n.map((e=>i(e)));for(let i=s.length-1;i>=0;i--)s[i]||(s.splice(i,1),n.splice(i,1));return{names:s,aliases:n}}function G(e,i){if(!e?.length)return[];const n=[];let s="",l="",r=0;const a=P(e,i);for(const o of a)if(s+=l+o,l="",r+=Q(o),r%2==0){if(r>0){const e=t.exec(s);e&&n.push(e[1].replaceAll(q,'"'))}else n.push(s);s="",r=0}else l=i;return n}function Q(e){let t=0,i=0;for(i=e.indexOf('"',i);i>=0;)t++,i=e.indexOf('"',i+1);return t}function B(e,t,n){t=i(t)?.toLowerCase(),n=i(n)?.toLowerCase();const s=e.map((e=>e.toLowerCase())),l=t?e[s.indexOf(t)]:null,r=n?e[s.indexOf(n)]:null;return{longitudeFieldName:l||e[s.indexOf(Y.find((e=>s.includes(e))))],latitudeFieldName:r||e[s.indexOf(z.find((e=>s.includes(e))))]}}function M(e){if(!e.length)return"string";const t=/[^+\-.,0-9]/;return e.map((e=>{if(""!==e){if(!t.test(e)){let t=Z(e);if(!isNaN(t))return/[.,]/.test(e)||!Number.isInteger(t)||t>214783647||t<-214783648?"double":"integer";if(e.includes("E")){if(t=Number(e),!Number.isNaN(t))return"double";if(e.includes(",")&&(e=e.replace(",","."),t=Number(e),!Number.isNaN(t)))return"double"}}return I(e)?"date":"string"}})).reduce(((e,t)=>void 0===e?t:void 0===t?e:e===t?t:"string"===e||"string"===t?"string":"double"===e||"double"===t?"double":void 0))}const Z=function(){const e=S(),t=new RegExp("^"+e.regexp+"$"),i=new RegExp("["+e.group+"\\s\\xa0]","g"),n=e.factor;return s=>{const l=t.exec(s);if(e.factor=n,!l)return NaN;let r=l[1];if(!l[1]){if(!l[2])return NaN;r=l[2],e.factor*=-1}return r=r.replace(i,"").replace(e.decimal,"."),+r*e.factor}}(),z=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point_y"],Y=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point_x"],J=C("esriGeometryPoint"),U=["csv"],$=[0,0];class W{constructor(e,t){this.x=e,this.y=t}}function X(e,t){const i=t.parsingOptions||{},l={delimiter:i.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:i.latitudeField,longitudeFieldName:i.longitudeField}},r=l.layerDefinition={name:_(t.url,U)||"csv",dateFieldsTimeReference:{timeZoneIANA:d},drawingInfo:J,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:i.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:i.spatialReference||{wkid:4326}}},a=R(e),o=a.next().value?.trim(),c=a.next().value?.trim();if(!o)throw new s("csv-layer:empty-csv","CSV is empty",{csv:e});const{delimiter:f,locationInfo:m}=V(o,c,i);if(!f)throw new s("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV",{firstLine:o,secondLine:c,parsingOptions:i});if(!m)throw new s("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file",{firstLine:o,secondLine:c,parsingOptions:i});l.locationInfo=m,l.delimiter=f;const{names:y,aliases:p}=L(o,f),h=function(e,t,i,s,l){const r=[],a=A(e,i,t),o=[];for(const n of a){if(10===o.length)break;o.push(n)}for(let c=0;c<i.length;c++){const e=i[c],t=s[c];if(e===l.longitudeFieldName||e===l.latitudeFieldName)r.push({name:e,type:"esriFieldTypeDouble",alias:t});else{let i;switch(M(o.map((t=>t[e])))){case"integer":i="esriFieldTypeInteger";break;case"double":i="esriFieldTypeDouble";break;case"date":i="esriFieldTypeDate";break;default:i="esriFieldTypeString"}r.push({name:e,type:i,alias:t,length:n(i)})}}return r}(e,l.delimiter,y,p,l.locationInfo);if(i.fields?.length){const e=new u(i.fields);for(const t of h){const i=e.get(t.name);i&&Object.assign(t,i)}}if(!h.some((e=>"esriFieldTypeOID"===e.type&&(r.objectIdField=e.name,!0)))){const e={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};r.objectIdField=e.name,h.unshift(e)}r.fields=h;const g=new u(r.fields);if(l.locationInfo&&(l.locationInfo.latitudeFieldName=g.get(l.locationInfo.latitudeFieldName).name,l.locationInfo.longitudeFieldName=g.get(l.locationInfo.longitudeFieldName).name),r.timeInfo){const e=r.timeInfo;if(e.startTimeField){const t=g.get(e.startTimeField);t?(e.startTimeField=t.name,t.type="esriFieldTypeDate"):e.startTimeField=null}if(e.endTimeField){const t=g.get(e.endTimeField);t?(e.endTimeField=t.name,t.type="esriFieldTypeDate"):e.endTimeField=null}if(e.trackIdField){const t=g.get(e.trackIdField);e.trackIdField=t?t.name:null}e.startTimeField||e.endTimeField||(r.timeInfo=null)}return l}e("default",class{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(e,t={}){this._loadOptions=e;const[i]=await Promise.all([this._fetch(t.signal),this._checkProjection(e?.parsingOptions?.spatialReference)]),n=X(i,e);this._locationInfo=n.locationInfo,this._delimiter=n.delimiter,this._queryEngine=this._createQueryEngine(n);const s=await this._createFeatures(i);this._queryEngine.featureStore.addMany(s);const{fullExtent:l,timeExtent:r}=await this._queryEngine.fetchRecomputedExtents();if(n.layerDefinition.extent=l,r){const{start:e,end:t}=r;n.layerDefinition.timeInfo.timeExtent=[e,t]}return n}async applyEdits(){throw new s("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=l(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)}),(e=>{this._queryEngine.featureStore.clear(),r(e)||a.getLogger("esri.layers.CSVLayer").error(new s("csv-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete();const{fullExtent:t,timeExtent:i}=await this._queryEngine.fetchRecomputedExtents();return{extent:t,timeExtent:i}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(e){const{url:t,customParameters:i}=this._loadOptions;if(!t)throw new s("csv-layer:invalid-source","url not defined");const n=o(t);return(await c(n.path,{query:{...n.query,...i},responseType:"text",signal:e})).data}_createQueryEngine(e){const{objectIdField:t,fields:i,extent:n,timeInfo:s}=e.layerDefinition,l=new b({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1});return new j({fieldsIndex:u.fromLayerJSON({fields:i,dateFieldsTimeReference:{timeZoneIANA:d}}),geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:s,objectIdField:t,spatialReference:n.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:l})}async _createFeatures(e){const{latitudeFieldName:t,longitudeFieldName:i}=this._locationInfo,{objectIdField:n,fieldsIndex:s,spatialReference:l}=this._queryEngine;let r=[];const a=[],o=s.fields.filter((e=>e.name!==n)).map((e=>e.name));let c=0;const u={};for(const m of s.fields)if("esriFieldTypeOID"!==m.type&&"esriFieldTypeGlobalID"!==m.type){const e=f(m);void 0!==e&&(u[m.name]=e)}const d=A(e,o,this._delimiter,O(u,n));for(const f of d){const e=this._parseCoordinateValue(f[t]),l=this._parseCoordinateValue(f[i]);if(null!=l&&null!=e&&!isNaN(e)&&!isNaN(l)){f[t]=e,f[i]=l;for(const e in f)if(e!==t&&e!==i)if(s.isDateField(e))f[e]=w(f[e]);else if(s.isNumericField(e)){const t=Z(f[e]);isNaN(t)?f[e]=null:f[e]=t}f[n]=c,c++,r.push(new W(l,e)),a.push(f)}}if(!m({wkid:4326},l))if(y(l))for(const f of r)[f.x,f.y]=p(f.x,f.y,$);else r=h(N,r,g.WGS84,l,null,null);const F=[];for(let f=0;f<r.length;f++){const{x:e,y:t}=r[f],i=a[f];i[n]=f+1,F.push(new x(new T([],[e,t]),i,null,i[n]))}return F}_parseCoordinateValue(e){if(null==e||""===e)return null;let t=Z(e);return(isNaN(t)||Math.abs(t)>181)&&(t=parseFloat(e)),t}async _checkProjection(e){try{await E(F,e)}catch{throw new s("csv-layer:projection-not-supported","Projection not supported")}}})}}}));
