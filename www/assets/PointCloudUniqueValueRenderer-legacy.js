System.register(["./index-legacy.js"],(function(e,t){"use strict";var o,i,r,s,l,n,p,a,d,u,c,y;return{setters:[e=>{o=e.x,i=e.y,r=e.z,s=e.bX,l=e.c5,n=e.c6,p=e.jR,a=e.ax,d=e.$,u=e.dO,c=e.jS,y=e.jT}],execute:function(){var t;let h=t=class extends s{constructor(){super(...arguments),this.field=null,this.minValue=0,this.maxValue=255}clone(){return new t({field:this.field,minValue:this.minValue,maxValue:this.maxValue})}};o([i({type:String,json:{write:!0}})],h.prototype,"field",void 0),o([i({type:Number,nonNullable:!0,json:{write:!0}})],h.prototype,"minValue",void 0),o([i({type:Number,nonNullable:!0,json:{write:!0}})],h.prototype,"maxValue",void 0),h=t=o([r("esri.renderers.support.pointCloud.ColorModulation")],h);const f=h,m=new l({pointCloudFixedSizeAlgorithm:"fixed-size",pointCloudSplatAlgorithm:"splat"});let b=class extends s{};o([i({type:m.apiValues,readOnly:!0,nonNullable:!0,json:{type:m.jsonValues,read:!1,write:m.write}})],b.prototype,"type",void 0),b=o([r("esri.renderers.support.pointCloud.PointSizeAlgorithm")],b);const v=b;var T;let w=T=class extends v{constructor(){super(...arguments),this.type="fixed-size",this.size=0,this.useRealWorldSymbolSizes=null}clone(){return new T({size:this.size,useRealWorldSymbolSizes:this.useRealWorldSymbolSizes})}};o([n({pointCloudFixedSizeAlgorithm:"fixed-size"})],w.prototype,"type",void 0),o([i({type:Number,nonNullable:!0,json:{write:!0}})],w.prototype,"size",void 0),o([i({type:Boolean,json:{write:!0}})],w.prototype,"useRealWorldSymbolSizes",void 0),w=T=o([r("esri.renderers.support.pointCloud.PointSizeFixedSizeAlgorithm")],w);const j=w;var g;let V=g=class extends v{constructor(){super(...arguments),this.type="splat",this.scaleFactor=1}clone(){return new g({scaleFactor:this.scaleFactor})}};o([n({pointCloudSplatAlgorithm:"splat"})],V.prototype,"type",void 0),o([i({type:Number,value:1,nonNullable:!0,json:{write:!0}})],V.prototype,"scaleFactor",void 0),V=g=o([r("esri.renderers.support.pointCloud.PointSizeSplatAlgorithm")],V);const S={key:"type",base:v,typeMap:{"fixed-size":j,splat:V}},C=p()({pointCloudClassBreaksRenderer:"point-cloud-class-breaks",pointCloudRGBRenderer:"point-cloud-rgb",pointCloudStretchRenderer:"point-cloud-stretch",pointCloudUniqueValueRenderer:"point-cloud-unique-value"});let x=class extends s{constructor(e){super(e),this.type=void 0,this.pointSizeAlgorithm=null,this.colorModulation=null,this.pointsPerInch=10}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}cloneProperties(){return{pointSizeAlgorithm:a(this.pointSizeAlgorithm),colorModulation:a(this.colorModulation),pointsPerInch:a(this.pointsPerInch)}}};o([i({type:C.apiValues,readOnly:!0,nonNullable:!0,json:{type:C.jsonValues,read:!1,write:C.write}})],x.prototype,"type",void 0),o([i({types:S,json:{write:!0}})],x.prototype,"pointSizeAlgorithm",void 0),o([i({type:f,json:{write:!0}})],x.prototype,"colorModulation",void 0),o([i({json:{write:!0},nonNullable:!0,type:Number})],x.prototype,"pointsPerInch",void 0),x=o([r("esri.renderers.PointCloudRenderer")],x),function(e){e.fieldTransformTypeKebabDict=new l({none:"none",lowFourBit:"low-four-bit",highFourBit:"high-four-bit",absoluteValue:"absolute-value",moduloTen:"modulo-ten"})}(x||(x={}));const z=e("c",x);var R;let O=R=class extends s{constructor(){super(...arguments),this.description=null,this.label=null,this.minValue=0,this.maxValue=0,this.color=null}clone(){return new R({description:this.description,label:this.label,minValue:this.minValue,maxValue:this.maxValue,color:a(this.color)})}};o([i({type:String,json:{write:!0}})],O.prototype,"description",void 0),o([i({type:String,json:{write:!0}})],O.prototype,"label",void 0),o([i({type:Number,json:{read:{source:"classMinValue"},write:{target:"classMinValue"}}})],O.prototype,"minValue",void 0),o([i({type:Number,json:{read:{source:"classMaxValue"},write:{target:"classMaxValue"}}})],O.prototype,"maxValue",void 0),o([i({type:d,json:{type:[u],write:!0}})],O.prototype,"color",void 0),O=R=o([r("esri.renderers.support.pointCloud.ColorClassBreakInfo")],O);const P=O;var I;let N=I=class extends z{constructor(e){super(e),this.type="point-cloud-class-breaks",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.colorClassBreakInfos=null}clone(){return new I({...this.cloneProperties(),field:this.field,fieldTransformType:this.fieldTransformType,colorClassBreakInfos:a(this.colorClassBreakInfos),legendOptions:a(this.legendOptions)})}};var D;o([n({pointCloudClassBreaksRenderer:"point-cloud-class-breaks"})],N.prototype,"type",void 0),o([i({json:{write:!0},type:String})],N.prototype,"field",void 0),o([i({type:c,json:{write:!0}})],N.prototype,"legendOptions",void 0),o([i({type:z.fieldTransformTypeKebabDict.apiValues,json:{type:z.fieldTransformTypeKebabDict.jsonValues,read:z.fieldTransformTypeKebabDict.read,write:z.fieldTransformTypeKebabDict.write}})],N.prototype,"fieldTransformType",void 0),o([i({type:[P],json:{write:!0}})],N.prototype,"colorClassBreakInfos",void 0),N=I=o([r("esri.renderers.PointCloudClassBreaksRenderer")],N),e("d",N);let K=D=class extends z{constructor(e){super(e),this.type="point-cloud-stretch",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.stops=null}clone(){return new D({...this.cloneProperties(),field:a(this.field),fieldTransformType:a(this.fieldTransformType),stops:a(this.stops),legendOptions:a(this.legendOptions)})}};var k;o([n({pointCloudStretchRenderer:"point-cloud-stretch"})],K.prototype,"type",void 0),o([i({json:{write:!0},type:String})],K.prototype,"field",void 0),o([i({type:c,json:{write:!0}})],K.prototype,"legendOptions",void 0),o([i({type:z.fieldTransformTypeKebabDict.apiValues,json:{type:z.fieldTransformTypeKebabDict.jsonValues,read:z.fieldTransformTypeKebabDict.read,write:z.fieldTransformTypeKebabDict.write}})],K.prototype,"fieldTransformType",void 0),o([i({type:[y],json:{write:!0}})],K.prototype,"stops",void 0),K=D=o([r("esri.renderers.PointCloudStretchRenderer")],K),e("b",K);let B=k=class extends s{constructor(){super(...arguments),this.description=null,this.label=null,this.values=null,this.color=null}clone(){return new k({description:this.description,label:this.label,values:a(this.values),color:a(this.color)})}};o([i({type:String,json:{write:!0}})],B.prototype,"description",void 0),o([i({type:String,json:{write:!0}})],B.prototype,"label",void 0),o([i({type:[String],json:{write:!0}})],B.prototype,"values",void 0),o([i({type:d,json:{type:[u],write:!0}})],B.prototype,"color",void 0),B=k=o([r("esri.renderers.support.pointCloud.ColorUniqueValueInfo")],B);const q=B;var A;let M=A=class extends z{constructor(e){super(e),this.type="point-cloud-unique-value",this.field=null,this.fieldTransformType=null,this.colorUniqueValueInfos=null,this.legendOptions=null}clone(){return new A({...this.cloneProperties(),field:a(this.field),fieldTransformType:a(this.fieldTransformType),colorUniqueValueInfos:a(this.colorUniqueValueInfos),legendOptions:a(this.legendOptions)})}};o([n({pointCloudUniqueValueRenderer:"point-cloud-unique-value"})],M.prototype,"type",void 0),o([i({json:{write:!0},type:String})],M.prototype,"field",void 0),o([i({type:z.fieldTransformTypeKebabDict.apiValues,json:{type:z.fieldTransformTypeKebabDict.jsonValues,read:z.fieldTransformTypeKebabDict.read,write:z.fieldTransformTypeKebabDict.write}})],M.prototype,"fieldTransformType",void 0),o([i({type:[q],json:{write:!0}})],M.prototype,"colorUniqueValueInfos",void 0),o([i({type:c,json:{write:!0}})],M.prototype,"legendOptions",void 0),M=A=o([r("esri.renderers.PointCloudUniqueValueRenderer")],M),e("a",M)}}}));
