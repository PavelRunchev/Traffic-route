System.register(["./index-legacy.js","./clientSideDefaults-legacy.js","./wfsUtils-legacy.js","./QueryEngineCapabilities-legacy.js","./geojson-legacy.js","./date-legacy.js","./OptimizedGeometry-legacy.js","./xmlUtils-legacy.js"],(function(e,t){"use strict";var r,i,o,s,a,n,l,d,p,u,y,c,m,f,h,g,w,v,F,x,b,O,S,R,I,j,T,C,P,q,E,N,U,_,k,J,W,D,Y,X,H,Q,L,z,G,V,Z,A,$,M,B,K,ee,te,re,ie,oe;return{setters:[e=>{r=e.x,i=e.y,o=e.z,s=e.ex,a=e.A,n=e.E,l=e.aQ,d=e.s,p=e.d3,u=e.d9,y=e.ed,c=e.ai,m=e.w,f=e.aZ,h=e.f6,g=e.dG,w=e.f7,v=e.f8,F=e.bs,x=e.dD,b=e.dd,O=e.bt,S=e.de,R=e.df,I=e.dg,j=e.bc,T=e.f9,C=e.f4,P=e.d2,q=e.dV,E=e.ao,N=e.fa,U=e.az,_=e.dM,k=e.e5,J=e.dN,W=e.fb,D=e.fc,Y=e.fd,X=e.di,H=e.dO,Q=e.g3,L=e.ff,z=e.F,G=e.fg,V=e.fh,Z=e.fi,A=e.dj,$=e.fk,M=e.bw},e=>{B=e.l,K=e.o},e=>{ee=e.v,te=e.Y,re=e.z,ie=e.W,oe=e.S},null,null,null,null,null],execute:function(){let t=class extends s{constructor(){super(...arguments),this._connection=null,this._workerHandler=null,this.capabilities=B(!1,!1),this.type="wfs",this.refresh=a((async()=>{await this.load();const e={customParameters:this.layer.customParameters,maxRecordCount:this.layer.maxRecordCount,maxTotalRecordCount:this.layer.maxTotalRecordCount,maxPageCount:this.layer.maxPageCount},{extent:t}=await this._workerHandler.refresh(e);return t&&(this.sourceJSON.extent=t),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}}))}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:t})),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null,this._workerHandler=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){const r=await this.queryFeaturesJSON(e,t);return n.fromJSON(r)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._workerHandler.queryFeatures(e?e.toJSON():void 0,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._workerHandler.queryFeatureCount(e?e.toJSON():void 0,t)}async queryObjectIds(e,t={}){return await this.load(t),this._workerHandler.queryObjectIds(e?e.toJSON():void 0,t)}async queryExtent(e,t={}){await this.load(t);const r=await this._workerHandler.queryExtent(e?e.toJSON():void 0,t);return{count:r.count,extent:l.fromJSON(r.extent)}}async querySnapping(e,t={}){return await this.load(t),this._workerHandler.querySnapping(e,t)}async _createLoadOptions(e){const{url:t,customParameters:r,name:i,namespaceUri:o,fields:s,geometryType:a,maxRecordCount:n,maxPageCount:l,maxTotalRecordCount:u,swapXY:y}=this.layer,c="defaults"===this.layer.originOf("spatialReference")?void 0:this.layer.spatialReference;if(!t)throw new d("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await ee(t,{customParameters:r,...e}));const m=["fields","geometryType","name","namespaceUri","swapXY"].some((e=>null==this.layer[e])),f=m?await te(this.wfsCapabilities,i,o,{spatialReference:c,customParameters:r,signal:e?.signal}):{...re(s??[]),geometryType:a,name:i,namespaceUri:o,spatialReference:c,swapXY:y},h=ie(this.wfsCapabilities.readFeatureTypes(),f.name,f.namespaceUri),g=p.toJSON(f.geometryType),{operations:w}=this.wfsCapabilities,v=w.GetFeature.url,F=w.GetFeature.outputFormat;return{customParameters:r,featureType:h,fields:f.fields?.map((e=>e.toJSON()))??[],geometryField:f.geometryField,geometryType:g,getFeatureUrl:v,getFeatureOutputFormat:F,maxRecordCount:n,maxPageCount:l,maxTotalRecordCount:u,objectIdField:f.objectIdField,spatialReference:f.spatialReference?.toJSON(),swapXY:!!f.swapXY}}async _startWorker(e){const[t,r]=await u([this._createLoadOptions(e),y("WFSSourceWorker",{...e,strategy:c("feature-layers-workers")?"dedicated":"local",registryTarget:this})]),i=t.error||r.error||null,o=r.value||null;if(i)throw o&&o.close(),i;const s=t.value;this._connection=r.value,this._workerHandler=this._connection.createInvokeProxy();const a=await this._workerHandler.load(s,e);for(const n of a.warnings)m.getLogger(this.layer).warn("#load()",`${n.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:n});this.sourceJSON={dateFieldsTimeReference:{timeZoneIANA:f},extent:a.extent,fields:s.fields,geometryType:s.geometryType,objectIdField:s.objectIdField,geometryField:s.geometryField,drawingInfo:K(s.geometryType),name:s.featureType.title,wfsInfo:{name:s.featureType.name,featureUrl:s.getFeatureUrl,maxFeatures:s.maxRecordCount,swapXY:s.swapXY,supportedSpatialReferences:s.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:s.featureType.namespaceUri}}}};var se;r([i()],t.prototype,"capabilities",void 0),r([i({constructOnly:!0})],t.prototype,"layer",void 0),r([i()],t.prototype,"sourceJSON",void 0),r([i()],t.prototype,"type",void 0),r([i()],t.prototype,"wfsCapabilities",void 0),t=r([o("esri.layers.graphics.sources.WFSSource")],t);const ae=$();let ne=se=class extends(h(g(w(v(F(x(b(O(S(R(I(M)))))))))))){static fromWFSLayerInfo(e){const{customParameters:t,fields:r,geometryField:i,geometryType:o,name:s,namespaceUri:a,objectIdField:n,spatialReference:l,swapXY:d,url:p,wfsCapabilities:u}=e;return new se({customParameters:t,fields:r,geometryField:i,geometryType:o,name:s,namespaceUri:a,objectIdField:n,spatialReference:l,swapXY:d,url:p,wfsCapabilities:u})}constructor(e){super(e),this.copyright=null,this.customParameters=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxRecordCount=3e3,this.maxPageCount=10,this.maxTotalRecordCount=2e5,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new t({layer:this}),this.spatialReference=j.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}destroy(){this.source?.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then((()=>this.source.load(e))).then((()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),T(this.renderer,this.fieldsIndex),C(this.timeInfo,this.fieldsIndex)}))),Promise.resolve(this)}get capabilities(){return this.source?.capabilities}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,t,r){const i=e.filter((e=>e.name!==oe));this.geometryField&&i.unshift(new P({name:this.geometryField,alias:this.geometryField,type:"geometry"})),q(r,i.map((e=>e.toJSON())),t)}get parsedUrl(){return E(this.url)}set renderer(e){T(e,this.fieldsIndex),this._set("renderer",e)}get wfsCapabilities(){return this.source?.wfsCapabilities}set wfsCapabilities(e){this.source&&(this.source.wfsCapabilities=e)}createPopupTemplate(e){return N(this,e)}createQuery(){const e=new U;e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:t,timeExtent:r}=this;return e.timeExtent=null!=t&&null!=r?r.offset(-t.value,t.unit):r||null,e}getFieldDomain(e,t){return this.getField(e)?.domain}getField(e){return this.fieldsIndex?.get(e)}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(U.from(e)||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(U.from(e)||this.createQuery(),t)))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(U.from(e)||this.createQuery(),t)))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(U.from(e)||this.createQuery(),t)))}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh();return null!=t&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};r([i({readOnly:!0})],ne.prototype,"capabilities",null),r([i({type:String})],ne.prototype,"copyright",void 0),r([i({readOnly:!0})],ne.prototype,"createQueryVersion",null),r([i({json:{name:"wfsInfo.customParameters",write:{overridePolicy:e=>({enabled:!!(e&&Object.keys(e).length>0),ignoreOrigin:!0})}}})],ne.prototype,"customParameters",void 0),r([i(_("dateFieldsTimeReference"))],ne.prototype,"dateFieldsTimeZone",void 0),r([i({readOnly:!0})],ne.prototype,"defaultPopupTemplate",null),r([i({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],ne.prototype,"definitionExpression",void 0),r([i({type:String})],ne.prototype,"displayField",void 0),r([i(k)],ne.prototype,"elevationInfo",void 0),r([i({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"featureUrl",void 0),r([i({type:[P],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],ne.prototype,"fields",void 0),r([J("fields")],ne.prototype,"writeFields",null),r([i(ae.fieldsIndex)],ne.prototype,"fieldsIndex",void 0),r([i({type:l,json:{name:"extent"}})],ne.prototype,"fullExtent",void 0),r([i()],ne.prototype,"geometryField",void 0),r([i({type:String,json:{read:{source:"layerDefinition.geometryType",reader:p.read},write:{target:"layerDefinition.geometryType",writer:p.write,ignoreOrigin:!0},origins:{service:{read:p.read}}}})],ne.prototype,"geometryType",void 0),r([i({type:String})],ne.prototype,"id",void 0),r([i(W)],ne.prototype,"labelsVisible",void 0),r([i({type:[D],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:Y},write:!0}})],ne.prototype,"labelingInfo",void 0),r([i(X)],ne.prototype,"legendEnabled",void 0),r([i({type:["show","hide"]})],ne.prototype,"listMode",void 0),r([i({type:String})],ne.prototype,"objectIdField",void 0),r([i({type:["WFS"]})],ne.prototype,"operationalLayerType",void 0),r([i({type:H,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"maxRecordCount",void 0),r([i({type:H})],ne.prototype,"maxPageCount",void 0),r([i({type:H})],ne.prototype,"maxTotalRecordCount",void 0),r([i({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],ne.prototype,"mode",void 0),r([i({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"name",void 0),r([i({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"namespaceUri",void 0),r([i(Q)],ne.prototype,"opacity",void 0),r([i(ae.outFields)],ne.prototype,"outFields",void 0),r([i({readOnly:!0})],ne.prototype,"parsedUrl",null),r([i(L)],ne.prototype,"popupEnabled",void 0),r([i({type:z,json:{name:"popupInfo",write:!0}})],ne.prototype,"popupTemplate",void 0),r([i({types:G,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:V,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],ne.prototype,"renderer",null),r([i(Z)],ne.prototype,"screenSizePerspectiveEnabled",void 0),r([i({readOnly:!0})],ne.prototype,"source",void 0),r([i({type:j,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],ne.prototype,"spatialReference",void 0),r([i({readOnly:!0,type:[H],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"spatialReferences",void 0),r([i({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"swapXY",void 0),r([i({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],ne.prototype,"title",void 0),r([i({json:{read:!1},readOnly:!0})],ne.prototype,"type",void 0),r([i(A)],ne.prototype,"url",void 0),r([i({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"version",void 0),r([i()],ne.prototype,"wfsCapabilities",null),ne=se=r([o("esri.layers.WFSLayer")],ne),e("default",ne)}}}));
